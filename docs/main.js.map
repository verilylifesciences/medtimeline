{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cardcontainer/cardcontainer.component.css","webpack:///./src/app/cardcontainer/cardcontainer.component.html","webpack:///./src/app/cardcontainer/cardcontainer.component.ts","webpack:///./src/app/cardtypes/card/card.component.css","webpack:///./src/app/cardtypes/card/card.component.html","webpack:///./src/app/cardtypes/card/card.component.ts","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component.html","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component.ts","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.css","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.html","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.ts","webpack:///./src/app/cardtypes/legendstyles.css","webpack:///./src/app/cardtypes/multigraphcard/multigraphcard.component.ts","webpack:///./src/app/cardtypes/multigraphcard/multigraphcard.html","webpack:///./src/app/cardtypes/textboxcard/textboxcard.component.html","webpack:///./src/app/cardtypes/textboxcard/textboxcard.component.ts","webpack:///./src/app/clinicalconcepts/bch-microbio-code.ts","webpack:///./src/app/clinicalconcepts/display-grouping.ts","webpack:///./src/app/clinicalconcepts/loinc-code.ts","webpack:///./src/app/clinicalconcepts/resource-code-group.ts","webpack:///./src/app/clinicalconcepts/resource-code-manager.ts","webpack:///./src/app/clinicalconcepts/rx-norm-group.ts","webpack:///./src/app/clinicalconcepts/rx-norm.ts","webpack:///./src/app/confirm-save/confirm-save.component.css","webpack:///./src/app/confirm-save/confirm-save.component.html","webpack:///./src/app/confirm-save/confirm-save.component.ts","webpack:///./src/app/data-selector-element/data-selector-element.component.css","webpack:///./src/app/data-selector-element/data-selector-element.component.html","webpack:///./src/app/data-selector-element/data-selector-element.component.ts","webpack:///./src/app/data-selector-menu/data-selector-menu.component.css","webpack:///./src/app/data-selector-menu/data-selector-menu.component.html","webpack:///./src/app/data-selector-menu/data-selector-menu.component.ts","webpack:///./src/app/date_utils.ts","webpack:///./src/app/debugger.service.ts","webpack:///./src/app/debugger/debugger.component.html","webpack:///./src/app/debugger/debugger.component.ts","webpack:///./src/app/delete-dialog/delete-dialog.component.html","webpack:///./src/app/delete-dialog/delete-dialog.component.ts","webpack:///./src/app/fhir-data-classes/annotated-observation.ts","webpack:///./src/app/fhir-data-classes/diagnostic-report.ts","webpack:///./src/app/fhir-data-classes/dosage.ts","webpack:///./src/app/fhir-data-classes/encounter.ts","webpack:///./src/app/fhir-data-classes/medication-administration.ts","webpack:///./src/app/fhir-data-classes/medication-order.ts","webpack:///./src/app/fhir-data-classes/medication.ts","webpack:///./src/app/fhir-data-classes/observation-interpretation-valueset.ts","webpack:///./src/app/fhir-data-classes/observation-set.ts","webpack:///./src/app/fhir-data-classes/observation.ts","webpack:///./src/app/fhir-data-classes/specimen.ts","webpack:///./src/app/fhir-http.service.ts","webpack:///./src/app/fhir-launch/fhir-launch.component.css","webpack:///./src/app/fhir-launch/fhir-launch.component.html","webpack:///./src/app/fhir-launch/fhir-launch.component.ts","webpack:///./src/app/fhir-resource-set.ts","webpack:///./src/app/fhir.service.ts","webpack:///./src/app/graphdatatypes/customizabledata.ts","webpack:///./src/app/graphdatatypes/graphdata.ts","webpack:///./src/app/graphdatatypes/labeled-series.ts","webpack:///./src/app/graphdatatypes/linegraphdata.ts","webpack:///./src/app/graphdatatypes/microbiographdata.ts","webpack:///./src/app/graphdatatypes/stepgraphdata.ts","webpack:///./src/app/graphtypes/axis-group.ts","webpack:///./src/app/graphtypes/axis.ts","webpack:///./src/app/graphtypes/customizable-graph/customizable-graph-annotation.ts","webpack:///./src/app/graphtypes/customizable-graph/customizable-graph.component.ts","webpack:///./src/app/graphtypes/graph.css","webpack:///./src/app/graphtypes/graph/graph.component.html","webpack:///./src/app/graphtypes/graph/graph.component.ts","webpack:///./src/app/graphtypes/legend-info.ts","webpack:///./src/app/graphtypes/linegraph/linegraph.component.ts","webpack:///./src/app/graphtypes/microbio-graph/microbio-graph.component.ts","webpack:///./src/app/graphtypes/scatterplot/scatterplot.component.ts","webpack:///./src/app/graphtypes/stepgraph/stepgraph.component.ts","webpack:///./src/app/graphtypes/tooltips/medication-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/microbio-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/observation-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/tooltip.ts","webpack:///./src/app/help-dialog/help-dialog.component.css","webpack:///./src/app/help-dialog/help-dialog.component.html","webpack:///./src/app/help-dialog/help-dialog.component.ts","webpack:///./src/app/mock-fhir.service.ts","webpack:///./src/app/setup-data.service.ts","webpack:///./src/app/setup/setup.component.css","webpack:///./src/app/setup/setup.component.html","webpack:///./src/app/setup/setup.component.ts","webpack:///./src/app/smart-on-fhir-client.ts","webpack:///./src/app/theme/verily_colors.ts","webpack:///./src/app/timeline-controller/timeline-controller.component.css","webpack:///./src/app/timeline-controller/timeline-controller.component.html","webpack:///./src/app/timeline-controller/timeline-controller.component.ts","webpack:///./src/app/timeline-toolbar/timeline-toolbar.component.html","webpack:///./src/app/timeline-toolbar/timeline-toolbar.component.ts","webpack:///./src/app/unit_utils.ts","webpack:///./src/constants.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CardcontainerComponent} from './cardcontainer/cardcontainer.component';\nimport {FhirLaunchComponent} from './fhir-launch/fhir-launch.component';\nimport {SetupComponent} from './setup/setup.component';\n\n/* On their end, it's locked down so that the only acceptable redirect\nURL is localhost:8000/. So, we have to do a different path for\nauthentication. */\nconst routes: Routes = [\n  {path: 'main', component: CardcontainerComponent},\n  {path: 'setup', component: SetupComponent},\n  {path: '', component: FhirLaunchComponent}, {path: '**', redirectTo: ''}\n];\n\n\n@NgModule({exports: [RouterModule], imports: [RouterModule.forRoot(routes)]})\n\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<title>MedTimeLine</title>\\n<router-outlet></router-outlet>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component} from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport 'fhirclient';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n// tslint:disable-next-line:max-line-length\nimport {MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCheckbox, MatCheckboxModule, MatDatepickerModule, MatDialogModule, MatDividerModule, MatListModule, MatMenuModule, MatNativeDateModule, MatProgressSpinnerModule, MatRadioModule, MatSnackBarModule, MatStepperModule, MatToolbarModule, MatTooltipModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {ChartsModule} from 'ng2-charts';\nimport {DragulaModule} from 'ng2-dragula';\nimport {NgxDaterangepickerMd} from 'ngx-daterangepicker-material';\nimport {DeviceDetectorModule} from 'ngx-device-detector';\nimport {UI_CONSTANTS, UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {environment} from '../environments/environment';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CardcontainerComponent} from './cardcontainer/cardcontainer.component';\nimport {CardComponent} from './cardtypes/card/card.component';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableTimelineDialogComponent} from './cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component';\nimport {CustomizableTimelineComponent} from './cardtypes/customizable-timeline/customizable-timeline.component';\nimport {MultiGraphCardComponent} from './cardtypes/multigraphcard/multigraphcard.component';\nimport {TextboxcardComponent} from './cardtypes/textboxcard/textboxcard.component';\nimport {ResourceCodeManager} from './clinicalconcepts/resource-code-manager';\nimport {ConfirmSaveComponent} from './confirm-save/confirm-save.component';\nimport {DataSelectorElementComponent} from './data-selector-element/data-selector-element.component';\nimport {DataSelectorMenuComponent} from './data-selector-menu/data-selector-menu.component';\nimport {DebuggerComponent} from './debugger/debugger.component';\nimport {DeleteDialogComponent} from './delete-dialog/delete-dialog.component';\nimport {FhirHttpService} from './fhir-http.service';\nimport {FhirLaunchComponent} from './fhir-launch/fhir-launch.component';\nimport {FhirService} from './fhir.service';\nimport {CustomizableGraphComponent} from './graphtypes/customizable-graph/customizable-graph.component';\nimport {LineGraphComponent} from './graphtypes/linegraph/linegraph.component';\nimport {MicrobioGraphComponent} from './graphtypes/microbio-graph/microbio-graph.component';\nimport {ScatterplotComponent} from './graphtypes/scatterplot/scatterplot.component';\nimport {StepGraphComponent} from './graphtypes/stepgraph/stepgraph.component';\nimport {HelpDialogComponent} from './help-dialog/help-dialog.component';\nimport {MockFhirService} from './mock-fhir.service';\nimport {SetupComponent} from './setup/setup.component';\nimport {SMART_ON_FHIR_CLIENT} from './smart-on-fhir-client';\nimport {TimelineControllerComponent} from './timeline-controller/timeline-controller.component';\nimport {TimelineToolbarComponent} from './timeline-toolbar/timeline-toolbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FhirLaunchComponent,\n    CardcontainerComponent,\n    TextboxcardComponent,\n    LineGraphComponent,\n    ScatterplotComponent,\n    StepGraphComponent,\n    MultiGraphCardComponent,\n    TimelineControllerComponent,\n    CustomizableTimelineComponent,\n    CustomizableGraphComponent,\n    CustomizableTimelineDialogComponent,\n    MicrobioGraphComponent,\n    TimelineToolbarComponent,\n    DataSelectorElementComponent,\n    DataSelectorMenuComponent,\n    HelpDialogComponent,\n    CardComponent,\n    DeleteDialogComponent,\n    DebuggerComponent,\n    SetupComponent,\n    ConfirmSaveComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    HttpClientModule,\n    MatListModule,\n    MatDividerModule,\n    MatIconModule,\n    NoopAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatTooltipModule,\n    FlexLayoutModule.withConfig({useColumnBasisZero: false}),\n    MatDialogModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    NgxDaterangepickerMd.forRoot({}),\n    MatButtonToggleModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    ChartsModule,\n    DragulaModule.forRoot(),\n    AppRoutingModule,\n    DeviceDetectorModule.forRoot(),\n  ],\n  providers: [\n    // This sets up a provider for the smart on fhir client defined by\n    // assets/fhir-client.min.js (defined as symbol `FHIR`) so that it can be\n    // injected into the service that uses it to allow for easier testing.\n    {provide: SMART_ON_FHIR_CLIENT, useValue: FHIR}, {\n      provide: FhirService,\n      useClass: environment.useMockServer ? MockFhirService : FhirHttpService\n    },\n    {provide: ResourceCodeManager, useClass: ResourceCodeManager},\n    {provide: UI_CONSTANTS_TOKEN, useValue: UI_CONSTANTS}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    CustomizableTimelineDialogComponent, HelpDialogComponent,\n    DeleteDialogComponent, ConfirmSaveComponent\n  ]\n})\nexport class AppModule {\n}\n","module.exports = \".cardContainer {\\n  background-color: #202020; /* GREY_900 */\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  padding: 15px;\\n  width: 100%;\\n  min-height: 100%;\\n  height: 100%;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column; /* For IE10 */\\n  /* Disable selecting/highlighting on the page. */\\n  -webkit-touch-callout: none; /* iOS Safari */\\n  -webkit-user-select: none; /* Safari */\\n     -moz-user-select: none; /* Firefox */\\n      -ms-user-select: none; /* Internet Explorer/Edge */\\n          user-select: none; /* Chrome and Opera */\\n}\\n\\n.draggable {\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox;\\n  height: 100%;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column; /* For IE10 */\\n}\\n\\n.flexSpacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 0%;\\n  -ms-flex: 1 1 0%; /* For IE10 */\\n}\\n\\n::ng-deep .mat-toolbar, .mat-toolbar h1, .mat-toolbar h2, .mat-toolbar h3, .mat-toolbar h4, .mat-toolbar h5, .mat-toolbar h6, .mat-toolbar-row, .mat-toolbar-single-row {\\n  display: -ms-flexbox; /* For IE10 */\\n}\\n\\n.mat-toolbar {\\n   /* Deep Purple 800 to Pink 900 */\\n  background-image: -webkit-gradient(linear, left top, right top, from(#4527A0) , to(#870D4E));\\n  background-image: linear-gradient(to right, #4527A0 , #870D4E);\\n  color: white;\\n}\\n\\n::ng-deep .gu-unselectable app-data-selector-menu {\\n  /* Hide the data selector menus while a card is being dragged. */\\n  opacity: 0 !important;\\n}\\n\\n.makeGutters {\\n  padding-right: 100px;\\n  padding-left: 100px;\\n}\\n\\n::ng-deep .mat-toolbar-single-row {\\n  white-space: unset !important;\\n}\\n\\n::ng-deep .timelineToolbarMain {\\n  float: right;\\n  margin-right: 15px;\\n  display: -ms-flexbox;  /* For IE10 */\\n}\\n\\n::ng-deep app-card {\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -ms-flex-direction: row;\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n}\\n\\n::ng-deep app-data-selector-menu {\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -ms-flex-direction: row;\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n}\\n\"","module.exports = \"<mat-toolbar>\\n  <app-timeline-controller (changeDateRange)=\\\"changeDateRange($event)\\\" [encounters]=\\\"this.setupDataService.encounters\\\"\\n    [selectedEncounter]=\\\"this.setupDataService.selectedEncounter\\\"></app-timeline-controller>\\n  <!--Push the buttons to the right and left sides.-->\\n  <div fxFlex class=\\\"flexSpacer\\\"></div>\\n  <app-timeline-toolbar (saveSnapshot)=\\\"snapshot()\\\" (addTextbox)=\\\"addTextbox()\\\">\\n  </app-timeline-toolbar>\\n</mat-toolbar>\\n<div *ngIf=\\\"useDebugger\\\">\\n  <app-debugger></app-debugger>\\n</div>\\n<div fxLayout=\\\"column\\\" class=\\\"cardContainer makeGutters\\\" fxLayoutAlign=\\\"start\\\">\\n  <app-data-selector-menu (addCard)=\\\"addConceptCard($event)\\\" (addTextbox)=\\\"addTextbox()\\\"\\n    (addCustomTimeline)=\\\"addCustomTimeline()\\\"></app-data-selector-menu>\\n  <div fxLayout=\\\"column\\\" dragula=\\\"graphcards\\\" class=\\\"draggable\\\">\\n    <div *ngFor=\\\"let element of displayedConcepts\\\" [attr.data-index]=\\\"element['id']\\\" class=\\\"displayedConcept\\\">\\n      <app-textboxcard *ngIf=\\\"element['concept'] ==='textbox'\\\" [id]=\\\"element['id']\\\" [noteString]=\\\"element['value']\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\"></app-textboxcard>\\n      <app-customizable-timeline *ngIf=\\\"element['concept']==='customTimeline'\\\" [id]=\\\"element['id']\\\"\\n        [dateRange]=\\\"dateRange\\\" [deletedData]=\\\"element['value']\\\" (updateEventLines)=\\\"updateEventLines($event)\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\">\\n      </app-customizable-timeline>\\n      <app-multigraphcard *ngIf=\\\"element['concept'] !=='textbox' && element['concept'] !== 'customTimeline'\\\"\\n        [axisGroup]=\\\"element['concept']\\\" [dateRange]=\\\"dateRange\\\" [eventlines]=\\\"eventlines\\\" [id]=\\\"element['id']\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\">\\n      </app-multigraphcard>\\n      <app-data-selector-menu (addCard)=\\\"addConceptCard($event, element['id'])\\\" (addTextbox)=\\\"addTextbox(element['id'])\\\"\\n        (addCustomTimeline)=\\\"addCustomTimeline(element['id'])\\\"></app-data-selector-menu>\\n    </div>\\n  </div>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MatSnackBar} from '@angular/material';\nimport html2canvas from 'html2canvas';\nimport {DateTime, Interval} from 'luxon';\nimport {DragulaService} from 'ng2-dragula';\nimport {Subscription} from 'rxjs';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\nimport {v4 as uuid} from 'uuid';\n\nimport {environment} from '../../environments/environment';\nimport {ResourceCodeManager} from '../clinicalconcepts/resource-code-manager';\nimport {ConfirmSaveComponent} from '../confirm-save/confirm-save.component';\nimport {DeleteDialogComponent} from '../delete-dialog/delete-dialog.component';\nimport {FhirService} from '../fhir.service';\nimport {CustomizableData} from '../graphdatatypes/customizabledata';\nimport {AxisGroup} from '../graphtypes/axis-group';\nimport {ChartType} from '../graphtypes/graph/graph.component';\nimport {SetupDataService} from '../setup-data.service';\n\n@Component({\n  selector: 'app-cardcontainer',\n  templateUrl: './cardcontainer.component.html',\n  styleUrls: ['./cardcontainer.component.css'],\n  entryComponents: [DeleteDialogComponent],\n})\nexport class CardcontainerComponent {\n  // How long to display the snack bar for.\n  private readonly DISPLAY_TIME = 6000;\n\n  // Whether or not to display the debugger.\n  useDebugger = environment.useDebugger;\n\n  /**\n   * The format of each object in the array is an object representing a line\n   * drawn on the chart, that has a value, text, and class field. The value\n   * field represents the x-position of the line to be drawn, while the class\n   * represents the class name, and the text represents the text displayed near\n   * the line.\n   */\n  eventlines: Array<{[key: string]: number | string}> = [];\n\n  // The concepts that are actually being displayed on the page.\n  // We keep track of unique ids for each displayed card, to allow removal on\n  // clicking the trashcan icon.\n\n  readonly displayedConcepts:\n      Array<{[key: string]: AxisGroup | string | CustomizableData}> = [];\n\n  // The original concepts to duplicate, if necessary.\n  readonly originalConcepts: AxisGroup[];\n\n  // Hold an instance of this enum so that the HTML template can access it.\n  readonly chartType = ChartType;\n\n  /**\n   * By default make the date range displayed the past seven days.\n   */\n  dateRange: Interval =\n      Interval.fromDateTimes(DateTime.utc().minus({days: 7}), DateTime.utc());\n\n  // Holds a subscription to the observable sequence of events emitted by the\n  // Dragula Service.\n  private readonly subs = new Subscription();\n\n  // Holds the most recently removed card from the container, mapping the index\n  // of the displayed card to the displayedConcept value.\n  private recentlyRemoved:\n      [number, {[key: string]: AxisGroup | string | CustomizableData}];\n\n  // The reference for the Delete Card Dialog opened.\n  private deleteDialogRef: MatDialogRef<DeleteDialogComponent>;\n\n  // The reference for the Save Snapshot Dialog opened.\n  private saveDialogRef: MatDialogRef<ConfirmSaveComponent>;\n\n  // A map of custom timeline id to the event lines corresponding to that\n  // timeline.\n  private eventsForCustomTimelines =\n      new Map<string, Array<{[key: string]: number | string}>>();\n\n  constructor(\n      dragulaService: DragulaService,\n      private fhirService: FhirService,\n      resourceCodeManager: ResourceCodeManager,\n      private snackBar: MatSnackBar,\n      private deleteDialog: MatDialog,\n      readonly setupDataService: SetupDataService,\n      private saveDialog: MatDialog,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any,\n  ) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    /* Load in the concepts to display, flattening them all into a\n     * single-depth array. */\n    this.originalConcepts = Array.from(displayGroups.values())\n                                .reduce((acc, val) => acc.concat(val), []);\n    this.setUpCards();\n    this.setUpDrag(dragulaService);\n  }\n\n  private setUpCards() {\n    // Add a textbox at the top of the card list.\n    this.addTextbox();\n    // Add a custom timeline to the top of the card list.\n    this.addCustomTimeline();\n    // Add all cards selected at the set-up screen.\n    for (const concept of this.setupDataService.selectedConcepts) {\n      this.displayedConcepts.push({'id': uuid(), 'concept': concept});\n    }\n  }\n\n  // Ensures that the order of displayed concepts is updated as the user drags\n  // cards around.\n  private setUpDrag(dragulaService: DragulaService) {\n    this.subs.add(dragulaService.drop('graphcards').subscribe((value) => {\n      // Rearrange the order of this.displayedConcepts if graph/textbox\n      // cards are reordered. We do not use dragulaModel since we cannot use\n      // it for separate lists on the configuration panel.\n      let originalIndex = this.displayedConcepts.map(x => x.id).indexOf(\n          value.el.getAttribute('data-index'));\n      const siblingIndex = this.getSiblingIdx(value);\n      const elementDisplayed = this.displayedConcepts[originalIndex];\n      // Add the element to its new position.\n      this.displayedConcepts.splice(siblingIndex, 0, elementDisplayed);\n      // Adjust the original position if needed.\n      if (siblingIndex < originalIndex) {\n        originalIndex++;\n      }\n      this.displayedConcepts.splice(originalIndex, 1);\n      // Record the user moving a card to Google Analytics.\n      (<any>window).gtag('event', 'moveCard', {\n        'event_category': 'moveCard',\n        'event_label':\n            ((typeof elementDisplayed === 'string') ? elementDisplayed :\n                                                      elementDisplayed.label)\n      });\n    }));\n  }\n\n  /**\n   * Gets the index of the card below a dragged-and-dropped card's new place.\n   */\n  private getSiblingIdx(value): number {\n    let siblingIndex;\n    if (value.sibling === null) {\n      // Dragged to bottom of list\n      siblingIndex = this.displayedConcepts.length;\n    } else {\n      const siblingId = value.sibling.getAttribute('data-index');\n      siblingIndex = this.displayedConcepts.map(x => x.id).indexOf(siblingId);\n    }\n    return siblingIndex;\n  }\n\n  /**\n   * Adds a new annotation box to the card panel.\n   * @param id: The id of the card above the position of the new annotation box.\n   */\n  addTextbox(id?: string) {\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(index, 0, {id: uuid(), concept: 'textbox'});\n  }\n\n  /**\n   * Adds a new custom timeline to the card panel.\n   * @param id: The id of the card above the position of the new annotation box.\n   */\n  addCustomTimeline(id?: string) {\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(\n        index, 0, {id: uuid(), concept: 'customTimeline'});\n  }\n\n  // Listen for an event indicating that the date range has been changed on the\n  // UI, and update the date range.\n  changeDateRange($event) {\n    this.dateRange = $event;\n  }\n\n  // Saves a snapshot of the graph drawer HTML to the EHR using a FhirService.\n  snapshot() {\n    html2canvas(document.body).then((canvas) => {\n      this.saveDialogRef = this.saveDialog.open(\n          ConfirmSaveComponent, {data: canvas, height: '80%'});\n\n      this.saveDialogRef.afterClosed().subscribe(result => {\n        // Only save the snapshot to the EHR if the user confirmed the save.\n        if (result) {\n          const date = DateTime.fromJSDate(new Date()).toISO();\n          this.fhirService.saveStaticNote(canvas, date);\n          this.snackBar.open(\n              this.uiConstants.SAVED_TO_POWERCHART, this.uiConstants.DISMISS, {\n                duration: this.DISPLAY_TIME,  // Wait 6 seconds before\n                                              // dismissing the snack bar.\n              });\n\n        // Record the user saving a snapshot to Google Analytics.\n        (<any>window).gtag('event', 'saveStaticSnapshot', {\n          'event_category': 'save',\n          'event_label': new Date().toDateString()\n        });\n        }\n      });\n    });\n  }\n\n  // Listen for an event indicating that a \"delete\" button has been clicked on a\n  // card currently displayed, and update the displayed concepts\n  // accordingly after asking for confirmation of deletion.\n  removeDisplayedCard($event) {\n    const index = this.displayedConcepts.map(x => x.id).indexOf($event.id);\n    const concept = this.displayedConcepts[index];\n    concept.value = $event.value;\n    this.deleteDialogRef = this.deleteDialog.open(DeleteDialogComponent);\n    this.deleteDialogRef.afterClosed().subscribe(result => {\n      // The user wishes to delete the card.\n      if (result) {\n        this.displayedConcepts.splice(index, 1);\n        this.recentlyRemoved = [index, concept];\n        this.openSnackBar();\n        if (this.eventsForCustomTimelines.get($event.id)) {\n          // We only remove the event lines for this CustomTimeline if the user\n          // confirms the deletion of the card.\n          this.updateEventLines({id: $event.id});\n        }\n      }\n    });\n  }\n\n  // Open a snack bar allowing for the user to potentially reverse the removal\n  // of cards from the page. Only one snack bar can be opened at a time.\n  private openSnackBar() {\n    const message = this.uiConstants.CARD_REMOVED;\n    const snackBarRef = this.snackBar.open(message, this.uiConstants.UNDO, {\n      duration:\n          this.DISPLAY_TIME,  // Wait 6 seconds before dismissing the snack bar.\n    });\n    // Undo the most recent deletion according to what is stored in\n    // recentlyRemoved.\n    snackBarRef.onAction().subscribe(() => {\n      const index = this.recentlyRemoved[0];\n      this.displayedConcepts.splice(index, 0, this.recentlyRemoved[1]);\n      if (this.displayedConcepts[index].concept === 'customTimeline') {\n        this.updateEventLines({\n          id: this.displayedConcepts[0].id,\n          data: this.displayedConcepts[0].value\n        });\n      }\n      // Record the user undoing a deletion to Google Analytics.\n      (<any>window).gtag('event', 'undoDelete', {\n        'event_category': 'deleteCard',\n        'event_label': Array.from(this.recentlyRemoved.values()).toString()\n      });\n    });\n  }\n\n  /**\n   * Listens for an event indicating that the user has selected to add the\n   * concept card from the top toolbar. The card is added at the top of the\n   * page, or, if the id of the closest card is specified, below the closest\n   * card.\n   * @param label The label of the new concept to add.\n   * @param id The id of the card below which to add the new concept.\n   */\n\n  addConceptCard(label: string, id?: string) {\n    const graphCardValue =\n        this.originalConcepts.find(obj => (obj.label === label));\n    // Insert the card at the top of the page\n    // Insert after the closest card rather than before the card.\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(\n        index, 0, {id: uuid(), concept: graphCardValue});\n  }\n\n  /**\n   * Listens for an event indicating that the user has edited the points on a\n   * custom timeline, and updates the x-axis eventlines displayed on all other\n   * charts.\n   * @param $event The updated CustomizableData from which we calculate event\n   *     lines for each chart to display, along with the id of the updated.\n   *\n   */\n\n  updateEventLines($event) {\n    let times = [];\n    if ($event.data) {\n      times = Array.from($event.data.annotations.keys()).map(x => Number(x));\n    }\n    const eventlines = times.map(x => {\n      return {\n        value: x,\n        text: $event.data.annotations.get(x).title,\n        color: $event.data.annotations.get(x).color.hex()\n      };\n    });\n    this.eventsForCustomTimelines.set($event.id, eventlines);\n\n    // Consolidate all event lines from all custom timelines.\n    let allEvents = [];\n    for (const events of Array.from(this.eventsForCustomTimelines.values())) {\n      allEvents = allEvents.concat(events);\n    }\n    this.eventlines = allEvents;\n  }\n}\n","module.exports = \".mat-card {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n  margin-top:0px;\\n  margin-bottom:0px;\\n  margin-left: 35px; /* Leave space for the \\\"add card\\\" button. */\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  padding-right: 20px;\\n  padding-left: 0px;\\n  -webkit-transition: -webkit-box-shadow .1s;\\n  transition: -webkit-box-shadow .1s;\\n  transition: box-shadow .1s;\\n  transition: box-shadow .1s, -webkit-box-shadow .1s;\\n  background-color: rgb(248, 248, 248);\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -ms-flex-direction: row; /* For IE10 */\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  -webkit-box-flex: 1;\\n          flex: 1 1 0%;\\n  -ms-flex: 1 1 0%; /* For IE10 */\\n}\\n\\n::ng-deep .inEditMode .mat-card {\\n  background-color: rgb(226, 226, 226) !important;\\n}\\n\\n.mat-card:hover {\\n  background-color: rgb(240, 240, 240);\\n  -webkit-box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);\\n          box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);\\n}\\n\\n.colorbar {\\n  margin-right: 6px;\\n  min-width: 24px;\\n  border-top-left-radius: 4px;\\n  border-bottom-left-radius: 4px;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column; /* For IE10 */\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  -webkit-box-flex: 0;\\n          flex: 0 0 0%;\\n  -ms-flex: 0 0 0%; /* For IE10 */\\n  align-content: center;\\n  -ms-flex-line-pack: center; /* Align content: center conversion for IE10 */\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -ms-flex-pack: center;  /* Justify content: center conversion for IE10 */\\n  align-self: stretch;\\n  -ms-flex-item-align: stretch;  /* Align self: stretch conversion for IE10 */\\n}\\n\\n.mat-icon {\\n  color: rgb(34, 44, 66);\\n  cursor: pointer;\\n  opacity: .3;\\n  -webkit-transition: opacity .3s;\\n  transition: opacity .3s;\\n}\\n\\n.removeCardButton {\\n  opacity: 0;\\n}\\n\\n.mat-card:hover .mat-icon {\\n  opacity: .8;\\n}\\n\\n.mat-card:hover .dragCardIcon.mat-icon {\\n  opacity: .4;\\n}\\n\\n.dragCardIcon {\\n  opacity: 0;\\n  margin-bottom: 15px;\\n}\\n\\n.labelColumn {\\n  padding: 3px;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column; /* For IE10 */\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  -webkit-box-flex: 0;\\n          flex: 0 0 auto;\\n  -ms-flex: 0 0 auto; /* For IE10 */\\n}\\n\\n.label {\\n  max-width: 200px;\\n  min-width: 200px;\\n  word-wrap: break-word;\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n  -ms-flex: 1 1 auto; /* For IE10 */\\n  font-family: 'Montserrat', sans-serif;\\n}\\n\\n::ng-deep .mat-input-element:disabled{\\n  color: rgb(0,0,0, .7) !important;\\n}\\n\"","module.exports = \"<!-- This component is a card that holds a colored sidebar with icons indicating\\nfunctionality, then space for a label & legend, then space for other contents. -->\\n<mat-card fxFlex [attr.id]=\\\"id\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" (resized)=\\\"resize($event)\\\">\\n  <div fxFlex fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\" fxShrink='0' fxGrow='0' fxLayoutAlign=\\\"space-between center\\\"\\n    [style.background-color]=\\\"color\\\" class=\\\"colorbar\\\">\\n    <mat-icon *ngIf=\\\"isRemovable\\\" class=\\\"removeCardButton\\\" (click)=\\\"remove($event)\\\"\\n      matTooltip=\\\"{{uiConstants.REMOVE_THIS_CARD}}\\\">clear\\n    </mat-icon>\\n    <mat-icon *ngIf=\\\"isDraggable\\\" class=\\\"dragCardIcon\\\" matTooltip=\\\"{{uiConstants.DRAG_THIS_CARD}}\\\">\\n      drag_indicator\\n    </mat-icon>\\n    <!--Ensure that the dragger icon is always at the center of the color bar.-->\\n    <div style=\\\"margin-bottom: 12px\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"label\\\" fxFlex=\\\"0 0 15\\\" fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\" class=\\\"labelColumn\\\">\\n    <div fxFlex class=\\\"mat-title label\\\">{{label}}</div>\\n    <!--Give the div that you want to appear here the class \\\"legends-block\\\".-->\\n    <ng-content select=\\\".legends-block\\\"></ng-content>\\n  </div>\\n  <!--Give the div that you want to appear here the class \\\"contents-block\\\".-->\\n  <ng-content select=\\\".contents-block\\\"></ng-content>\\n  <div *ngIf=\\\"!isEditable\\\" style=\\\"margin-right: 25px\\\"></div>\\n  <ng-container *ngIf=\\\"isEditable\\\">\\n    <mat-icon *ngIf=\\\"!inEditMode\\\" matTooltip=\\\"{{uiConstants.EDIT_THIS_CARD}}\\\" (click)=\\\"edit($event)\\\"\\n      class=\\\"editCardIcon\\\">edit\\n    </mat-icon>\\n    <mat-icon *ngIf=\\\"inEditMode\\\" matTooltip=\\\"{{uiConstants.SAVE_YOUR_WORK}}\\\" (click)=\\\"save($event)\\\">save</mat-icon>\\n  </ng-container>\\n</mat-card>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Inject, Input, Output} from '@angular/core';\nimport * as Color from 'color';\nimport * as Colors from 'src/app/theme/verily_colors';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n\n/**\n * This is the base template for all the cards in this app. It will show a\n * colored bar on the left hand side with icons for actions, and then\n * optionally a label and legend, then the contents of the card.\n */\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent {\n  @Input() color: Color = Colors.BLUE_GREY_500;\n  @Input() id: string;\n  @Input() label: string;\n  @Input() isDraggable = true;\n  @Input() isEditable = false;\n  @Input() isRemovable = true;\n\n  @Output() renderEvent = new EventEmitter();\n  @Output() removeEvent = new EventEmitter();\n  @Output() editEvent = new EventEmitter();\n  @Output() saveEvent = new EventEmitter();\n\n  inEditMode = false;\n\n  constructor(@Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {}\n\n  // The events below need to get propogated up to the card container.\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    this.removeEvent.emit(this.id);\n  }\n\n  // Called when the card resizes.\n  resize($event) {\n    this.renderEvent.emit($event);\n  }\n\n  // Called when the user clicks on the edit button.\n  edit($event) {\n    this.inEditMode = true;\n    this.editEvent.emit($event);\n  }\n\n  // Called when the user hits the save button to exit out of edit mode.\n  save($event) {\n    this.inEditMode = false;\n    this.saveEvent.emit($event);\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" fxLayoutGap=\\\"5px\\\" fxFlex>\\n    <mat-icon fxFlex>access_time</mat-icon>\\n    <mat-form-field fxFlex>\\n      <input matInput [matDatepicker]=\\\"datePicker\\\" placeholder=\\\"Date\\\" [formControl]=\\\"dateFormControl\\\"\\n        (click)=\\\"datePicker.open()\\\" required>\\n      <mat-error *ngIf=\\\"dateFormControl.invalid\\\">Invalid date</mat-error>\\n      <mat-hint *ngIf=\\\"dateNotInRange()\\\">\\n        Caution: Date outside of current range\\n      </mat-hint>\\n      <mat-datepicker #datePicker></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field fxFlex>\\n      <input matInput [formControl]=\\\"timeFormControl\\\" placeholder=\\\"Time\\\" [matAutocomplete]=\\\"auto\\\" required>\\n      <mat-error *ngIf=\\\"timeFormControl.invalid\\\">Invalid time</mat-error>\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let time of listOfTimes\\\" [value]=\\\"time[24]\\\">\\n          {{time[24]}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"column\\\" fxFlex>\\n    <mat-form-field class=\\\"inputTitle\\\">\\n      <input matInput [(ngModel)]=\\\"userTitle\\\" placeholder=\\\"Add title\\\" required id=\\\"dialogTitle\\\">\\n      <mat-error>Please enter a title.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"inputDescription\\\">\\n      <textarea matInput [(ngModel)]=\\\"userDescription\\\" placeholder=\\\"Add description\\\" id=\\\"dialogDescription\\\"></textarea>\\n    </mat-form-field>\\n    <div class=\\\"colorPicker\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n      <mat-label class=\\\"mat-body\\\">Flag color</mat-label>\\n      <mat-button-toggle-group style=\\\"border: 0px\\\" #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"selectedColor\\\"\\n        value=\\\"BOSTON_YELLOW\\\">\\n        <mat-button-toggle *ngFor=\\\"let color of listOfColors\\\" [value]=\\\"color\\\">\\n          <mat-card style.backgroundColor=\\\"{{color}}\\\"></mat-card>\\n        </mat-button-toggle>\\n      </mat-button-toggle-group>\\n    </div>\\n    <div mat-dialog-actions align=\\\"end\\\">\\n      <button mat-button (click)=\\\"onCancel()\\\" id=\\\"cancelButton\\\" class=\\\"cancelButton\\\">Cancel</button>\\n      <button [disabled]=\\\"findIncompleteFields()\\\" mat-raised-button (click)=\\\"onSave()\\\" color=\\\"primary\\\"\\n        id=\\\"saveButton\\\">Save</button>\\n    </div>\\n  </div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport * as Color from 'color';\nimport {DateTime, Interval} from 'luxon';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableGraphAnnotation} from 'src/app/graphtypes/customizable-graph/customizable-graph-annotation';\n// tslint:disable-next-line:max-line-length\nimport * as Colors from 'src/app/theme/verily_colors';\n\n/**\n * A Dialog with a textarea input, used to set the description of points on the\n * CustomizableTimeline.\n */\n@Component({\n  selector: 'app-customizable-timeline-dialog',\n  templateUrl: './customizable-timeline-dialog.component.html',\n})\nexport class CustomizableTimelineDialogComponent {\n  // The text input for this dialog box.\n  userTitle: string;\n\n  // The FormControl handling the Date selection for this dialog box.\n  dateFormControl: FormControl;\n\n  // The list of suggested times to display with the autocomplete.\n  listOfTimes = [];\n\n  // The list of colors the user will be able to choose from.\n  listOfColors = [\n    Colors.DEEP_CORAL,\n    Colors.DEEP_ORANGE,\n    Colors.DEEP_TURQUOISE,\n    Colors.DEEP_CYAN,\n    Colors.DEEP_PURPLE_600,\n  ];\n\n  // The selected color in this dialog box.\n  selectedColor: string;\n\n  // The description input for this dialog box.\n  userDescription: string;\n\n  // The FormControl handling the time selection for this dialog box.\n  timeFormControl: FormControl;\n\n  // The date selected for this dialog box.\n  date: Date;\n\n  // The date range currently being viewed.\n  dateRange: Interval;\n\n  constructor(\n      public dialogRef: MatDialogRef<CustomizableTimelineDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.date = new Date(data.date);\n    this.dateFormControl = new FormControl(this.date);\n    const timeString = this.date.toLocaleTimeString(\n        [], {hour12: false, hour: '2-digit', minute: '2-digit'});\n    // Since we do not have an input of type \"time\" due to IE restrictions, we\n    // manually check whether the input is a valid time string using regex.\n    this.timeFormControl = new FormControl(\n        timeString, Validators.pattern('([01]?[0-9]|2[0-3]):[0-5][0-9]'));\n    this.generateListOfTimes();\n    // Set the default selected color as yellow if unset, or find the BCH Color\n    // matching the selected color passed in.\n    this.selectedColor = data.color ?\n        this.listOfColors.find(c => c.hex() === data.color.hex()) :\n        Colors.DEEP_CORAL;\n    // Set the title if it is passed in.\n    if (data.title) {\n      this.userTitle = data.title;\n    }\n    // Set the description if it is passed in.\n    if (data.description) {\n      this.userDescription = data.description;\n    }\n\n    if (data.dateRange) {\n      this.dateRange = Interval.fromDateTimes(\n          this.data.dateRange.start.toLocal().startOf('day'),\n          this.data.dateRange.end.toLocal().endOf('day'));\n    }\n  }\n\n  // Closes the dialog popup without saving the user input.\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  // Closes the dialog popup and saves user input.\n  onSave(): void {\n    this.dialogRef.close(new CustomizableGraphAnnotation(\n        DateTime.fromJSDate(this.getSelectedDate()),\n        this.userTitle.trim(),\n        this.userDescription,\n        Color.rgb(this.selectedColor),\n        ));\n  }\n\n  // Generates a list of times with 30-minute intervals, for the autocomplete\n  // time-picker.\n  private generateListOfTimes() {\n    const interval = 30;\n    const date = new Date();\n    date.setMinutes(0);\n    date.setHours(0);\n    for (let time = 0; time <= 24 * 60; time += interval) {\n      date.setHours(time / 60);\n      date.setMinutes(time % 60);\n      this.listOfTimes.push({\n        24: date.toLocaleTimeString(\n            [], {hour12: false, hour: '2-digit', minute: '2-digit'})\n      });\n    }\n  }\n\n  // Constructs a new Date based on user input.\n  private getSelectedDate(): Date {\n    const dateTime = new Date(this.dateFormControl.value);\n    // For date parsing to work in IE, we must remove all extraneous non-ASCII\n    // characters added, and manually change the time.\n    const time =\n        this.timeFormControl.value.replace(/[^\\x00-x7F]/g, '').split(':');\n    dateTime.setHours(Number(time[0]), Number(time[1]));\n    return dateTime;\n  }\n\n  // Finds incomplete fields that are required and disables saving.\n  findIncompleteFields() {\n    return !this.userTitle ||\n        (this.userTitle && this.userTitle.trim().length === 0) ||\n        this.dateFormControl.hasError('required') ||\n        this.timeFormControl.hasError('required') ||\n        this.timeFormControl.invalid || this.dateFormControl.invalid;\n  }\n\n  // Returns whether the date selected by the user falls outside the current\n  // date range.\n  dateNotInRange(): boolean {\n    const dateTime = DateTime.fromJSDate(this.getSelectedDate());\n    if (!this.dateRange) {\n      return false;\n    }\n    return !(this.dateRange.contains(dateTime));\n  }\n}\n","module.exports = \"::ng-deep [class*=\\\"timeline\\\"] .c3-xgrid-focus {\\n  visibility: visible !important;\\n}\\n\\n::ng-deep .timeline .c3 {\\n  cursor: default !important;\\n}\\n\\n::ng-deep .inEditMode .timeline .c3 {\\n  cursor: pointer !important;\\n}\\n\\n/* Only display icons on flags in the CustomizableGraph if in edit mode. */\\n\\n::ng-deep app-customizable-graph.inEditMode .showIcon {\\n  visibility: visible !important;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-custom\\\"] {\\n  position: absolute;\\n  display: block;\\n  font-size: 11px;\\n  border-style: solid;\\n  padding: 3px;\\n  border-width: 1px;\\n  border-color: grey;\\n  border-radius: 3px;\\n  min-height: 25px;\\n  width: 160px;\\n  max-height: 100px;\\n  background-color: white;\\n  overflow: auto;\\n  color: white;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-whole\\\"] {\\n  position: absolute;\\n  display: block;\\n  min-height: 25px;\\n  width: 0px;\\n  max-height: 100px;\\n  border-left-style: solid;\\n  border-width: 1px;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-title-custom\\\"] {\\n  margin: 0px;\\n  font-size: small;\\n  text-align: center;\\n  max-width: 120px;\\n  display: inline-block;\\n  vertical-align: bottom;\\n  min-width: 120px;\\n  overflow: auto;\\n  margin-top: 5px;\\n  overflow-wrap: break-word;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-details-custom\\\"] {\\n  display: none;\\n  overflow: auto;\\n  text-align: center;\\n  overflow-wrap: break-word;\\n  max-width: 120px;\\n}\\n\\n::ng-deep [id*=\\\"expand\\\"] {\\n  visibility: hidden;\\n  vertical-align: middle;\\n}\\n\\n::ng-deep [id*=\\\"delete\\\"] {\\n  visibility: hidden;\\n  vertical-align: middle;\\n}\\n\\n::ng-deep [id*=\\\"edit\\\"] {\\n  visibility: hidden;\\n  margin-top: 8px;\\n}\\n\\n.contents-block {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column;\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox;\\n  -webkit-box-flex: 1;\\n          flex: 1 1 100%;\\n  -ms-flex: 1 1 100%; /* For IE10 */\\n}\"","module.exports = \"<app-card [attr.id]=\\\"id\\\" label=\\\"{{this.uiConstants.CUSTOM_TIMELINE_LABEL}}\\\" [isDraggable]=\\\"false\\\" [isEditable]=\\\"true\\\"\\n  [isRemovable]=\\\"true\\\" (renderEvent)=\\\"this.renderContainedGraph()\\\" (editEvent)=\\\"this.inEditMode = true\\\"\\n  (saveEvent)=\\\"this.inEditMode = false\\\" (removeEvent)=\\\"remove()\\\" [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n  <ng-container class=\\\"legends-block\\\">\\n    <div *ngIf=\\\"inEditMode\\\" style=\\\"min-width: 200px; max-width: 200px; word-wrap: break-word;\\\">\\n      {{this.uiConstants.CUSTOM_TIMELINE_INSTRUCTIONS}}\\n    </div>\\n  </ng-container>\\n  <div fxFlex=\\\"row\\\" class=\\\"contents-block\\\">\\n    <app-customizable-graph class=\\\"timeline\\\" [data]=\\\"this.data\\\" [dateRange]=\\\"this.dateRange\\\" [inEditMode]=\\\"inEditMode\\\"\\n      (pointsChanged)=\\\"pointsChanged($event)\\\" [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n    </app-customizable-graph>\\n  </div>\\n</app-card>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// tslint:disable-next-line:max-line-length\nimport {Component, EventEmitter, Inject, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Interval} from 'luxon';\nimport {FhirService} from 'src/app/fhir.service';\nimport {CustomizableData} from 'src/app/graphdatatypes/customizabledata';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {GraphComponent} from 'src/app/graphtypes/graph/graph.component';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n\n/**\n * The customizable timeline lets the user plot any events they'd like to keep\n * track of as little flags along a timeline.\n */\n@Component({\n  selector: 'app-customizable-timeline',\n  templateUrl: './customizable-timeline.component.html',\n  styleUrls: ['./customizable-timeline.component.css']\n})\nexport class CustomizableTimelineComponent implements OnChanges {\n  // The GraphComponent this card holds.\n  @ViewChild(GraphComponent) containedGraph!: GraphComponent<GraphData>;\n\n  // The unique ID for this displayed card.\n  @Input() id: string;\n\n  /**\n   * The x-axis for this card.\n   */\n  @Input() dateRange: Interval;\n  //  Data stored before deletion of the card. This is separate from this.data\n  //  to avoid unnecessary re-rendering of the graph.\n  @Input() deletedData: any;\n\n  // An event indicating that the event lines displayed on all other charts need\n  // to be updated.\n  @Output()\n  updateEventLines =\n      new EventEmitter<{[key: string]: string | CustomizableData}>();\n\n  /** Propogate remove events up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  // The data for the graph contained.\n  data: CustomizableData;\n\n  // Whether or not this CustomizableTimeline is being edited.\n  inEditMode = false;\n\n  constructor(\n      private fhirService: FhirService,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {\n    this.data = CustomizableData.defaultEmptySeries();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.deletedData && changes.deletedData.currentValue) {\n      this.data = this.deletedData;\n    }\n  }\n\n  // Render the contained graph in the event of a resize.\n  renderContainedGraph() {\n    if (this.containedGraph) {\n      this.inEditMode = false;\n      this.containedGraph.generateChart();\n    }\n  }\n\n  // Listens for an event indicating that the points on the CustomizableGraph\n  // have been changed, and emits an event with the modified eventlines\n  // displayed on all other charts.\n  pointsChanged($event) {\n    this.updateEventLines.emit({data: this.data, id: this.id});\n  }\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    this.removeEvent.emit({id: this.id, value: this.data});\n    // Record the user deleting a CustomizableTimeline to Google Analytics.\n    (<any>window).gtag('event', 'deleteCustomTimeline', {\n      'event_category': 'deleteCard',\n      'event_label': new Date().toDateString()\n    });\n  }\n}\n","module.exports = \".legend {\\n  cursor: pointer;\\n}\\n\\n/* This is the color swatch for the legends.*/\\n\\n.legend span {\\n  border-style: solid !important;\\n  height: 7px;\\n  margin: 3px;\\n  vertical-align: center;\\n  width: 7px;\\n}\\n\\n/* This is a specific style for MultiGraphCard. */\\n\\n.contents-block {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -ms-flex-direction: column; /* For IE10 */\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  -webkit-box-flex: 1;\\n          flex: 1 1 0%;\\n  -ms-flex: 1 1 0%; /* For IE10 */\\n}\\n\\n.axis {\\n  -webkit-box-flex: 0;\\n          flex: 0 0 auto;\\n  -ms-flex: 0 0 auto; /* For IE10 */\\n}\\n\\n.mat-body {\\n  font-family: 'Work Sans', sans-serif;\\n  font-size: 14px;\\n}\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// tslint:disable-next-line:max-line-length\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, SimpleChanges, ViewChildren} from '@angular/core';\nimport * as Color from 'color';\nimport {Interval} from 'luxon';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {LabeledSeries} from 'src/app/graphdatatypes/labeled-series';\nimport {AxisGroup} from 'src/app/graphtypes/axis-group';\nimport {LegendInfo} from 'src/app/graphtypes/legend-info';\n\nimport {ChartType, GraphComponent} from '../../graphtypes/graph/graph.component';\nimport * as Colors from '../../theme/verily_colors';\n\n/**\n * This card holds a label, one or more graphs on one or more axes, and a\n * dragger handle.\n */\n@Component({\n  selector: 'app-multigraphcard',\n  styleUrls: ['../legendstyles.css'],\n  templateUrl: './multigraphcard.html',\n})\nexport class MultiGraphCardComponent implements OnChanges, OnInit {\n  /** The GraphComponents this card holds. */\n  @ViewChildren(GraphComponent)\n  containedGraphs!: QueryList<GraphComponent<GraphData>>;\n\n  @Input() id: string;\n\n  /**\n   *  The date range to use for graphs in this card\n   */\n  @Input() dateRange: Interval;\n\n  /**\n   * The AxisGroup displayed on this card.\n   */\n  @Input() axisGroup: AxisGroup;\n\n  /**\n   * The format of each object in the array is an object representing a line\n   * drawn on the chart, that has a value, text, and class field. The value\n   * field represents the x-position of the line to be drawn, while the class\n   * represents the class name, and the text represents the text displayed near\n   * the line.\n   */\n  @Input() eventlines: Array<{[key: string]: number | string}>;\n\n  /** The x-regions to draw for this graph. */\n  xRegions: any[];\n\n  /** Propogate remove events up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  /**\n   * The label for this graphcard.\n   */\n  label: string;\n\n  /**\n   * The units text for this card. Blank if the axes have more than one unit.\n   */\n  unitsLabel = '';\n\n  /** Holds the color corresponding to this card. */\n  color: Color = Colors.BLUE_GREY_500;  // Default color for a card component.\n\n  /** Hold an instance of this enum so the HTML template can reference it. */\n  ChartType: typeof ChartType = ChartType;\n\n  /**\n   * Maps legend categories to the corresponding series so that when you hover\n   * over a legend category, it can highlight all the corresponding series.\n   */\n  readonly legendToSeries = new Map<LegendInfo, LabeledSeries[]>();\n\n  /**\n   * Sets up the class variables that are dependent on the @Input parameter to\n   * this component, resourceCodeGroups.\n   * @throws An Error if ResourceCodeGroups is undefined or contains mixed\n   *     clinical concepts.\n   */\n  ngOnInit() {\n    if (!this.axisGroup) {\n      throw Error(\n          'All MultiGraphCardComponents are expected to have an AxisGroup ' +\n          ' as the data source, but none provided for card id ' + this.id);\n    }\n    this.label = this.axisGroup.label;\n    this.color = this.axisGroup.displayGroup.fill;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const dateRange = changes.dateRange;\n    if (dateRange && dateRange.previousValue !== dateRange.currentValue) {\n      this.loadNewData();\n    }\n  }\n\n  private addSeriesToLegendMap(series: LabeledSeries) {\n    if (!this.legendToSeries.has(series.legendInfo)) {\n      this.legendToSeries.set(series.legendInfo, []);\n    }\n    const added: LabeledSeries[] = this.legendToSeries.get(series.legendInfo);\n    added.push(series);\n\n    this.legendToSeries.set(series.legendInfo, added);\n  }\n\n  private loadNewData() {\n    Promise\n        .all(this.axisGroup.axes.map(\n            axis => axis.updateDateRange(this.dateRange)))\n        .then(axisData => {\n          this.getLabelText().then(lblText => {\n            this.unitsLabel = lblText;\n          });\n\n          // Gather a list of all the unique legends and series displayed.\n          this.legendToSeries.clear();\n          for (const data of axisData) {\n            for (const series of data.series) {\n              this.addSeriesToLegendMap(series);\n            }\n          }\n\n          // Kick off the promise to get all the x-regions. It will update\n          // the class variable and then everything bound to it will update,\n          // too.\n          this.getAllXRegions();\n        });\n  }\n\n  /**\n   * Gets the label text for this card. If the axes have all matching units,\n   * it returns the units; otherwise it returns a blank string.\n   */\n  private getLabelText(): Promise<string> {\n    return Promise\n        .all(this.axisGroup.axes.map(\n            axis => axis.updateDateRange(this.dateRange)))\n        .then(dataArray => dataArray.map(data => data.series))\n        .then(seriesNestedArray => {\n          const flattened: LabeledSeries[] = [].concat(...seriesNestedArray);\n          return flattened.map(series => series.unit)\n              .filter(v => v !== undefined);\n        })\n        .then(allUnits => {\n          const units = new Set<string>(allUnits);\n          if (units.size === 1 && allUnits[0] !== undefined) {\n            return ' (' + allUnits[0] + ')';\n          } else {\n            this.updateAxisLabels();\n            return '';\n          }\n        });\n  }\n\n  /**\n   * Gets all the X regions for the axes contained in this group.\n   */\n  private getAllXRegions() {\n    return Promise.all(this.axisGroup.axes.map(axis => axis.getXRegions()))\n        .then(nestedXRegions => {\n          this.xRegions = [].concat(...nestedXRegions);\n        });\n  }\n\n  /**\n   * If the axes on this card have different units, make sure that each\n   * axis displays its units on the y-axis, for clarity.\n   */\n  private updateAxisLabels() {\n    for (const axis of this.axisGroup.axes) {\n      axis.updateDateRange(this.dateRange).then(axisData => {\n        if (axisData && axis.label && axisData.series &&\n            axisData.series.length > 0 && axisData.series[0].unit) {\n          const units = ' (' + axisData.series[0].unit + ')';\n          // Only add units if not done so already.\n          if (axis.label.indexOf(units) === -1) {\n            axis.label += units;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns true if any of the LabeledSeries passed in has a datapoint\n   * in the time range.\n   * This is just a convenience function because this can't be evaluated\n   * directly in the Angular template.\n   */\n  hasData(labeledSeries: LabeledSeries[]) {\n    return labeledSeries.map(s => s.hasPointInRange(this.dateRange))\n        .some(s => s === true);\n  }\n\n  /**\n   * Highlights the listed series in any graph they appear in for this card.\n   */\n  focusOnSeries(labeledSeries: LabeledSeries[]) {\n    this.containedGraphs.forEach(graph => {\n      graph.focusOnSeries(labeledSeries);\n    });\n  }\n\n  /**\n   * Removes highlight from any series on this card.\n   */\n  resetChart() {\n    this.containedGraphs.forEach(graph => {\n      graph.resetChart();\n    });\n  }\n\n  // The events below need to get propogated up to the card container.\n\n  /**\n   *  Called when the user clicks the trashcan button on the card.\n   */\n  remove() {\n    // We do not add a 'value' field because there is no internal value that\n    // needs to be restored when the user reverts a deletion.\n    this.removeEvent.emit({id: this.id});\n    // Record the user deleting a card with charts to Google Analytics.\n    (<any>window).gtag('event', 'deleteConcept', {\n      'event_category': 'deleteCard',\n      'event_label': this.label\n    });\n  }\n}\n","module.exports = \"<app-card [id]=\\\"id\\\" [color]=\\\"this.color.hsl().string()\\\" [label]=\\\"label + unitsLabel\\\" (removeEvent)=\\\"remove()\\\">\\n  <ng-container class=\\\"legends-block\\\">\\n    <ng-container *ngFor=\\\"let series of legendToSeries | keyvalue\\\">\\n      <div fxLayout=\\\"row\\\" class=\\\"legend\\\" *ngIf=\\\"hasData(series.value)\\\" (mouseover)=\\\"focusOnSeries(series.value)\\\"\\n        (mouseout)=\\\"resetChart()\\\">\\n        <span [style.background-color]=\\\"series.key.fill.hsl().string()\\\"\\n          [style.border]=\\\"series.key.outline.hsl().string()\\\">\\n        </span>\\n        <div fxFlex class=\\\"mat-body\\\">{{series.key.label}}</div>\\n      </div>\\n    </ng-container>\\n  </ng-container>\\n  <div fxFlex *ngIf=\\\"axisGroup\\\" fxLayout=\\\"column\\\" class=\\\"contents-block\\\">\\n    <div fxFlex *ngFor=\\\"let axis of axisGroup.axes\\\" fxShrink=\\\"0\\\" fxGrow=\\\"0\\\">\\n      <mat-spinner *ngIf=\\\"!axis.alreadyResolvedData\\\" [diameter]=\\\"30\\\"></mat-spinner>\\n      <div *ngIf=\\\"axis.dataResolved() && axis.errorMessage\\\">\\n        {{axis.errorMessage}}\\n      </div>\\n      <ng-container *ngIf=\\\"axis.dataResolved() && !axis.errorMessage\\\" [ngSwitch]=\\\"axis.chartType\\\">\\n        <app-linegraph *ngSwitchCase=\\\"ChartType.LINE\\\" [data]=\\\"axis.alreadyResolvedData\\\" [dateRange]=\\\"this.dateRange\\\"\\n          [eventlines]=\\\"this.eventlines\\\" [xRegions]=\\\"this.xRegions\\\" [axisLabel]=\\\"axis.label\\\"\\n          [showTicks]=\\\"axis.showTicks\\\"></app-linegraph>\\n        <app-scatterplot *ngSwitchCase=\\\"ChartType.SCATTER\\\" [data]=\\\"axis.alreadyResolvedData\\\"\\n          [dateRange]=\\\"this.dateRange\\\" [eventlines]=\\\"this.eventlines\\\" [xRegions]=\\\"this.xRegions\\\"\\n          [axisLabel]=\\\"axis.label\\\" [showTicks]=\\\"axis.showTicks\\\"></app-scatterplot>\\n        <app-stepgraph class=\\\"stepgraph\\\" *ngSwitchCase=\\\"ChartType.STEP\\\" [data]=\\\"axis.alreadyResolvedData\\\"\\n          [dateRange]=\\\"this.dateRange\\\" [eventlines]=\\\"this.eventlines\\\" [xRegions]=\\\"this.xRegions\\\"\\n          [axisLabel]=\\\"axis.label\\\">\\n        </app-stepgraph>\\n        <app-microbio-graph *ngSwitchCase=\\\"ChartType.MICROBIO\\\" [data]=\\\"axis.alreadyResolvedData\\\"\\n          [dateRange]=\\\"this.dateRange\\\" [eventlines]=\\\"this.eventlines\\\" [xRegions]=\\\"this.xRegions\\\"\\n          [axisLabel]=\\\"axis.label\\\">\\n        </app-microbio-graph>\\n      </ng-container>\\n    </div>\\n  </div>\\n</app-card>\"","module.exports = \"<app-card [id]=\\\"id\\\" [isEditable]=\\\"true\\\" (removeEvent)=\\\"remove()\\\" (editEvent)=\\\"edit()\\\" (saveEvent)=\\\"save()\\\"\\n  [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n  <ng-container class=\\\"contents-block\\\">\\n    <mat-form-field style=\\\"width: 95%;\\\">\\n      <textarea #textArea matInput matTextareaAutosize placeholder=\\\"Add annotation here.\\\" [disabled]=\\\"!inEditMode\\\"\\n        (change)=\\\"updateValue()\\\" [(ngModel)]=\\\"noteString\\\">\\n    </textarea>\\n      <mat-hint> {{getHintText()}} </mat-hint>\\n    </mat-form-field>\\n  </ng-container>\\n</app-card>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, ElementRef, EventEmitter, Inject, Input, Output, ViewChild} from '@angular/core';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n/**\n * A Material Card that displays a label, a textbox, and a draggable handle\n * in a row.\n */\n@Component({\n  selector: 'app-textboxcard',\n  templateUrl: './textboxcard.component.html',\n})\nexport class TextboxcardComponent {\n  @ViewChild('textArea') textAreaElement: ElementRef;\n  @Input() id: string;\n\n  /** Propogate remove events up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  // Holds the text typed in the input field of the textbox.\n  @Input() noteString: string;\n\n  inEditMode = false;\n\n\n  constructor(@Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {}\n\n  updateValue() {\n    this.textAreaElement.nativeElement.innerHTML = this.noteString;\n  }\n\n  // The events below need to get propogated up to the card container.\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    // We pass a 'value' field with the contents of the textbox so that, in case\n    // of restoration of a deleted textbox, the previous value can be displayed.\n    this.removeEvent.emit({id: this.id, value: this.noteString});\n    // Record the user deleting a textbox card to Google Analytics.\n    (<any>window).gtag('event', 'deleteTextbox', {\n      'event_category': 'deleteCard',\n      'event_label': new Date().toDateString()\n    });\n  }\n\n  edit() {\n    this.inEditMode = true;\n  }\n\n  save() {\n    this.inEditMode = false;\n  }\n\n  getHintText() {\n    if (this.inEditMode) {\n      return this.uiConstants.SAVE_TEXT_HINT;\n    } else {\n      return this.uiConstants.EDIT_TEXT_HINT;\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {DiagnosticReport} from '../fhir-data-classes/diagnostic-report';\n\nimport {CachedResourceCodeGroup, ResourceCode} from './resource-code-group';\n\n/**\n * Holds BCHMicrobioCode codes. BCH provides a custom mapping for their\n * microbiology data since retrieving it is not yet supported in the Cerner\n * FHIR API implementation.\n */\nexport class BCHMicrobioCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://cerner.com/bch_mapping/';\n\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n}\n\n/**\n * Represents one or more LOINC codes that should be displayed together. In the\n * case of multiple LOINC codes in a group, you should provide a label for that\n * group.\n */\nexport class BCHMicrobioCodeGroup extends\n    CachedResourceCodeGroup<DiagnosticReport> {\n  /**\n   * Gets a list of DiagnosticReports corresponding to this code group. Each\n   * item in the list has the same specimen type as the label of this group, and\n   * each report's list of results has a code that is in this group's list of\n   * codes.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<DiagnosticReport[]> {\n    return this.fhirService.getDiagnosticReports(this, dateRange)\n        .then(result => {\n          return result;\n        });\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   * @override\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return this.fhirService.diagnosticReportsPresentWithCodes(\n        this, APP_TIMESPAN);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\nimport * as Colors from '../theme/verily_colors';\n\nexport const ALL_DISPLAY_GROUPS_MAP = new Map<string, DisplayGrouping>();\n\n/**\n * Represents the category that a certain chart's data might fall into, for\n * example a MedicationConcept such as \"Antibiotic\" or a ClinicalConcept such as\n * \"Lab result\"\n */\nexport class DisplayGrouping {\n  static colorIdx = 0;\n  fill: Color;\n  outline: Color;\n\n  constructor(readonly label: string, color?: Color, outline?: Color) {\n    let tempColor: Color = color;\n    if (color === undefined) {\n      tempColor = Colors.getDataColors()[DisplayGrouping.colorIdx];\n      DisplayGrouping.colorIdx =\n          (DisplayGrouping.colorIdx + 1) % Colors.getDataColors().length;\n    }\n    this.fill = tempColor;\n    this.outline = outline ? outline : tempColor;\n    ALL_DISPLAY_GROUPS_MAP.set(label, this);\n  }\n}\n\nexport const labResult = new DisplayGrouping('Lab Results', Colors.LIME);\nexport const vitalSign = new DisplayGrouping('Vital Signs', Colors.ORANGE);\nexport const med =\n    new DisplayGrouping('Vancomycin and Gentamicin', Colors.TURQUOISE);\nexport const microbio = new DisplayGrouping('Microbiology', Colors.CYAN);\n// We declare more DisplayGroupings related to Microbiology results that are\n// used to classify points on the Microbiology chart.\nexport const posPrelimMB = new DisplayGrouping(\n    'Check Result Preliminary', Color('#e4e2e2'), Colors.ABNORMAL);\nexport const negPrelimMB = new DisplayGrouping(\n    'Negative Preliminary', Color('#e4e2e2'), Colors.BLUE_A700);\nexport const posFinalMB =\n    new DisplayGrouping('Check Result Final', Colors.ABNORMAL);\nexport const negFinalMB =\n    new DisplayGrouping('Negative Final', Colors.BLUE_A700);\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {AnnotatedObservation} from '../fhir-data-classes/annotated-observation';\nimport {Observation} from '../fhir-data-classes/observation';\nimport {ObservationSet} from '../fhir-data-classes/observation-set';\nimport {FhirService} from '../fhir.service';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {DisplayGrouping} from './display-grouping';\nimport {ResourceCode} from './resource-code-group';\nimport {CachedResourceCodeGroup} from './resource-code-group';\n\n/**\n * Holds LOINC codes.\n */\nexport class LOINCCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://loinc.org';\n\n  dataAvailableInAppTimeScope(fhirService: FhirService): Promise<boolean> {\n    return fhirService.observationsPresentWithCode(this, APP_TIMESPAN);\n  }\n}\n\n/**\n * Represents one or more LOINC codes that should be displayed together. In the\n * case of multiple LOINC codes in a group, you should provide a label for that\n * group.\n */\nexport class LOINCCodeGroup extends CachedResourceCodeGroup<ObservationSet> {\n  constructor(\n      /** FHIR service for retrieving data */\n      readonly fhirService: FhirService,\n      /** The label for this resource code group. */\n      readonly label: string,\n      /** The resource codes to display on this Axis. */\n      readonly resourceCodes: ResourceCode[],\n      /** The display grouping for this resource code group. */\n      readonly displayGrouping: DisplayGrouping,\n      /** The chart type for this Axis. */\n      readonly chartType: ChartType,\n      /** Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: [number, number],\n      /**\n       * Whether or not to force the axis bounds, even if a smaller range\n       * containing all the data can be calculated.\n       */\n      readonly forceDisplayBounds = false,\n      /**\n       * The (optional) function that will make an observation into an\n       * AnnotatedObservation so that the graph can show the appropriate\n       * tooltip.\n       */\n      readonly makeAnnotated?:\n          (observation: Observation,\n           dateRange: Interval) => Promise<AnnotatedObservation>) {\n    super(\n        fhirService, label, resourceCodes, displayGrouping, chartType,\n        displayBounds, forceDisplayBounds);\n\n    // If there's only one resource code in the group, just use its display\n    // bounds as the axis bounds.\n    if (!displayBounds && resourceCodes.length === 1) {\n      this.displayBounds = resourceCodes[0].displayBounds;\n    }\n  }\n\n  /**\n   * Gets one ObservationSet for each LOINCCode in this group, and returns\n   * a list of those ObservationSets.\n   * If an Observation contains \"inner components\", this returns separate\n   * ObservationSets for those LOINCCodes, provided that they are mapped.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<ObservationSet[]> {\n    let maxPrecision = 0;\n    return this.fhirService.getObservationsForCodeGroup(this, dateRange)\n        .then(\n            observationDoubleArray => {\n              // Unnest the inner and outer observations into one flattened\n              // array per concept group.\n              return observationDoubleArray.map(\n                  obsSingleArray =>\n                      Array.from(obsSingleArray)\n                          .reduce((acc: Observation[], observation) => {\n                            // The outer component may not have a\n                            // value or result.\n                            if (observation.value || observation.result ||\n                                observation.interpretation) {\n                              acc.push(observation);\n                            }\n                            // Add separate ObservationLists for\n                            // each inner component.\n                            if (observation.innerComponents.length > 0) {\n                              for (const innerComponent of\n                                       observation.innerComponents) {\n                                acc.push(innerComponent);\n                              }\n                            }\n                            return acc;\n                          }, []));\n            },\n            rejection => {\n              // If there is any error with constructing an Observation for any\n              // code in this code group, throw the error.\n              throw rejection;\n            })\n        .then(flattened => {\n          const mapObs =\n              new Map<string, Array<Promise<AnnotatedObservation>>>();\n          flattened.forEach(conceptList => {\n            for (const observation of conceptList) {\n              // From this point on, each observation should have a value,\n              // result, or interpretation. All observations that just had\n              // innerComponents have been flattened out.\n              let obsList = mapObs.get(observation.label);\n              if (!obsList) {\n                obsList = new Array<Promise<AnnotatedObservation>>();\n              }\n              if (observation.precision > maxPrecision) {\n                maxPrecision = observation.precision;\n              }\n              if (this.makeAnnotated) {\n                obsList.push(this.makeAnnotated(observation, dateRange));\n              } else {\n                obsList.push(\n                    Promise.resolve(new AnnotatedObservation(observation)));\n              }\n              mapObs.set(observation.label, obsList);\n            }\n          });\n          this.precision = maxPrecision;\n          return Array.from(mapObs.values());\n        })\n        .then(\n            doubleAnnotationArray => doubleAnnotationArray.map(\n                singleAnnotationArray =>\n                    Promise.all(singleAnnotationArray)\n                        .then(\n                            resolvedAnnotations =>\n                                new ObservationSet(resolvedAnnotations))))\n        .then(observationSetArray => Promise.all(observationSetArray));\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {FhirService} from '../fhir.service';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {DisplayGrouping} from './display-grouping';\n\n/**\n * A code specifying the medication or observation type as well as the specific\n * medication or observation.\n */\nexport abstract class ResourceCode {\n  /**\n   * The string that holds the FHIR address for the coding system. Every\n   * extending class should override this constant, although there is no way\n   * we can syntactically enforce this in Typescript.\n   */\n  static readonly CODING_STRING;\n\n  private static readonly CODE_STRING_TO_CODE:\n      {[code: string]: ResourceCode} = {};\n\n  static fromCodeString(code: string): ResourceCode {\n    return ResourceCode.CODE_STRING_TO_CODE[code];\n  }\n\n  constructor(\n      readonly codeString: string, readonly displayGrouping: DisplayGrouping,\n      readonly label: string, readonly showByDefault = false,\n      /* Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: [number, number],\n      /* Whether or not to force the axis bounds, even if a smaller range\n         containing all the data can be calculated. */\n      readonly forceDisplayBounds = false) {\n    ResourceCode.CODE_STRING_TO_CODE[codeString] = this;\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   */\n  abstract dataAvailableInAppTimeScope(fhirService: FhirService):\n      Promise<boolean>;\n}\n\n/**\n * A class that holds a group of resource codes that should be displayed on\n * the same Axis together.\n */\nexport class ResourceCodeGroup {\n  /* Whether or not to show this ResourceCodeGroup by default. This is true\n   * when any ResourceCode in the group should be shown as default.*/\n  readonly showByDefault: boolean;\n\n  // The number of decimal places to show for any value associated with this\n  // resource group. The default is 0, to minimize errors caused by unnecessary\n  // trailing zeros.\n  precision = 0;\n\n  /**\n   * When we've decided whether this resource code group has data available\n   * in the app, it doesn't change over the course of the app lifetime, so we\n   * cache it.\n   */\n  resolvedDataAvailableInAppTimeScope: boolean = undefined;\n\n  constructor(\n      readonly fhirService: FhirService,\n      /** The label for this resource code group. */\n      readonly label: string,\n      /** The resource codes to display on this Axis. */\n      readonly resourceCodes: ResourceCode[],\n      /** The display grouping for this resource code group. */\n      readonly displayGrouping: DisplayGrouping,\n      /** The chart type for this Axis. */\n      readonly chartType: ChartType,\n      /** Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: number[],\n      /**\n       * Whether or not to force the axis bounds, even if a smaller range\n       * containing all the data can be calculated.\n       */\n      readonly forceDisplayBounds = false) {\n    this.showByDefault = this.resourceCodes.some(code => code.showByDefault);\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    if (this.resolvedDataAvailableInAppTimeScope !== undefined) {\n      return Promise.resolve(this.resolvedDataAvailableInAppTimeScope);\n    }\n    return Promise\n        .all(this.resourceCodes.map(\n            rc => rc.dataAvailableInAppTimeScope(this.fhirService)))\n        .then(bools => {\n          this.resolvedDataAvailableInAppTimeScope =\n              bools.reduce((result, next) => result = result || next);\n          return this.resolvedDataAvailableInAppTimeScope;\n        });\n  }\n}\n\n/**\n * CachedResourceCodeGroups cache their retrieved data in a dictionary keyed\n * by time interval.\n * @param T The type of data to be cached.\n */\nexport abstract class CachedResourceCodeGroup<T> extends ResourceCodeGroup {\n  private dataCache = new Map<Interval, T[]>();\n\n  /**\n   * Looks in the cache to see if data for this time interval exists. If not,\n   * calls the implementing class's getResourceFromFhir function and caches\n   * its data, then returns the data for the given time interval.\n   */\n  getResourceSet(dateRange: Interval): Promise<T[]> {\n    if (this.dataCache.has(dateRange)) {\n      return Promise.resolve(this.dataCache.get(dateRange));\n    } else {\n      return this.getResourceFromFhir(dateRange).then(\n          res => {\n            this.dataCache.set(dateRange, res);\n            return Promise.resolve(this.dataCache.get(dateRange));\n          },\n          rejection => {\n            // If there is any error with getting the resources for this\n            // ResourceCodeGroup, throw an error.\n            throw rejection;\n          });\n    }\n  }\n\n  /**\n   * This function should make the FHIR calls to get promises for the\n   * resources corresponding to this resource code group.\n   */\n  abstract getResourceFromFhir(dateRange: Interval): Promise<T[]>;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {LOINCCodeGroup} from '../clinicalconcepts/loinc-code';\nimport {AnnotatedObservation} from '../fhir-data-classes/annotated-observation';\nimport {Observation} from '../fhir-data-classes/observation';\nimport {FhirService} from '../fhir.service';\nimport {Axis} from '../graphtypes/axis';\nimport {AxisGroup} from '../graphtypes/axis-group';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {BCHMicrobioCode, BCHMicrobioCodeGroup} from './bch-microbio-code';\nimport {DisplayGrouping, labResult, med, microbio, vitalSign} from './display-grouping';\nimport {LOINCCode} from './loinc-code';\nimport {RXNORM_CODES, RxNormCode} from './rx-norm';\nimport {RxNormCodeGroup} from './rx-norm-group';\n\n// We declare a new LOINCCode referencing a DocumentReference, but do not\n// include it in the groupings below because it is not graphed/displayed in the\n// configuration sidebar.\nexport const documentReferenceLoinc =\n    new LOINCCode('68608-9', undefined, 'Summary', true);\n\nconst ovaAndParasiteExam = new BCHMicrobioCode(\n    'OVAANDPARASITEEXAM', microbio, 'Ova and Parasite Exam', false);\n\nconst salmonella = new BCHMicrobioCode(\n    'SALMONELLAANDSHIGELLACULTURE', microbio, 'Salmonella and Shigella Culture',\n    false);\n\n/**\n * ResourceCodeManager is the centralized class where other components can\n * look to find an exhaustive listing of all the resource code groups that the\n * application may display.\n */\n@Injectable()\nexport class ResourceCodeManager {\n  private static axisGroups: AxisGroup[];\n  private static displayGroupMapping: Map<DisplayGrouping, AxisGroup[]>;\n\n  private static readonly labLoincs = [\n    // Pull all the defaults to the top.\n    new LOINCCode(\n        '1988-5', labResult, 'C-Reactive Protein', true, [0, 100], true),\n    new LOINCCode(\n        '4537-7', labResult, 'ESR (Erythrocyte Sedimentation Rate)', true,\n        [0, 200]),\n    new LOINCCode('3094-0', labResult, 'BUN', true),\n    new LOINCCode('2160-0', labResult, 'Creatinine', true),\n    new LOINCCode('1742-6', labResult, 'ALT', true),\n    new LOINCCode(\n        '1920-8', labResult, 'AST (Aspartate Aminotransferase)', true),\n    new LOINCCode('6768-6', labResult, 'Alkaline Phosphatase', true),\n    new LOINCCode('1968-7', labResult, 'Bilirubin, Direct', true),\n    new LOINCCode('1975-2', labResult, 'Bilirubin, Total', true),\n    new LOINCCode('3084-1', labResult, 'Uric acid', false)\n  ];\n\n  private static readonly vitalLoincs = [\n    new LOINCCode('8310-5', vitalSign, 'Temperature', true, [35, 41]),\n    new LOINCCode('8867-4', vitalSign, 'Heart Rate', true, [20, 300]),\n    new LOINCCode('9279-1', vitalSign, 'Respiratory Rate', true, [6, 100]),\n    new LOINCCode(\n        '59408-5', vitalSign, 'Oxygen Saturation (SpO2)', true, [5, 100], true)\n  ];\n\n  /**\n   * Although these two measurements have independent LOINC codes they only ever\n   * appear as sub-measurements of the larger entity for \"blood pressure\" in the\n   * way that BCH data shows up.\n   */\n  private static readonly diastolicBP = new LOINCCode(\n      '8462-4', vitalSign, 'Diastolic Blood Pressure', true, [25, 150]);\n  private static readonly systolicBP = new LOINCCode(\n      '8480-6', vitalSign, 'Systolic Blood Pressure', true, [30, 250]);\n\n  private static readonly bloodPressureLoincs = [\n    new LOINCCode('55284-4', vitalSign, 'Blood Pressure', true),\n    new LOINCCode('8478-0', vitalSign, 'Mean Arterial Pressure (Device)', true)\n  ];\n\n  private static readonly gentMonitoring = [\n    new LOINCCode('31091-2', labResult, 'Gentamicin, Peak/Post Q24H'),\n    new LOINCCode('3663-2', labResult, 'Gentamicin, Peak/Post Q8H'),\n    new LOINCCode('31092-0', labResult, 'Gentamicin, Trough/Pre Q24H'),\n    new LOINCCode('3665-7', labResult, 'Gentamicin, Trough/Pre Q8H')\n  ];\n\n  private static readonly vancMonitoring = [\n    new LOINCCode('20578-1', labResult, 'Vancomycin Level, Random', true),\n    new LOINCCode('4092-3', labResult, 'Vancomycin Level, Trough/Pre', true),\n  ];\n\n  private static readonly urineGroup = [\n    new LOINCCode('5769-5', labResult, 'Bacteria, Urinalysis'),\n    new LOINCCode('50551-1', labResult, 'Bilirubin, Urinalysis'),\n    new LOINCCode('5794-3', labResult, 'Blood, Urinalysis'),\n    new LOINCCode('21033-6', labResult, 'Budding Yeast, Urinalysis'),\n    new LOINCCode('41865-7', labResult, 'Hyphal Yeast, Urinalysis'),\n    new LOINCCode('25157-9', labResult, 'Epithelial Cast, Urinalysis'),\n    new LOINCCode('50558-6', labResult, 'Nitrite, Urinalysis'),\n    new LOINCCode('57735-3', labResult, 'Protein, Urinalysis'),\n    new LOINCCode('58449-0', labResult, 'Red Blood Cell Clump, Urinalysis'),\n    new LOINCCode('13945-1', labResult, 'Red Cells, Urinalysis'),\n    new LOINCCode('11277-1', labResult, 'Squamous Epithelial, Urinalysis'),\n    new LOINCCode('50563-6', labResult, 'Urobilinogen, Urinalysis'),\n    new LOINCCode('5799-2', labResult, 'White Blood Cell Enzyme, Urinalysis'),\n    new LOINCCode('33825-1', labResult, 'White Blood Cell Clump, Urinalysis'),\n    new LOINCCode('20408-1', labResult, 'White Cells, Urinalysis'),\n  ];\n\n  private static readonly csfGroup = [\n    new LOINCCode('10333-3', labResult, 'Appearance, CSF'),\n    new LOINCCode('13517-8', labResult, 'Atypical Lymph, CSF'),\n    new LOINCCode('12278-8', labResult, 'Band, CSF'),\n    new LOINCCode('30374-3', labResult, 'Basophil, CSF'),\n    new LOINCCode('12208-5', labResult, 'Eosinophil, CSF'),\n    new LOINCCode('2342-4', labResult, 'Glucose, CSF'),\n    new LOINCCode('10328-3', labResult, 'Lymphocyte, CSF'),\n    new LOINCCode('10329-1', labResult, 'Monocyte, CSF'),\n    new LOINCCode('12278-8', labResult, 'Neutrophil/Band, CSF')\n  ];\n\n  private static readonly otherFluidGroup = [\n    new LOINCCode('9335-1', labResult, 'Appearance, Other Fluid'),\n    new LOINCCode('31208-2', labResult, 'Cell Count Source, Other Fluid'),\n    new LOINCCode('47938-6', labResult, 'Cell Count, Other Source'),\n    new LOINCCode('38256-4', labResult, 'Cells Counted, Other Fluid'),\n    new LOINCCode('6824-7', labResult, 'Color, Other Fluid'),\n    new LOINCCode('12209-3', labResult, 'Eosinophil, Other Fluid')\n  ];\n\n\n  // TODO(b/117431412): Figure out which microbio concepts to display.\n  private static stoolGroup = [\n    new BCHMicrobioCode(\n        'OVAANDPARASITEEXAM', microbio, 'Ova and Parasite Exam', true),\n    new BCHMicrobioCode(\n        'SALMONELLAANDSHIGELLACULTURE', microbio,\n        'Salmonella and Shigella Culture', true)\n  ];\n\n  private static npSwabGroup = [\n    new BCHMicrobioCode(\n        'INFLUENZAABRSVPCRWASUBTYPEQUAL', microbio,\n        'nfluenza A/B, RSV PCR w/A Subtype, QuaL', true),\n    new BCHMicrobioCode(\n        'ADENOVIRUSPCRRESPQUAL', microbio, 'Adenovirus PCR, Resp, QuaL', true),\n    new BCHMicrobioCode(\n        'VIRALDFARESPIRATORY', microbio, 'Viral DFA Respiratory', true)\n  ];\n\n  private static typeToPairs: Array<[DisplayGrouping, LOINCCode[]]> = [\n    [vitalSign, ResourceCodeManager.vitalLoincs],\n    [labResult, ResourceCodeManager.labLoincs],\n  ];\n\n  constructor(\n      private fhirService: FhirService, private sanitizer: DomSanitizer) {\n    if (ResourceCodeManager.axisGroups) {\n      return;\n    }\n\n\n    const codeGroups = new Array<AxisGroup>();\n    // All the labs and vitals are linecharts and displayed on\n    // independent axes.\n    for (const [conceptGroup, codePairs] of ResourceCodeManager.typeToPairs) {\n      for (const loinc of codePairs) {\n        codeGroups.push(new AxisGroup([new Axis(\n            this.fhirService, this.sanitizer,\n            new LOINCCodeGroup(\n                this.fhirService, loinc.label, new Array(loinc), conceptGroup,\n                ChartType.LINE, loinc.displayBounds, loinc.forceDisplayBounds),\n            loinc.label)]));\n      }\n    }\n\n    const bpLocation = new LOINCCodeGroup(\n        this.fhirService, 'Blood Pressure Details',\n        [new LOINCCode('41904-4', vitalSign, 'Blood Pressure Location', true)],\n        vitalSign, ChartType.SCATTER);\n    // Add the blood pressure LOINCs.\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new LOINCCodeGroup(\n            this.fhirService, 'Blood Pressure',\n            ResourceCodeManager.bloodPressureLoincs, vitalSign, ChartType.LINE,\n            [25, 200], false,\n            (observation: Observation, dateRange: Interval):\n                Promise<AnnotatedObservation> => {\n                  return bpLocation.getResourceSet(dateRange).then(obsSet => {\n                    return AnnotatedObservation.forBloodPressure(\n                        observation,\n                        // We only pass in the first ObservationSet, since we\n                        // know there is only one code whose observations we\n                        // care about.\n                        obsSet[0]);\n                  });\n                }),\n        'Blood Pressure')]));\n\n    const cbc = [\n      new LOINCCodeGroup(\n          this.fhirService, 'Hematocrit',\n          [new LOINCCode('4544-3', labResult, 'Hematocrit', false, [10, 70])],\n          labResult, ChartType.LINE, [10, 70]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Hemoglobin',\n          [new LOINCCode('718-7', labResult, 'Hemoglobin', false, [0.5, 30])],\n          labResult, ChartType.LINE, [0.5, 30]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Platelet',\n          [new LOINCCode('777-3', labResult, 'Platelet', false, [0.5, 30])],\n          labResult, ChartType.LINE, [0.5, 30]),\n      new LOINCCodeGroup(\n          this.fhirService, 'WBC',\n          [new LOINCCode('26464-8', labResult, 'WBC', false)], labResult,\n          ChartType.LINE),\n    ];\n\n    codeGroups.push(new AxisGroup(\n        cbc.map(\n            codeGroup => new Axis(\n                this.fhirService, this.sanitizer, codeGroup, codeGroup.label)),\n        'Complete Blood Count'));\n\n    const cbcWBC = [\n      new LOINCCodeGroup(\n          this.fhirService, 'Neutrophil/Band',\n          [new LOINCCode(\n              '35332-6', labResult, 'Neutrophil/Band', true, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Immature Granulocytes',\n          [new LOINCCode(\n              '38518-7', labResult, 'Immature Granulocytes', false, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Lymphocyte',\n          [new LOINCCode('736-9', labResult, 'Lymphocyte', false, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Monocyte',\n          [new LOINCCode('5905-5', labResult, 'Monocyte', false, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Eosinophil',\n          [new LOINCCode('713-8', labResult, 'Eosinophil', false, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n      new LOINCCodeGroup(\n          this.fhirService, 'Basophil',\n          [new LOINCCode('706-2', labResult, 'Basophil', false, [0, 100])],\n          labResult, ChartType.LINE, [0, 100]),\n\n    ];\n    codeGroups.push(new AxisGroup(\n        cbcWBC.map(\n            codeGroup => new Axis(\n                this.fhirService, this.sanitizer, codeGroup, codeGroup.label)),\n        'Complete Blood Count White Blood Cell'));\n\n    const medsSummaryGroup = RXNORM_CODES;\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new RxNormCodeGroup(\n            this.fhirService, 'Vancomycin & Gentamicin Summary',\n            medsSummaryGroup, med, ChartType.STEP),\n        'Vancomycin & Gentamicin Summary')]));\n\n    // Drug monitoring should be a scatterplot, and the related concepts\n    // should be displayed on the same axes.\n    const vancRxNorm = new RxNormCodeGroup(\n        this.fhirService, 'Medication Administrations',\n        [RxNormCode.fromCodeString('11124')], med, ChartType.SCATTER);\n\n    // Drug monitoring should be a scatterplot, and the related concepts\n    // should be displayed on the same axes.\n    const vancMonitoring = [\n      vancRxNorm,\n      new LOINCCodeGroup(\n          this.fhirService, 'Monitoring', ResourceCodeManager.vancMonitoring,\n          med, ChartType.SCATTER,\n          undefined,  // no meaningful y-axis ranges\n          false,\n          (observation: Observation, dateRange: Interval):\n              Promise<AnnotatedObservation> => {\n                return vancRxNorm.getResourceSet(dateRange).then(rxNorms => {\n                  // We know that we're only pushing in one RxNorm\n                  // so it's safe to grab the first (and only) one in\n                  // the list.\n                  return AnnotatedObservation.forMedicationMonitoring(\n                      observation, rxNorms[0].orders);\n                });\n              })\n    ];\n\n    codeGroups.push(new AxisGroup(\n        vancMonitoring.map(\n            codeGroup => new Axis(\n                this.fhirService, this.sanitizer, codeGroup, codeGroup.label)),\n        'Vancomycin'));\n\n    const gentMonitoring = [\n      new RxNormCodeGroup(\n          this.fhirService, 'Medication Administrations',\n          [RxNormCode.fromCodeString('1596450')], med, ChartType.SCATTER),\n      new LOINCCodeGroup(\n          this.fhirService, 'Monitoring', ResourceCodeManager.gentMonitoring,\n          med, ChartType.SCATTER)\n    ];\n\n    codeGroups.push(new AxisGroup(\n        gentMonitoring.map(\n            codeGroup => new Axis(\n                this.fhirService, this.sanitizer, codeGroup, codeGroup.label)),\n        'Gentamicin'));\n\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new LOINCCodeGroup(\n            this.fhirService, 'Urinalysis', ResourceCodeManager.urineGroup,\n            labResult, ChartType.SCATTER),\n        'Urinalysis')]));\n\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new LOINCCodeGroup(\n            this.fhirService, 'CSF', ResourceCodeManager.csfGroup, labResult,\n            ChartType.SCATTER),\n        'CSF')]));\n\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new LOINCCodeGroup(\n            this.fhirService, 'Other Fluid',\n            ResourceCodeManager.otherFluidGroup, labResult, ChartType.SCATTER),\n        'Other Fluid')]));\n\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new BCHMicrobioCodeGroup(\n            this.fhirService, 'Stool', ResourceCodeManager.stoolGroup, microbio,\n            ChartType.MICROBIO),\n        'Stool')]));\n\n    codeGroups.push(new AxisGroup([new Axis(\n        this.fhirService, this.sanitizer,\n        new BCHMicrobioCodeGroup(\n            this.fhirService, 'NP Swab', ResourceCodeManager.npSwabGroup,\n            microbio, ChartType.MICROBIO),\n        'NP Swab')]));\n    ResourceCodeManager.axisGroups = codeGroups;\n\n    const mapping = new Map<DisplayGrouping, AxisGroup[]>();\n    for (const group of this.getResourceCodeGroups()) {\n      if (mapping.has(group.displayGroup)) {\n        mapping.get(group.displayGroup).push(group);\n      } else {\n        mapping.set(group.displayGroup, [group]);\n      }\n    }\n    ResourceCodeManager.displayGroupMapping = mapping;\n  }\n\n  /**\n   * Returns the ResourceCodeGroups to be displayed. If the maps have already\n   * been constructed, returns the static variable holding the information.\n   * If not, constructs the maps and saves them into the static class variable,\n   * then returns.\n   */\n  getResourceCodeGroups(): AxisGroup[] {\n    return ResourceCodeManager.axisGroups;\n  }\n\n  /**\n   * Returns a map where the key is a clinical concept group and the value is\n   * a list of LOINC code groups belonging to the clinical concept group.\n   */\n  getDisplayGroupMapping(): Map<DisplayGrouping, AxisGroup[]> {\n    return ResourceCodeManager.displayGroupMapping;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {CachedResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {MedicationAdministration} from '../fhir-data-classes/medication-administration';\nimport {MedicationOrder, MedicationOrderSet} from '../fhir-data-classes/medication-order';\n\nimport {RxNormCode} from './rx-norm';\n\n/**\n * Represents one or more RxNorm codes that should be displayed together. In the\n * case of multiple RxNorm codes in a group, you should provide a label for that\n * group.\n */\nexport class RxNormCodeGroup extends CachedResourceCodeGroup<RxNormCode> {\n  /**\n   * Fills out the order and administration information for each for each\n   * RxNormCode in this group, and returns a list of the populated RxNormCodes.\n   * This is a roundabout process because the Cerner implementation of the\n   * FHIR standard doesn't allow for searching MedicationOrders by RxNorm code,\n   * so we have to search for MedicationAdministrations by RxNorm code and work\n   * up from there.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<RxNormCode[]> {\n    return this.fhirService\n        .getMedicationAdministrationsWithCodes(this, dateRange)\n        .then(\n            medAdmins => {\n              const groupedByOrder =\n                  this.groupAdministrationsByOrderId(medAdmins);\n              return this.getMedicationOrdersAndMapToMed(groupedByOrder);\n            },\n            rejection => {\n              // If there are any errors constructing MedicationAdministrations\n              // or MedicationOrders for this RxNormCode[], throw the error.\n              throw rejection;\n            });\n  }\n\n  /**\n   * Takes a list of lists of MedicationAdministrations and groups them by their\n   * order IDs. Each list represents a set of MedicationAdministrations for a\n   * specific RxNorm, but they're not arranged by order. For example:\n   *\n   * [[admin1_rxnorm1_orderA, admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  [admin1_rxnorm3_orderD]]\n   *\n   * would yield:\n   *\n   * {orderA: [admin1_rxnorm1_orderA],\n   *  orderB: [admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  orderC: [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  orderD: [admin1_rxnorm3_orderD]\n   * }\n   * @param medAdmins A list of lists of MedicationAdministrations. See above.\n   * @returns A map of order IDs to a list of corresponding\n   *     MedicationAdministrations.\n   */\n  private groupAdministrationsByOrderId(medAdmins:\n                                            MedicationAdministration[][]):\n      Map<string, MedicationAdministration[]> {\n    let groupedByOrder = new Map<string, MedicationAdministration[]>();\n    for (const medAdminForDrug of medAdmins) {\n      // Group medication administrations by medication order.\n      groupedByOrder = medAdminForDrug.reduce(\n          (groups: Map<string, MedicationAdministration[]>,\n           medAdmin: MedicationAdministration) => {\n            // Append this administration to whatever order list it belongs to.\n            const orderId: string = medAdmin.medicationOrderId;\n            if (!groups.has(orderId)) {\n              groups.set(orderId, new Array<MedicationAdministration>());\n            }\n            groups.set(orderId, groups.get(orderId).concat(medAdmin));\n            return groups;\n          },\n          // Use whatever existed in groupedByOrder prior to this iteration as\n          // the basis for the reducer to add to.\n          groupedByOrder);\n    }\n    return groupedByOrder;\n  }\n\n  /**\n   * Transforms a map with keys of MedicationOrder IDs and values of\n   * MedicationAdministrations to a list of RxNormCodes, with the RxNormCodes\n   * containing their corresponding MedicationOrders, and the medicationOrders\n   * containing their corresponding MedicationAdministrations. For example:\n   *\n   * {orderA: [admin1_rxnorm1_orderA],\n   *  orderB: [admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  orderC: [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  orderD: [admin1_rxnorm3_orderD]\n   * }\n   *\n   * would yield:\n   *\n   *  [RxNorm1 = {orders:\n   *     [OrderA {administrationsForOrder: [admin1_rxnorm1_orderA]},\n   *      OrderB {administrationsForOrder: [admin2_rxnorm1_orderB,\n   *                                        admin3_rxnorm1_orderB]}]}\n   *   RxNorm2 = {orders:\n   *      [OrderC {administrationsForOrder: [admin1_rxnorm2_orderC,\n   *                                         admin2_rxnorm2_orderC]}]}\n   *   RxNorm3 = {orders:\n   *      [OrderD {administrationsForOrder: [admin1_rxnorm3_orderD]}]}\n   *\n   * @param groupedByOrder A map with keys of MedicationOrder IDs and values of\n   *     MedicationAdministrations for those MedicationOrders.\n   * @returns A list of RxNormCodes with orders populated\n   * @throws Error if the incoming parameter has medication administrations that\n   *     did not come from the same order for the same med\n   */\n  private getMedicationOrdersAndMapToMed(\n      groupedByOrder: Map<string, MedicationAdministration[]>):\n      Promise<RxNormCode[]> {\n    const groupedByMed = new Map<RxNormCode, MedicationOrder[]>();\n    const allPromises = Array.from(groupedByOrder.keys()).map(orderId => {\n      return this.fhirService.getMedicationOrderWithId(orderId)\n          .then(\n              order => {\n                // We only have the MedicationAdministrations from within the\n                // specified time window, so we have to search again for all the\n                // MedicationAdministrations present for this order and assign\n                // them to the order.\n                // We assume that an administration will always have a\n                // corresponding order.\n                return order.setMedicationAdministrations(this.fhirService);\n              },\n              rejection => {\n                // If there are any errors constructing MedicationOrders for\n                // this RxNormCode[], throw the error.\n                throw rejection;\n              })\n          .then(\n              (order: MedicationOrder) => {\n                // Verify all the administrations have the same RxNormCode and\n                // same Order ID.\n                const rxNormCodeSet = new Set(\n                    Array.from(groupedByOrder.get(order.orderId).values())\n                        .map(admin => admin.rxNormCode));\n                if (rxNormCodeSet.size !== 1) {\n                  throw Error(\n                      'Administrations for order ' + order.orderId +\n                      ' are for multiple RxNorms: ' +\n                      Array.from(rxNormCodeSet.values()));\n                }\n\n                const orderSet = new Set(\n                    Array.from(groupedByOrder.get(order.orderId).values())\n                        .map(admin => admin.medicationOrderId));\n                if (rxNormCodeSet.size !== 1) {\n                  throw Error(\n                      'Administrations for order ' + order.orderId +\n                      ' report multiple order IDs: ' + Array.from(orderSet));\n                }\n\n                // Add the order to the map for the RxNorm code.\n                const rxCode = rxNormCodeSet.values().next().value;\n                if (groupedByMed.has(rxCode)) {\n                  groupedByMed.set(\n                      rxCode, groupedByMed.get(rxCode).concat(order));\n                } else {\n                  groupedByMed.set(rxCode, new Array(order));\n                }\n              },\n              rejection => {\n                // If there are any errors constructing MedicationOrders for\n                // this RxNormCode[], throw the error.\n                throw rejection;\n              });\n    });\n    // Resolve all the promises and set the corresponding orders for each\n    // RxNorm.\n    return Promise.all(allPromises)\n        .then(\n            _ => {\n              Array.from(groupedByMed.entries()).forEach(medEntry => {\n                const rxNorm = medEntry[0];\n                const medOrders = medEntry[1];\n                rxNorm.orders = new MedicationOrderSet(medOrders);\n              });\n              // Return all the populated RxNorms.\n              return Array.from(groupedByMed.keys());\n            },\n            rejection => {\n              // If any promise is rejected, throw the same rejection.\n              throw rejection;\n            });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {ResourceCode} from '../clinicalconcepts/resource-code-group';\nimport {MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {FhirService} from '../fhir.service';\nimport * as Colors from '../theme/verily_colors';\n\nimport {DisplayGrouping} from './display-grouping';\n\nexport class MedicationConceptGroup extends DisplayGrouping {}\n\nexport const ANTIBIOTIC =\n    new MedicationConceptGroup('Antibiotic', Colors.DEEP_TURQUOISE);\n\nexport const MEDICATION_GROUPS = [ANTIBIOTIC];\n\n/**\n * Holds RXNorm codes and orders corresponding to them.\n */\nexport class RxNormCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://www.nlm.nih.gov/research/umls/rxnorm';\n\n  /* Contains a set of medication orders for this RxNorm code. */\n  orders: MedicationOrderSet;\n\n  dataAvailableInAppTimeScope(fhirService: FhirService): Promise<boolean> {\n    return fhirService.medicationsPresentWithCode(this, APP_TIMESPAN);\n  }\n}\n\nexport const RXNORM_CODES = [\n  // Parenteral antibiotics\n  new RxNormCode('11124', ANTIBIOTIC, 'Vancomycin', true),\n  new RxNormCode('1596450', ANTIBIOTIC, 'Gentamicin')\n];\n","module.exports = \".previewSave {\\n  background-color:#202020; /* GREY_900 */\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 15px;\\n  width: 90%;\\n  overflow: auto;\\n  max-height: 80%;\\n  /* Disable selecting/highlighting on the page. */\\n  -webkit-touch-callout: none; /* iOS Safari */\\n  -webkit-user-select: none; /* Safari */\\n     -moz-user-select: none; /* Firefox */\\n      -ms-user-select: none; /* Internet Explorer/Edge */\\n          user-select: none; /* Chrome and Opera */\\n}\\n\\n::ng-deep .previewSave > * {\\n  pointer-events: none !important;\\n}\\n\\n.mat-dialog-actions {\\n  float: right;\\n}\\n\\nh1 {\\n  font-family: 'Montserrat', sans-serif;\\n}\"","module.exports = \"<h1 mat-dialog-title>\\n  Save a static image of this page to a PowerChart clinical note?\\n</h1>\\n<div class=\\\"previewText\\\">Preview:</div>\\n<div id=\\\"previewCanvas\\\" style=\\\"overflow-y:auto;\\\"></div>\\n<div mat-dialog-actions>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onExit()\\\">No</button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onConfirm()\\\" cdkFocusInitial>Yes</button>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-confirm-save',\n  templateUrl: './confirm-save.component.html',\n  styleUrls: ['./confirm-save.component.css']\n})\nexport class ConfirmSaveComponent {\n  innerHtml: string;\n  constructor(\n      public dialogRef: MatDialogRef<ConfirmSaveComponent>,\n      @Inject(MAT_DIALOG_DATA) readonly data: HTMLCanvasElement) {}\n\n  ngAfterViewInit() {\n    this.data.setAttribute('id', 'previewImg');\n    this.data.setAttribute('style', 'width:500px');\n    document.getElementById('previewCanvas').appendChild(this.data);\n  }\n\n  // The user does not wish to save the snapshot.\n  onExit() {\n    this.dialogRef.close();\n  }\n\n  // The user wishes to save the snapshot.\n  onConfirm() {\n    this.dialogRef.close({\n      save: true,\n    });\n  }\n}\n","module.exports = \".configurationCard {\\n  background-color: transparent;\\n  border-left-style: solid;\\n  border-left-width: 5px;\\n  height: 40px !important;\\n  padding: 3px;\\n}\\n\\n\\n.disableDragging {\\n  color: gray;\\n  cursor: not-allowed;\\n  padding-top: 4px;\\n}\\n\\n\\n.listItem {\\n  display: inline-block;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  padding-left: 5px !important;\\n}\\n\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 0px !important;\\n}\\n\\n\\n.label {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  line-height: 15px;\\n}\\n\\n\\n.tinytext {\\n  font-size: 12px;\\n  line-height: 15px;\\n}\\n\"","module.exports = \"<div class=\\\"configurationCard {{axisGroup.dataAvailable ? 'enableDragging': 'disableDragging'}}\\\"\\n  [style.border-left-color]=\\\"axisGroup.dataAvailable ? axisGroup.displayGroup.fill.hsl().string(): 'rgb(197, 185, 172)'\\\">\\n  <!-- BOSTON_WARM_GRAY -->\\n  <mat-list-item>\\n    <div class=\\\"listItem\\\">\\n      <div style=\\\"display:inline-block; vertical-align: middle;\\\">\\n        <div class=\\\"label\\\">\\n          {{axisGroup.label}}\\n        </div>\\n        <div class=\\\"tinytext\\\" *ngIf=\\\"!axisGroup.dataAvailable\\\">\\n          {{uiConstants.NO_DATA_AVAILABLE_TMPL + appTimeIntervalString}}\\n        </div>\\n      </div>\\n    </div>\\n  </mat-list-item>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {AfterViewInit, Component, Inject, Input} from '@angular/core';\nimport {APP_TIMESPAN, UI_CONSTANTS, UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {AxisGroup} from '../graphtypes/axis-group';\n\n/**\n * Represents one element in a list or menu of ResourceCodesForCards\n * that can be added to the main CardContainer.\n */\n@Component({\n  selector: 'app-data-selector-element',\n  templateUrl: './data-selector-element.component.html',\n  styleUrls: ['./data-selector-element.component.css']\n})\nexport class DataSelectorElementComponent implements AfterViewInit {\n  /**\n   *  The ResourceCodes for the card represented by this DataSelectorElement.\n   */\n  @Input() axisGroup: AxisGroup;\n\n  /**\n   *  Hold an instance of the app time interval so we can display it in the HTML\n   */\n  readonly appTimeIntervalString = APP_TIMESPAN.start.toFormat('MM/dd/yyyy') +\n      ' and ' + APP_TIMESPAN.end.toFormat('MM/dd/yyyy');\n\n  /**\n   * Whether there is data available within the app timespan for this card.\n   */\n  dataAvailable: boolean = true;\n\n  constructor(@Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {}\n\n  ngAfterViewInit() {\n    // We have to wait until after view initialization so that the @Input\n    // element binding happens.\n    this.axisGroup.dataAvailableInAppTimeScope().then(available => {\n      this.dataAvailable = available;\n    });\n  }\n}\n","module.exports = \".addCardInline {\\n  color: rgb(248, 248, 248);\\n  display: inline-block;\\n  opacity: 0.15;\\n  -webkit-transition: opacity 0.3s;\\n  transition: opacity 0.3s;\\n  /* Needed so that there's not enough space between the cards to hold the icon,\\n  just enough to hold the line placeholder.*/\\n  margin-bottom:-14px;\\n  margin-top:-14px;\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox; /* For IE10 */\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n          flex-direction: row;\\n  -ms-flex-direction: row; /* For IE10 */\\n  align-content: center;\\n  -ms-flex-line-pack: center;  /* Align content: center conversion for IE10 */\\n  -webkit-box-pack: start;\\n          justify-content: flex-start;\\n  -ms-flex-pack: start;  /* Justify content: start conversion for IE10 */\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -ms-flex-align: center;  /* Align items: center conversion for IE10 */\\n  -webkit-box-flex: 1;\\n          flex: 1 1 0%;\\n  -ms-flex: 1 1 0%; /* For IE10 */\\n}\\n\\nspan {\\n  border: 2px dashed rgb(248, 248, 248);\\n  /* Only outline the bottom instead of all four sides.*/\\n  border-style: none none dotted;\\n  display: inline-block;\\n  -webkit-box-flex: 1;\\n          flex: 1 1 0%;\\n  -ms-flex: 1 1 0%; /* For IE10 */\\n}\\n\\n.addCardInline:hover {\\n  opacity: 1;\\n}\\n\\n.conceptSelector {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n  min-width: 200px;\\n}\\n\\n.mainConceptSelector {\\n  border-left-style: solid;\\n  border-left-width: 5px;\\n}\\n\\n::ng-deep .mat-menu-item  {\\n  line-height: 20px !important;\\n}\\n\\n::ng-deep .mat-list-item-content {\\n  margin-top: 8px;\\n}\\n\\n::ng-deep .mat-autocomplete-panel .mat-list-item-content {\\n  margin-top: -8px; /* Styling for autocomplete menu items needs to be different.*/\\n}\\n\\n::ng-deep .mat-option {\\n  height: -webkit-fit-content !important;\\n  height: -moz-fit-content !important;\\n  height: fit-content !important;\\n  overflow: visible !important;\\n  padding: 0px !important;\\n}\\n\\n.conceptForm {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n::ng-deep .autoMenu.mat-menu-panel {\\n  min-width: 300px;\\n}\\n\\n.conceptFormField {\\n  width: 100%;\\n}\\n\\nbutton {\\n  font-family: 'Work Sans', sans-serif;\\n}\"","module.exports = \"<div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"addCardInline\\\">\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"masterMenu\\\" matTooltip=\\\"{{uiConstants.ADD_CARD_HERE}}\\\">\\n    <mat-icon class=\\\"toolbarButton\\\">add_circle</mat-icon>\\n  </button>\\n  <span fxFlex>\\n  </span>\\n</div>\\n<mat-menu #masterMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <ng-template matMenuContent>\\n    <button mat-menu-item (click)=\\\"textbox()\\\">\\n      <mat-icon>comment</mat-icon>\\n      <span>{{uiConstants.ADD_ANNOTATION}}</span>\\n    </button>\\n    <button mat-menu-item (click)=\\\"customTimeline()\\\">\\n      <mat-icon>show_chart</mat-icon>\\n      <span>{{uiConstants.ADD_CUSTOM_TIMELINE}}</span>\\n    </button>\\n    <mat-divider></mat-divider>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"conceptSelectorMenu\\\">\\n      <mat-icon>add_to_photos</mat-icon>\\n      <span>{{uiConstants.ADD_CHART}}</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n<mat-menu #conceptSelectorMenu=\\\"matMenu\\\" [style.padding]=\\\"0\\\">\\n  <ng-template matMenuContent>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"menu\\\">\\n      {{uiConstants.SEARCH_FOR_A_CONCEPT}}\\n    </button>\\n    <mat-divider></mat-divider>\\n    <mat-menu #menu=\\\"matMenu\\\" (closed)=\\\"autocompleteTrigger.closePanel()\\\" class=\\\"autoMenu\\\">\\n      <!-- Autocomplete search bar -->\\n      <form class=\\\"conceptForm\\\">\\n        <mat-form-field class=\\\"conceptFormField\\\">\\n          <input matInput placeholder=\\\"{{uiConstants.SEARCH_FOR_A_CONCEPT}}\\\" [matAutocomplete]=\\\"auto\\\"\\n            [formControl]=\\\"conceptCtrl\\\" (click)=\\\"$event.stopPropagation()\\\">\\n          <!-- $event.stopPropagation is to not close main menu when clicking inside the input field -->\\n          <mat-icon matPrefix>search</mat-icon>\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectOption($event)\\\">\\n            <mat-option *ngFor=\\\"let concept of filteredConcepts | async\\\" [value]=\\\"concept.label\\\">\\n              <app-data-selector-element [axisGroup]=\\\"concept\\\"></app-data-selector-element>\\n              <mat-divider></mat-divider>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </form>\\n    </mat-menu>\\n    <ng-container *ngFor=\\\"let entry of displayGroupings\\\">\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"subConceptSelectorMenu\\\" class=\\\"mainConceptSelector\\\"\\n        [style.border-left-color]=\\\"entry[0].fill.hsl().string()\\\">\\n        {{entry[0].label}}\\n      </button>\\n      <mat-divider></mat-divider>\\n      <mat-menu #subConceptSelectorMenu=\\\"matMenu\\\">\\n        <ng-template matMenuContent>\\n          <button *ngFor=\\\"let axisGroup of entry[1]\\\" (click)=\\\"addConceptCard(axisGroup.label)\\\" class=\\\"conceptSelector\\\"\\n            mat-menu-item>\\n            <app-data-selector-element [axisGroup]=\\\"axisGroup\\\">\\n            </app-data-selector-element>\\n            <mat-divider></mat-divider>\\n          </button>\\n        </ng-template>\\n      </mat-menu>\\n    </ng-container>\\n  </ng-template>\\n</mat-menu>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Inject, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteTrigger, MatMenuTrigger} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeManager} from '../clinicalconcepts/resource-code-manager';\nimport {AxisGroup} from '../graphtypes/axis-group';\n\n/**\n * Shows a button with expanding menus for selecting data elements to display.\n */\n@Component({\n  selector: 'app-data-selector-menu',\n  templateUrl: './data-selector-menu.component.html',\n  styleUrls: ['./data-selector-menu.component.css']\n})\nexport class DataSelectorMenuComponent implements OnInit {\n  // The trigger for the main menu displayed.\n  @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\n  // The trigger for the autocomplete panel displayed.\n  @ViewChild(MatAutocompleteTrigger)\n  autocompleteTrigger: MatAutocompleteTrigger;\n\n  // An array of DisplayGroupings and AxisGroup that belong to that\n  // grouping.\n  readonly displayGroupings: Array<[DisplayGrouping, AxisGroup[]]>;\n\n  // An event that is emitted when the user requests to add a new card.\n  @Output() addCard = new EventEmitter<string>();\n  // An event that is emitted when the user requests to add a textbox.\n  @Output() addTextbox = new EventEmitter<null>();\n  // An event that is emitted when the user requests to add a custom timeline.\n  @Output() addCustomTimeline = new EventEmitter<null>();\n\n  // All AxisGroup that correspond to cards displayed on the page.\n  readonly allConcepts: AxisGroup[];\n\n  // The FormControl used to monitor changes in the user input of the\n  // autocomplete field.\n  readonly conceptCtrl = new FormControl();\n  filteredConcepts: Observable<AxisGroup[]>;\n  constructor(\n      private resourceCodeManager: ResourceCodeManager,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    const temp = Array.from(displayGroups.values());\n    this.allConcepts = [].concat.apply([], temp);\n    this.displayGroupings = Array.from(displayGroups.entries());\n  }\n\n  ngOnInit() {\n    // Watch for changes to the user input on the autocomplete panel.\n    this.filteredConcepts = this.conceptCtrl.valueChanges.pipe(\n        startWith(''),  // The autocomplete input starts with nothing typed in.\n        map(concept =>\n                concept ? this.filter(concept) : this.allConcepts.slice()));\n  }\n\n  // Listens for an event indicating that the user has selected to add the\n  // concept card from the top toolbar. The label for the card is sent as an\n  // event to CardContainer.\n  private addConceptCard(label: string) {\n    this.addCard.emit(label);\n    // Record the user adding a card with charts to Google Analytics.\n    (<any>window).gtag('event', 'addConcept', {\n      'event_category': 'addCard',\n      'event_label': label\n    });\n  }\n\n  // Emits an event indicating to CardContainer to add a blank textbox at the\n  // top of the page.\n  private textbox() {\n    this.addTextbox.emit();\n    // Record the user adding a textbox card to Google Analytics.\n    (<any>window).gtag('event', 'addTextbox', {\n      'event_category': 'addCard',\n      'event_label': new Date().toDateString()\n    });\n  }\n\n  private customTimeline() {\n    this.addCustomTimeline.emit();\n    // Record the user adding a CustomizableTimeline to Google Analytics.\n    (<any>window).gtag('event', 'addCustomTimeline', {\n      'event_category': 'addCard',\n      'event_label': new Date().toDateString()\n    });\n  }\n\n  // Filter the concepts shown on the autocomplete menu.\n  filter(concept): AxisGroup[] {\n    return this.allConcepts.filter(\n        option =>\n            option.label.toLowerCase().indexOf(concept.toLowerCase()) === 0);\n  }\n\n  // We close the menu after an option is selected by autocomplete.\n  private closeMenus() {\n    this.menuTrigger.closeMenu();\n    this.autocompleteTrigger.closePanel();\n  }\n\n  // Listen for the event indicating that an option has been selected in the\n  // autocomplete menu.\n  private selectOption($event) {\n    this.addConceptCard($event.option.value);\n    this.closeMenus();\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Duration, Interval} from 'luxon';\n/**\n * For the given date range, returns a DateTime for each day in the time\n * range (converting to local time first) as a list in chronological\n * order. All data points in dateRange will be enclosed by the days listed in\n * the returned array. If specified, additional DateTimes will be included at\n * the 12-hour mark of each day in the interval.\n * @param dateRange The date range to get tick marks for.\n * @param twelveHour Whether or not to include DateTimes at the 12-hour mark of\n *     each day.\n *\n * @returns A list of the days in chronological order within the time range.\n */\nexport function getTickMarksForXAxis(\n    dateRange: Interval, twelveHour: boolean): DateTime[] {\n  const days: DateTime[] = [];\n  // The dateRange could be stored in UTC, so convert it back to local\n  // time.\n  const intervalLocal = Interval.fromDateTimes(\n      dateRange.start.toLocal(), dateRange.end.toLocal());\n  const startDate: DateTime = intervalLocal.start.startOf('day');\n  const dayCount =\n      Duration.fromMillis(intervalLocal.end.toMillis() - startDate.toMillis())\n          .as('days');\n\n  for (let i = 0; i <= dayCount; i++) {\n    days.push(startDate.plus({days: i}));\n    if (twelveHour) {\n      days.push(startDate.plus({days: i, hours: 12}));\n    }\n  }\n\n  return days;\n}\n\n/**\n * Returns a DateTime for each day contained in any of the intervals in the\n * passed-in interval set. If the interval set contains day-boundaries, it will\n * add an extra day to be sure to encompass the full day, like\n * getTickMarksForXAxis. The days returned will be in an array in time order.\n *\n * @param intervals The intervals to list all the days for.\n */\nexport function getDaysForIntervalSet(intervals: Interval[]): DateTime[] {\n  const days: DateTime[] = [];\n  const allIntervals = Interval.merge(intervals);\n  for (const interval of allIntervals) {\n    getTickMarksForXAxis(interval, false).forEach(x => days.push(x.toUTC()));\n  }\n  return days.sort();\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\n\n/**\n * This service accumulates any errors sent to it in the app into an array of\n * strings so that they can be surfaced in the UI.\n */\n@Injectable({providedIn: 'root'})\nexport class DebuggerService {\n  errors: string[] = [];\n\n  logError(error: string) {\n    this.errors.push(error);\n  }\n}\n","module.exports = \"<div style=\\\"background-color: white\\\">\\n  Browser version: {{browserVersion}} <br />\\n  Authentication information:<br />\\n  URL Parameters: {{parameters}} <br />\\n\\n  Errors surfaced:<br />\\n  <div *ngFor=\\\"let error of debugService.errors\\\">\\n    {{error}}\\n  </div>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\nimport 'fhirclient';\n\nimport {Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\nimport {DebuggerService} from '../debugger.service';\n\n@Component({\n  selector: 'app-debugger',\n  templateUrl: './debugger.component.html',\n})\n\n/**\n * This debugger component surfaces errors stored in the debug service to the\n * UI.\n */\nexport class DebuggerComponent {\n  browserVersion: string;\n  parameters = new Array<string>();\n\n  constructor(\n      readonly debugService: DebuggerService, private route: ActivatedRoute) {\n    this.browserVersion = navigator.appVersion;\n\n    this.route.queryParams.subscribe(params => {\n      this.parameters.push(JSON.stringify(params));\n    });\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>{{uiConstants.REMOVE_CARD}}</h1>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onExit()\\\">{{uiConstants.REMOVE_CARD_NO}}</button>\\n  <button mat-button (click)=\\\"onConfirm()\\\" cdkFocusInitial>{{uiConstants.REMOVE_CARD_YES}}</button>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n\n/**\n * Shows a dialog asking the user to confirm whether or not they wish to delete\n * the card.\n */\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['../cardcontainer/cardcontainer.component.css']\n})\nexport class DeleteDialogComponent {\n  constructor(\n      public dialogRef: MatDialogRef<DeleteDialogComponent>,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {}\n\n  // The user does not wish to delete the card.\n  onExit() {\n    this.dialogRef.close();\n  }\n\n  // The user wishes to delete the card.\n  onConfirm() {\n    this.dialogRef.close({\n      delete: true,\n    });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Duration, Interval} from 'luxon';\n\nimport {LabeledClass} from '../fhir-resource-set';\n\nimport {MedicationOrder, MedicationOrderSet} from './medication-order';\nimport {Observation} from './observation';\nimport {ObservationSet} from './observation-set';\n\n/**\n * An Observation with additional information to display in its tooltip.\n */\nexport class AnnotatedObservation extends LabeledClass {\n  constructor(\n      readonly observation: Observation,\n      /**\n       * The items in this list are [label, value] pairs to be displayed in\n       * a tooltip.\n       * This array should be treated as immutable.\n       */\n      readonly annotationValues = new Array<[string, string]>()) {\n    super(observation.label);\n  }\n\n  /**\n   * Makes an AnnotatedObservation for medication monitoring.\n   * The annotations read out how long it's been since the prior medication\n   * dose, and how long it was until the next medication dose was given.\n   * @param observation The monitoring observation to annotate\n   * @param medicationOrderSet The medication orders containing the doses of the\n   *     corresponding medication\n   * @throws Error if there are two medication orders in MedicationOrderSet\n   *     that contain the timestamp of the observation\n   */\n  static forMedicationMonitoring(\n      observation: Observation,\n      medicationOrderSet: MedicationOrderSet): AnnotatedObservation {\n    // Look in the medication order set's administrations and find the ones\n    // closest in time to this observation.\n    let doseCountBefore: number;\n    let doseCountAfter: number;\n    let timeSinceLast: Duration;\n    let timeBeforeNext: Duration;\n\n    const annotations = new Array<[string, string]>();\n    // Find the medication order set that coincides in time with this\n    // administration (if any).\n    let containingMedicationOrder: MedicationOrder;\n    for (const order of medicationOrderSet.resourceList) {\n      if (Interval\n              .fromDateTimes(\n                  order.firstAdministration.timestamp,\n                  order.lastAdmininistration.timestamp)\n              .contains(observation.timestamp)) {\n        if (containingMedicationOrder) {\n          throw Error('Two medication orders contain this monitoring point.');\n        }\n        containingMedicationOrder = order;\n      }\n    }\n\n    if (containingMedicationOrder) {\n      // Find the spot in the array of administrations where the monitoring\n      // would fall, timewise.\n      const sortedAdmins =\n          containingMedicationOrder.administrationsForOrder.resourceList.sort(\n              (a, b) => a.medAdministration.timestamp.toMillis() -\n                  b.medAdministration.timestamp.toMillis());\n\n      let idx = 0;\n      while (idx < sortedAdmins.length &&\n             sortedAdmins[idx].medAdministration.timestamp <\n                 observation.timestamp) {\n        idx++;\n      }\n\n      // It's guaranteed that there's a dose before the monitoring point and a\n      // dose after the monitoring point since we check to make sure\n      // the observation is between the first and last administrations.\n      // Here we look up those dose numbers and the time difference between\n      // the doses and the monitoring point.\n      const doseBeforeObs = sortedAdmins[idx - 1];\n      const doseAfterObs = sortedAdmins[idx];\n\n      doseCountBefore = doseBeforeObs.doseInOrder;\n      timeSinceLast =\n          observation.timestamp.diff(doseBeforeObs.medAdministration.timestamp);\n\n      doseCountAfter = doseAfterObs.doseInOrder;\n      timeBeforeNext =\n          doseAfterObs.medAdministration.timestamp.diff(observation.timestamp);\n\n      annotations.push([\n        'Time since dose #' + doseCountBefore, timeSinceLast.toFormat('h:mm')\n      ]);\n\n      annotations.push([\n        'Time before dose #' + doseCountAfter, timeBeforeNext.toFormat('h:mm')\n      ]);\n    }\n\n    return new AnnotatedObservation(observation, annotations);\n  }\n\n  /**\n   * Makes an AnnotatedObservation for blood pressure, with information about\n   * the blood pressure location.\n   * @param observation The monitoring observation to annotate\n   * @param locationSet The ObservationSet containing Blood Pressure location\n   *     observations.\n   * @throws Error if there are two observations in locationSet\n   *     that contain the timestamp of the observation\n   */\n  static forBloodPressure(\n      observation: Observation,\n      locationSet: ObservationSet): AnnotatedObservation {\n    const annotations = new Array<[string, string]>();\n    // Find the medication order set that coincides in time with this\n    // administration (if any).\n    let matchingObservation: Observation;\n    if (locationSet) {\n      for (const locationObs of locationSet.resourceList) {\n        if (locationObs.observation.timestamp.equals(observation.timestamp)) {\n          if (matchingObservation) {\n            throw Error(\n                'Two blood pressure locations recorded at the same time.');\n          }\n          matchingObservation = locationObs.observation;\n        }\n      }\n    }\n\n    if (matchingObservation) {\n      annotations.push(['Blood Pressure Location', matchingObservation.result]);\n    }\n\n    return new AnnotatedObservation(observation, annotations);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\n\nimport {FhirResourceType} from '../../constants';\n\nimport {Observation} from './observation';\nimport {Specimen} from './specimen';\n\n/**\n * FHIR element for DiagnosticReportStatus, from the DSTU2 version of the\n * standard.\n * https://www.hl7.org/fhir/valueset-diagnostic-report-status.html\n */\nexport enum DiagnosticReportStatus {\n  Registered = 'Registered',\n  Partial = 'Partial',\n  Preliminary = 'Preliminary',\n  Final = 'Final',\n  Amended = 'Amended',\n  Corrected = 'Corrected',\n  Appended = 'Appended',\n  Cancelled = 'Cancelled',\n  EnteredInError = 'Enteredinerror',\n  Unknown = 'Unknown'\n}\n\nconst statusToEnumMap = new Map<string, DiagnosticReportStatus>([\n  ['registered', DiagnosticReportStatus.Registered],\n  ['partial', DiagnosticReportStatus.Partial],\n  ['preliminary', DiagnosticReportStatus.Preliminary],\n  ['final', DiagnosticReportStatus.Final],\n  ['amended', DiagnosticReportStatus.Amended],\n  ['corrected', DiagnosticReportStatus.Corrected],\n  ['appended', DiagnosticReportStatus.Appended],\n  ['cancelled', DiagnosticReportStatus.Cancelled],\n  ['entered-in-error', DiagnosticReportStatus.EnteredInError],\n  ['unknown', DiagnosticReportStatus.Unknown],\n]);\n\n/**\n * FHIR resource for DiagnosticReport, from the DSTU2 version of the standard.\n * https://www.hl7.org/fhir/DSTU2/diagnosticreport.html\n *\n * The parsing for this class is heavily influenced by the custom API BCH\n * built to return DiagnosticReports for microbiology data. In particular, we\n * only parse out specimens and results from the \"contained\" portion of the\n * resource instead of supporting retrieval by reference since the Cerner\n * implementation of the FHIR standard won't allow microbiology retrieval.\n */\nexport class DiagnosticReport {\n  readonly id: string;\n\n  /** Specimens this report is based on */\n  readonly specimens = new Array<Specimen>();\n\n  /** Results in the form of observations */\n  readonly results = new Array<Observation>();\n\n  /** Status for this test */\n  readonly status: DiagnosticReportStatus;\n\n  constructor(json: any) {\n    if (json.id) {\n      this.id = json.id;\n    }\n\n    // Contained resources may be either specimens or observations.\n    const contained = json.contained;\n    for (const rsc of contained) {\n      if (rsc.resourceType === FhirResourceType.Specimen) {\n        this.specimens.push(new Specimen(rsc));\n      } else if (rsc.resourceType === FhirResourceType.Observation) {\n        this.results.push(new Observation(rsc));\n      }\n      // Silently ignore all other contained resource types.\n    }\n\n    if (!json.status) {\n      throw Error(\n          'The report needs a status to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    this.status = statusToEnumMap.get(json.status);\n  }\n}\n\n/**\n * A diagnostic report with the timestamp for a specific culture type extended.\n */\nexport class AnnotatedDiagnosticReport {\n  readonly timestamp: DateTime;\n  readonly report: DiagnosticReport;\n\n  constructor(report: DiagnosticReport, cultureType: string) {\n    // Get the timestamp from the collection time of the specimen.\n    const specimen = report.specimens.find(s => (s.type === cultureType));\n    if (specimen) {\n      this.timestamp = specimen.collectedDateTime ?\n          specimen.collectedDateTime :\n          (specimen.collectedPeriod ? specimen.collectedPeriod.start :\n                                      undefined);\n    }\n    this.report = report;\n  }\n}\n","import {fixUnitAbbreviations} from '../unit_utils';\n\n// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/**\n * This object represents relevant components of dosage information, provided\n * in MedicationOrders and MedicationAdministrations.\n */\nexport class Dosage {\n  readonly quantity: number;\n  readonly unit: string;\n  readonly route: string;\n  readonly text: string;\n\n  constructor(json: any) {\n    if (json.dosage) {\n      if (json.dosage.quantity) {\n        this.quantity = json.dosage.quantity.value;\n        this.unit = fixUnitAbbreviations(json.dosage.quantity.unit);\n      }\n      if (json.dosage.route) {\n        this.route = json.dosage.route.text;\n      }\n      /*\n       * The text for the dosage usually contains information about the rate of\n       * administration, however the format across different\n       * MedicationAdministrations is not consistent. Ex: \"500 mg IV q6hr\" vs\n       * \"250 mg = 1 caps Oral Once\"\n       */\n      this.text = json.dosage.text;\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n/**\n * This object represents basic information about an Encounter: what its\n * reason and type were, when it happened, and its ID.\n */\nexport class Encounter {\n  readonly encounterId: string;\n  readonly period: Interval;\n\n  constructor(private json: any) {\n    this.encounterId = json.id;\n\n    if (!json.period) {\n      throw Error(\n          'An encounter must have a time period. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    if (!json.period.start) {\n      throw Error(\n          'An encounter must have a start date. JSON: ' + JSON.stringify(json));\n    }\n    const startTime = DateTime.fromISO(json.period.start).toLocal();\n\n    let endTime = json.period.end ?\n        DateTime.fromISO(json.period.end).toLocal() :\n        undefined;\n    if (endTime === undefined || (endTime > DateTime.local())) {\n      endTime = DateTime.local();\n    }\n\n    if (endTime < startTime) {\n      throw Error(\n          'The start time comes before the end time. JSON: ' +\n          JSON.stringify(json));\n    }\n    if (startTime > DateTime.local()) {\n      throw Error(\n          'The start time is in the future.. JSON: ' + JSON.stringify(json));\n    }\n    this.period = Interval.fromDateTimes(startTime, endTime);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\nimport {FhirResourceType} from 'src/constants';\n\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {FhirResourceSet, LabeledClass} from '../fhir-resource-set';\nimport {fixUnitAbbreviations} from '../unit_utils';\n\nimport {Dosage} from './dosage';\nimport {ContainedMedication} from './medication';\n\n\n/**\n * This object represents a FHIR MedicationAdministration. It does not contain\n * all the information in a standard MedicationAdministration (see\n * https://www.hl7.org/fhir/DSTU2/medicationadministration.html) but instead\n * stores only the information we're interested in seeing.\n */\nexport class MedicationAdministration extends LabeledClass {\n  readonly MED_RESOURCE_TYPE = 'Medication';\n  readonly rxNormCode: RxNormCode;\n  readonly timestamp: DateTime;\n  readonly wasNotGiven: boolean;\n  readonly dosage: Dosage;\n  readonly medicationOrderId: string;\n  readonly containedMedications: ContainedMedication[] = [];\n  /**\n   * Makes an MedicationAdministration out of a JSON object that represents a\n   * a FHIR MedicationAdministration.\n   * https://www.hl7.org/fhir/DSTU2/medicationadministration.html\n   * @param json A JSON object that represents a FHIR MedicationAdministration.\n   */\n  constructor(private json: any) {\n    super(\n        json.medicationReference ? json.medicationReference.display :\n                                   json.medicationCodeableConcept ?\n                                   json.medicationCodeableConcept.text :\n                                   null);\n    this.rxNormCode = LabeledClass.extractMedicationEncoding(json);\n\n    this.timestamp = json.effectiveTimeDateTime ?\n        DateTime.fromISO(json.effectiveTimeDateTime).toUTC() :\n        (json.effectiveTimePeriod ?\n             DateTime.fromISO(json.effectiveTimePeriod.start).toUTC() :\n             null);\n\n    this.dosage = new Dosage(json);\n    this.wasNotGiven = json.wasNotGiven;\n    this.medicationOrderId = json.prescription && json.prescription.reference ?\n        json.prescription.reference.replace(\n            FhirResourceType.MedicationOrder + '/', '') :\n        null;\n\n    if (json.contained && json.contained.length > 0) {\n      // We first find the element that lists the \"ingredients\" of this\n      // MedicationAdministration with each corresponding dosage and reference\n      // id. This element of \"contained\" will have the same id as the overall\n      // MedicationAdministration's medicationReference number.\n      const referenceId =\n          json.medicationReference ? json.medicationReference.reference : null;\n\n      const ingredientReferences = new Map<string, any>();\n      if (referenceId) {\n        const index = json.contained.findIndex(\n            el =>\n                (el.resourceType === this.MED_RESOURCE_TYPE && el.product &&\n                 el.id === referenceId.replace('#', '')));\n        const listOfIngredients = json.contained[index];\n        if (listOfIngredients && listOfIngredients.product.ingredient) {\n          for (const el of listOfIngredients.product.ingredient) {\n            if (el.item && el.amount) {\n              ingredientReferences.set(el.item.reference.replace('#', ''), el);\n            }\n          }\n        }\n        // Remove the element similar to a \"list of ingredients\" from contained.\n        if (index > -1) {\n          json.contained.splice(index, 1);\n        }\n      }\n      if (ingredientReferences.size > 0 && json.contained.length > 1) {\n        // We map the Medications in the list of ingredients to JSON elements\n        // containing the RxNorms for each ingredient.\n        for (const ing of json.contained) {\n          this.containedMedications.push(\n              new ContainedMedication(ing, ingredientReferences));\n        }\n      }\n    }\n\n    if (!(this.rxNormCode && this.label)) {\n      // If a MedicationAdministration has \"Contained\" portions of different\n      // ingredients, then there might not be one single RxNorm corresponding to\n      // this administration.\n\n      // We throw an error if all contained medications do not\n      // have an RxNormCode, or if there are no contained medications.\n      if (this.containedMedications.length === 0 ||\n          (this.containedMedications.length > 0 &&\n           this.containedMedications.every(med => (med.code === undefined)))) {\n        throw Error(\n            'JSON must include RxNormCode and a label' +\n            ' to be included as a MedicationAdministration. JSON: ' +\n            JSON.stringify(json));\n      }\n    }\n  }\n}\n\n/**\n * A set of MedicalAdministrations that belong together as part of the same\n * series.\n */\nexport class MedicationAdministrationSet extends\n    FhirResourceSet<AnnotatedAdministration> {\n  readonly maxDose: number;\n  readonly minDose: number;\n  readonly unit: string;\n  readonly rxNormCode: RxNormCode;\n\n  /**\n   * Constructor for MedicationAdministrationSet.\n   * @param medicationAdministrationList The list of MedicationAdministrations\n   *     belonging together.\n   * @throws Error if the administrations have different labels or RxNorms,\n   *      or if there is not a label, or if the administrations have different\n   *      units.\n   */\n  constructor(medicationAdministrationList: AnnotatedAdministration[]) {\n    super(medicationAdministrationList);\n\n    const rxNorms =\n        medicationAdministrationList.map(x => x.medAdministration.rxNormCode);\n    if (new Set(rxNorms).size > 1) {\n      throw Error('Different RxNorms for administrations: ' + rxNorms);\n    }\n    this.rxNormCode = rxNorms[0];\n\n    this.minDose = Math.min(...medicationAdministrationList.map(\n        x => x.medAdministration.dosage.quantity));\n    this.maxDose = Math.max(...medicationAdministrationList.map(\n        x => x.medAdministration.dosage.quantity));\n\n    const units = new Set(\n        medicationAdministrationList.map(x => x.medAdministration.dosage.unit));\n    if (units.size > 1) {\n      throw Error(\n          'Different units in the administration set: ' +\n          Array.from(units.values()));\n    }\n    this.unit = fixUnitAbbreviations(Array.from(units.values())[0]);\n  }\n}\n\n/**\n * A MedicationAdministration with additional information relating it to\n * the other administrations in the same order.\n */\nexport class AnnotatedAdministration extends LabeledClass {\n  /** The medication administration to be annotated. */\n  readonly medAdministration: MedicationAdministration;\n\n  /**\n   * The dose number for this administration in this order. The first dose is\n   * numbered 1.\n   */\n  readonly doseInOrder: number;\n\n  /**\n   * The numbered day for this dose within this order. The first dose will\n   * be on day 1. Day 2 starts 24 hours after the first dose administration,\n   * day 3 24 hours after that, etc.\n   */\n  readonly doseDay: number;\n\n  /**\n   * The annotated dose for the dose prior to this one. Undefined if this is\n   * the first dose.\n   */\n  readonly previousDose: AnnotatedAdministration;\n\n  constructor(\n      medAdmin: MedicationAdministration, doseInOrder: number, doseDay: number,\n      prevDose?: AnnotatedAdministration) {\n    super(medAdmin.label);\n    this.medAdministration = medAdmin;\n    this.doseInOrder = doseInOrder;\n    this.doseDay = doseDay;\n    this.previousDose = prevDose;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Disable this check because it's for IE 11 compatibility and we're not worried\n// about that in our testing code.\n/* tslint:disable:object-literal-shorthand*/\n\nimport {MedicationConceptGroup, RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {FhirResourceSet, LabeledClass} from '../fhir-resource-set';\nimport {FhirService} from '../fhir.service';\nimport {fixUnitAbbreviations} from '../unit_utils';\n\nimport {AnnotatedAdministration, MedicationAdministration, MedicationAdministrationSet} from './medication-administration';\n\n/**\n * This object represents a FHIR MedicationOrder. It does not contain\n * all the information in a standard MedicationOrder (see\n * https://www.hl7.org/fhir/DSTU2/medicationorder.html) but instead\n * stores only the information we're interested in seeing.\n */\nexport class MedicationOrder extends LabeledClass {\n  readonly rxNormCode: RxNormCode;\n  readonly dosageRetrievalError = 'Could not retrieve dosage instructions.';\n  firstAdministration: MedicationAdministration;\n  lastAdmininistration: MedicationAdministration;\n  administrationsForOrder: MedicationAdministrationSet;\n  readonly orderId: string;\n  // By default, we set the instruction message as the retrieval error message,\n  // and change it if we find a valid dosage instruction.\n  dosageInstruction = this.dosageRetrievalError;\n  /**\n   * Makes an MedicationOrder out of a list of MedicationAdministrations.\n   * https://www.hl7.org/fhir/DSTU2/medicationorder.html\n   * @param json The json representing this MedicationOrder.\n   */\n  constructor(private json: any) {\n    // A MedicationOrder's label is one of the following in order of preference:\n    // 1) the medication reference's display anme\n    // 2) the medication encoding's text\n    // 3) the order's ID\n    super(\n        json.medicationReference ? json.medicationReference.display :\n                                   json.medicationCodeableConcept ?\n                                   json.medicationCodeableConcept.text :\n                                   json.id);\n\n    if (json.dosageInstruction && json.dosageInstruction[0]) {\n      if (json.dosageInstruction.length > 1) {\n        throw Error('JSON must only include one dosage instruction.');\n      }\n      this.dosageInstruction = json.dosageInstruction[0].text;\n    }\n    this.orderId = json.id;\n\n    this.rxNormCode = LabeledClass.extractMedicationEncoding(json);\n\n    if (!(this.rxNormCode && this.label)) {\n      throw Error(\n          'JSON must include RxNormCode and a label' +\n          ' to be included as a MedicationOrder. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    // Check this MedicationOrder label against the RxNorm label.\n    if (this.label.toLowerCase() !== this.rxNormCode.label.toLowerCase()) {\n      throw Error(\n          'The label for this MedicationOrder\\'s RxNorm code doesn\\'t match ' +\n          ' the label in the data. MedicationOrder label: ' + this.label +\n          ' RxNorm label: ' + this.rxNormCode.label);\n    }\n  }\n\n  /**\n   * Sets the MedicationAdministration info for this MedicationOrder.\n   * @param fhirService The FhirService used to find the\n   *     MedicationAdministrations corresponding to this MedicationOrder.\n   * @throws Error if the label for the list of administrations does not match\n   *     the label for this order.\n   * @returns This order, after all the promises are resolved.\n   */\n  setMedicationAdministrations(fhirService: FhirService):\n      Promise<MedicationOrder> {\n    return fhirService.getMedicationAdministrationsWithOrder(this.orderId)\n        .then(\n            medAdmins => {\n              medAdmins = medAdmins.sort((a, b) => {\n                return a.timestamp.toMillis() - b.timestamp.toMillis();\n              });\n              this.firstAdministration = medAdmins[0];\n              this.lastAdmininistration = medAdmins[medAdmins.length - 1];\n\n              const admins = [];\n              for (let i = 0; i < medAdmins.length; i++) {\n                const admin = medAdmins[i];\n                // We want the dose counts and day counts to start with 1 so we\n                // add 1 to the day count and the index for the dose.\n                const dayCount =\n                    admin.timestamp.diff(this.firstAdministration.timestamp)\n                        .as('day') + 1;\n                const annotated = new AnnotatedAdministration(\n                    admin, i + 1 /* dose in order starts at 1 */, dayCount,\n                    i > 0 ? admins[i - 1] : undefined);\n                admins.push(annotated);\n              }\n              this.administrationsForOrder =\n                  new MedicationAdministrationSet(admins);\n              return this;\n            },\n            rejection => {\n              // Throw an error if the construction of the\n              // MedicationAdministration results in an error.\n              throw rejection;\n            });\n  }\n}\n\n/**\n * A set of MedicationOrders that belong together as part of the same\n * series, representing all orders for the medicine in a given time period.\n */\nexport class MedicationOrderSet extends FhirResourceSet<MedicationOrder> {\n  /*\n   * The RxNormCode for this set of data. All data in this set\n   * must have the same RxNormCode.\n   */\n  readonly rxNormCode: RxNormCode;\n  readonly medicationConcept: MedicationConceptGroup;\n\n  readonly maxDose: number;\n  readonly minDose: number;\n  readonly unit: string;\n\n  /**\n   * Constructor for MedicationOrderSet.\n   * @param MedicationOrderList The list of MedicationOrders belonging\n   *     together. This list is sorted by first MedicationAdministration for\n   *     each order.\n   * @throws Error if the observations have different labels/RxNormCodes, or\n   *     if there is not a label/RxNormCode.\n   */\n  constructor(medicationOrderList: MedicationOrder[]) {\n    // Sort the list by first administration.\n    medicationOrderList = medicationOrderList.sort(function(a, b) {\n      return a.firstAdministration.timestamp.toMillis() -\n          b.firstAdministration.timestamp.toMillis();\n    });\n    super(medicationOrderList);\n    // Set the RxNormCode and MedicationConceptGroup for this\n    // MedicationOrderSet.\n    if (medicationOrderList.length > 0) {\n      const firstRxNorm = medicationOrderList[0].rxNormCode;\n      if (!firstRxNorm) {\n        throw Error('The first resource does not have an RxNorm code.');\n      }\n\n      for (const rs of medicationOrderList) {\n        if (rs.rxNormCode !== firstRxNorm) {\n          throw Error('The resource list in this set has mixed RxNorm codes.');\n        }\n      }\n      this.rxNormCode = firstRxNorm;\n      this.medicationConcept = this.rxNormCode.displayGrouping;\n\n      this.minDose = Math.min(\n          ...medicationOrderList.map(x => x.administrationsForOrder.minDose));\n      this.maxDose = Math.max(\n          ...medicationOrderList.map(x => x.administrationsForOrder.maxDose));\n\n      const units =\n          new Set(medicationOrderList.map(x => x.administrationsForOrder.unit));\n      if (units.size > 1) {\n        throw Error(\n            'Different units in the order set: ' + Array.from(units.values()));\n      }\n      this.unit = fixUnitAbbreviations(Array.from(units.values())[0]);\n    }\n  }\n}\n/* tslint:enable:object-literal-shorthand*/\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {LabeledClass} from '../fhir-resource-set';\nimport {Dosage} from './dosage';\n\n/**\n * This object represents relevant components of a medication contained as part\n * of a MedicationAdministration.\n * This is not a FHIR resource, and differs from the defined Medication\n * documentation at http://hl7.org/fhir/dstu2/medication.html.\n */\nexport class ContainedMedication extends LabeledClass {\n  readonly code: RxNormCode;\n  readonly dosage: Dosage;\n  readonly id: string;\n  constructor(json: any, ingredients: Map<string, any>) {\n    super(json.code ? json.code.text : null);\n    // We want to construct new Medications for jsons containing RxNorm codes.\n    if (json.resourceType !== 'Medication') {\n      throw Error('Resource must be of type Medication');\n    }\n    if (json.code) {\n      if (json.code.coding) {\n        this.code =\n            json.code.coding\n                .map(\n                    // Map the codes to a boolean that is true only if the\n                    // encoding is an RxNormCode encoding, and the RxNorm code\n                    // appeas in our RxNormCode list that we care about.\n                    (coding) => (!coding.system ||\n                                 coding.system.indexOf(\n                                     RxNormCode.CODING_STRING) !== -1) &&\n                        RxNormCode.fromCodeString(coding.code))\n                // Filter out any codes that are not RxNorm codes.\n                .filter((code) => !!code)[0];\n      }\n    }\n    if (!this.code) {\n      throw Error('Medication must have RxNorm code to be useful');\n    }\n    this.id = json.id;\n    const reference = ingredients.get(this.id);\n    if (!reference) {\n      throw Error(\n          'Medication info must have been contained in ingredient list.');\n    }\n    if (this.id) {\n      //  The dosage format is different for contained\n      // portions of Medications.\n      const dosage = {\n        dosage: {\n          quantity: {\n            value: reference.amount.numerator ?\n                reference.amount.numerator.value :\n                null,\n            unit: reference.amount.numerator ? reference.amount.numerator.unit :\n                                               null\n          },\n        }\n      };\n      this.dosage = new Dosage(dosage);\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/** This is the URL for the coding system for observation interpretations. */\nexport const OBSERVATION_INTERPRETATION_VALUESET_URL =\n    'http://hl7.org/fhir/ValueSet/observation-interpretation';\n\n/**\n * These are codes corresponding to ObservationInterpretations used in\n * MicrobioGraph.\n */\nexport const CHECK_RESULT_CODE = 'CHECKRESULT';\nexport const NEGFLORA_CODE = 'NEGORFLORA';\nexport const NEG_CODE = 'NEG';\nexport const NORMAL = 'N';\n\n/**\n * Represents the possible interpretations for observations. Each interpretation\n * has a code (usually 1-3 characters) plus a text description for display.\n * This class also keeps track of a map of codes to display text.\n */\nexport class ObservationInterpretation {\n  static codeToObject = new Map<string, ObservationInterpretation>();\n\n  readonly code: string;\n  readonly display: string;\n\n  constructor(code: string, display: string) {\n    this.code = code;\n    this.display = display;\n    ObservationInterpretation.codeToObject.set(code, this);\n  }\n}\n\n/**\n * These are the FHIR standard value set values.\n * http://hl7.org/fhir/valueset-observation-interpretation.html\n */\nconst STANDARD_FHIR_INTERPRETATIONS = [\n  new ObservationInterpretation('<', 'Off scale low'),\n  new ObservationInterpretation('>', 'Off scale high'),\n  new ObservationInterpretation('A', 'Abnormal'),\n  new ObservationInterpretation('A', 'Critically abnormal'),\n  new ObservationInterpretation('AC', 'Anti-complementary substances present'),\n  new ObservationInterpretation('B', 'Better'),\n  new ObservationInterpretation('D', 'Significant change down'),\n  new ObservationInterpretation('DET', 'Detected'),\n  new ObservationInterpretation('H', 'High'),\n  new ObservationInterpretation('HH', 'Critically high'),\n  new ObservationInterpretation('HM', 'Hold for Medical Review'),\n  new ObservationInterpretation('HU', 'Very high'),\n  new ObservationInterpretation('I', 'Intermediate'),\n  new ObservationInterpretation('IE', 'Insufficient evidence'),\n  new ObservationInterpretation('IND', 'Indeterminate'),\n  new ObservationInterpretation('L', 'Low'),\n  new ObservationInterpretation('LL', 'Critically low'),\n  new ObservationInterpretation('LU', 'Very low'),\n  new ObservationInterpretation(\n      'MS',\n      'Moderately susceptible. Indicates for microbiology susceptibilities only.'),\n  new ObservationInterpretation(NORMAL, 'Normal'),\n  new ObservationInterpretation('ND', 'Not Detected'),\n  new ObservationInterpretation(NEG_CODE, 'Negative'),\n  new ObservationInterpretation('NR', 'Non-reactive'),\n  new ObservationInterpretation('NS', 'Non-susceptible'),\n  new ObservationInterpretation(\n      'null', 'No range defined, or normal ranges don\\'t apply'),\n  new ObservationInterpretation(\n      'OBX', 'Interpretation qualifiers in separate OBX segments'),\n  new ObservationInterpretation('POS', 'Positive'),\n  new ObservationInterpretation('QCF', 'Quality Control Failure'),\n  new ObservationInterpretation('R', 'Resistant'),\n  new ObservationInterpretation('RR', 'Reactive'),\n  new ObservationInterpretation('S', 'Susceptible'),\n  new ObservationInterpretation('SDD', 'Susceptible-dose dependent'),\n  new ObservationInterpretation('SYN-R', 'Synergy - resistant'),\n  new ObservationInterpretation('SYN-S', 'Synergy - susceptible'),\n  new ObservationInterpretation('TOX', 'Cytotoxic substance present'),\n  new ObservationInterpretation('U', 'Significant change up'),\n  new ObservationInterpretation(\n      'VS',\n      'Very susceptible. Indicates for microbiology susceptibilities only.'),\n  new ObservationInterpretation('W', 'Worse'),\n  new ObservationInterpretation('WR', 'Weakly reactive')\n];\n\n/**\n * This valueset is extensible, so here are some that BCH extends it with\n * for its microbiology results.\n */\nconst BCH_CUSTOM_INTERPRETATIONS = [\n  new ObservationInterpretation(CHECK_RESULT_CODE, 'Check result'),\n  new ObservationInterpretation(NEGFLORA_CODE, 'Negative or Flora')\n];\n\nconst ALL_INTERPRETATIONS =\n    [].concat(BCH_CUSTOM_INTERPRETATIONS, STANDARD_FHIR_INTERPRETATIONS);\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\n\nimport {FhirResourceSet} from '../fhir-resource-set';\nimport {fixUnitAbbreviations} from '../unit_utils';\n\nimport {AnnotatedObservation} from './annotated-observation';\n\n/**\n * A set of observations that belong together as part of the same series.\n */\nexport class ObservationSet extends FhirResourceSet<AnnotatedObservation> {\n  /**\n   * The normal ranges for this set of observations. It maps a timestamp of each\n   * Observation with a normal range to the corresponding normal range.\n   */\n  normalRanges = new Map<DateTime, [number, number]>();\n\n  /**\n   * The units for this set of observations. Left unset if the normal\n   * range is different across the observations.\n   */\n  readonly unit: string;\n\n  /**\n   * Whether or not any Observations belonging to this ObservationSet contain\n   * qualitative results rather than numerical values.\n   */\n  readonly anyQualitative: boolean = false;\n\n  /**\n   * Constructor for ObservationSet.\n   * @param observationList The list of observations belonging together.\n   * @throws Error if the observations have different labels, as this indicates\n   *     that they are data points from different series, or if there is not\n   *     a label.\n   */\n  constructor(observationList: AnnotatedObservation[]) {\n    super(observationList);\n\n    let firstUnit;\n    if (observationList.length > 0) {\n      firstUnit = observationList[0].observation.unit;\n    }\n    // Ensure that the labels of the data are all the same.\n    let differentUnits = false;\n\n    for (const obs of observationList) {\n      // Some observations may not have a normal range.\n      if (obs.observation.normalRange) {\n        this.normalRanges.set(\n            obs.observation.timestamp, obs.observation.normalRange);\n      }\n      // Some observations may not have a normal range.\n      if (obs.observation.unit && obs.observation.unit !== firstUnit) {\n        differentUnits = true;\n      }\n    }\n    if (!differentUnits && firstUnit) {\n      this.unit = fixUnitAbbreviations(firstUnit);\n    }\n\n    this.anyQualitative = observationList.some(\n        obs => (obs.observation.result !== null && !obs.observation.value));\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\n\nimport {BCHMicrobioCode} from '../clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from '../clinicalconcepts/loinc-code';\nimport {ResourceCode} from '../clinicalconcepts/resource-code-group';\nimport {LabeledClass} from '../fhir-resource-set';\nimport {fixUnitAbbreviations} from '../unit_utils';\n\nimport {OBSERVATION_INTERPRETATION_VALUESET_URL, ObservationInterpretation} from './observation-interpretation-valueset';\n\n\n/**\n * These are the quantity attributes provided by FHIR. See\n * https://www.hl7.org/fhir/datatypes.html#quantity\n */\ninterface Quantity {\n  value: number;\n  comparator: string;\n  unit: string;\n  system: string;\n  code: string;\n}\n\n/**\n * FHIR element for ObservationStatus, from the DSTU2 version of the\n * standard.\n * http://hl7.org/fhir/DSTU2/valueset-observation-status.html\n */\nexport enum ObservationStatus {\n  Registered = 'Registered',\n  Preliminary = 'Preliminary',\n  Final = 'Final',\n  Amended = 'Amended',\n  Cancelled = 'Cancelled',\n  EnteredInError = 'Enteredinerror',\n  Unknown = 'Unknown'\n}\n\nconst statusToEnumMap = new Map<string, ObservationStatus>([\n  ['registered', ObservationStatus.Registered],\n  ['preliminary', ObservationStatus.Preliminary],\n  ['final', ObservationStatus.Final],\n  ['amended', ObservationStatus.Amended],\n  ['cancelled', ObservationStatus.Cancelled],\n  ['entered-in-error', ObservationStatus.EnteredInError],\n  ['unknown', ObservationStatus.Unknown],\n]);\n\n/**\n * This object represents a FHIR Observation. It does not contain all the\n * information in a standard Observation\n * (see https://www.hl7.org/fhir/observation.html#resource) but instead stores\n * only the information we're interested in seeing.\n *\n * In general, in terms of the MedTimeLine app, we represent an Observation\n * as a point on a line graph for a lab or a vital sign. Observations also hold\n * information about microbiology report results that show up in the\n * microbiology graph tooltips.\n * TODO(b/126222425): Add a descriptive readme to this folder.\n */\nexport class Observation extends LabeledClass {\n  readonly codes: ResourceCode[] = [];\n  timestamp: DateTime;\n  readonly value: Quantity;\n  // Populated if the Observation contains a qualitative result, such\n  // as \"Yellow\", rather than a numerical value.\n  readonly result: string;\n  readonly normalRange: [number, number];\n  readonly unit: string;\n  readonly innerComponents: Observation[] = [];\n  // The display string associated with the code for this Observation.\n  readonly display: string;\n  readonly interpretation: ObservationInterpretation;\n  readonly status: ObservationStatus;\n\n  // The number of decimal places stored in the value.\n  readonly precision: number;\n\n  /**\n   * Makes an Observation out of a JSON object that represents a\n   * a FHIR observation.\n   * @param json A JSON object that represents a FHIR observation.\n   */\n  constructor(private json: any) {\n    super(Observation.getLabel(json));\n    this.timestamp = json.effectiveDateTime ?\n        DateTime.fromISO(json.effectiveDateTime).toUTC() :\n        json.issued ? DateTime.fromISO(json.issued).toUTC() : null;\n    if (json.code) {\n      if (json.code.coding) {\n        // TODO(b/121318193): Implement better parsing of Observations with BCH\n        // Codes (associated with Microbiology data).\n        if (json.code.coding[0].system === BCHMicrobioCode.CODING_STRING) {\n          this.codes = json.code.coding.map(\n              (coding) => BCHMicrobioCode.fromCodeString(coding.code));\n          this.display = json.code.coding[0].display;\n        } else {\n          this.codes =\n              json.code.coding\n                  .map(\n                      // Map the codes to a boolean that is true only if the\n                      // encoding is a LOINC encoding, and the LOINC code appeas\n                      // in our LOINCCode list that we care about.\n                      (coding) => (!coding.system ||\n                                   coding.system.indexOf(\n                                       LOINCCode.CODING_STRING) !== -1) &&\n                          LOINCCode.fromCodeString(coding.code))\n                  // Filter out any codes that are not LOINC codes.\n                  .filter((code) => !!code);\n        }\n      }\n    }\n\n    if (json.interpretation && json.interpretation.coding) {\n      const coding = json.interpretation.coding[0];\n      if (coding.system === OBSERVATION_INTERPRETATION_VALUESET_URL) {\n        if (ObservationInterpretation.codeToObject.has(coding.code)) {\n          this.interpretation =\n              ObservationInterpretation.codeToObject.get(coding.code);\n        } else {\n          throw Error(\n              'Unsupported interpretation code: ' + JSON.stringify(coding));\n        }\n      }\n      // Silently ignore encodings coming from other systems.\n    }\n\n    if (json.component) {\n      json.component.forEach(element => {\n        const innerObs = new Observation(element);\n        if (!innerObs.timestamp) {\n          innerObs.timestamp = this.timestamp;\n        }\n        this.innerComponents.push(innerObs);\n      });\n    }\n\n    if (!this.codes || this.codes.length === 0) {\n      throw Error(\n          'Observations have to have a LOINC code to be useful.' +\n          ' Label: ' + this.label + '\\nJSON: ' + JSON.stringify(json));\n    }\n\n    if (!this.label) {\n      throw Error(\n          'Observations have to have a label to be useful. ' +\n          'JSON: ' + JSON.stringify(json));\n    }\n\n    // Check the observation label against the LOINC code label.\n    if (this.label.toLowerCase() !== this.codes[0].label.toLowerCase()) {\n      throw Error(\n          'The label for this observation\\'s LOINC code doesn\\'t match ' +\n          ' the label in the data. Observation label: ' + this.label +\n          ' LOINC label: ' + this.codes[0].label);\n    }\n\n\n    this.value = json.valueQuantity ? json.valueQuantity : null;\n    if (this.value) {\n      this.unit = fixUnitAbbreviations(this.value.unit);\n    }\n\n    // We must calculate precision before the value is stored as a number, where\n    // precision is lost.\n    if (json.valueQuantity && json.valueQuantity.value) {\n      const values = json.valueQuantity.value.toString().split('.');\n      this.precision = values.length > 1 ? values[1].length : 0;\n    }\n\n    this.result =\n        json.valueCodeableConcept ? json.valueCodeableConcept.text : null;\n\n    // TODO(b/121318193): Implement better parsing of Observations with BCH\n    // Codes (associated with Microbiology data). These Observations might not\n    // have values or results.\n    if (this.value === null && this.result === null && !this.interpretation &&\n        this.innerComponents.length === 0) {\n      throw Error(\n          'An Observation must have a value, result, inner components, ' +\n          'or an interpretation to be useful. JSON: ' + JSON.stringify(json));\n    }\n\n    // The FHIR standard says that if there's only one range then it should be\n    // what is \"normal\" for that measure. Otherwise they should be labeled.\n    // We are going to err on the side of safety and not include a normal range\n    // unless there's just the one, and it includes a high and low field.\n    // https://www.hl7.org/fhir/DSTU2/observation.html#4.20.4.4\n    // TODO(b/113575661): handle multiple ranges\n    if (json.referenceRange && json.referenceRange.length === 1) {\n      if (json.referenceRange[0].low && json.referenceRange[0].high) {\n        this.normalRange = [\n          json.referenceRange[0].low.value, json.referenceRange[0].high.value\n        ];\n      }\n    }\n\n    this.status = statusToEnumMap.get(json.status);\n  }\n\n  private static getLabel(json: any) {\n    let label;\n    if (json.code) {\n      label = json.code.text;\n      if (json.code.coding) {\n        if (json.code.coding[0].system === BCHMicrobioCode.CODING_STRING) {\n          label = json.code.coding[0].display;\n        }\n      }\n    }\n    return label;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n/**\n * FHIR resource for a Specimen, from the DSTU2 standard.\n * https://www.hl7.org/fhir/DSTU2/specimen.html\n */\nexport class Specimen {\n  /** If this is a contained resource, then it will have an ID string. */\n  readonly id: string;\n\n  /** Kind of material that forms the specimen */\n  readonly type: string;\n\n  /** Where the specimen was collected */\n  readonly bodySite: string;\n\n  /**\n   * When the specimen was collected. The specimen will have one or the other\n   * of these defined, but not both.\n   */\n  readonly collectedDateTime: DateTime;\n  readonly collectedPeriod: Interval;\n\n  constructor(json: any) {\n    if (json.id) {\n      this.id = json.id;\n    }\n\n    if (!json.type) {\n      throw Error(\n          'A specimen must have a type to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    this.type = json.type.text;\n\n    if (!json.collection) {\n      throw Error(\n          'A specimen must have collection information to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n    if (json.collection.collectedPeriod && json.collection.collectedDateTime) {\n      throw Error(\n          'Only collectedPeriod or collectionDateTime should be defined. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    if (json.collection.collectedPeriod) {\n      const collectedPeriod = json.collection.collectedPeriod;\n      // If only the start time is present, put it into collectedDateTime.\n      if (collectedPeriod.start && !collectedPeriod.end) {\n        this.collectedDateTime = DateTime.fromISO(collectedPeriod.start);\n      } else {\n        this.collectedPeriod = Interval.fromDateTimes(\n            DateTime.fromISO(collectedPeriod.start),\n            DateTime.fromISO(collectedPeriod.end));\n      }\n    }\n\n    if (json.collection.collectedDateTime) {\n      this.collectedDateTime =\n          DateTime.fromISO(json.collection.collectedDateTime);\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Inject, Injectable, SecurityContext} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {APP_TIMESPAN, EARLIEST_ENCOUNTER_START_DATE, FhirResourceType} from '../constants';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from './clinicalconcepts/loinc-code';\nimport {documentReferenceLoinc} from './clinicalconcepts/resource-code-manager';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {DebuggerService} from './debugger.service';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation, ObservationStatus} from './fhir-data-classes/observation';\nimport {FhirService} from './fhir.service';\nimport * as FhirConfig from './fhir_config';\nimport {SMART_ON_FHIR_CLIENT} from './smart-on-fhir-client';\n\n\nconst GREATER_OR_EQUAL = 'ge';\nconst LESS_OR_EQUAL = 'le';\n\n// The Cerner implementation has a maximum result return of 100 for\n// observations.\nconst CERNER_MAX_OBS_RESULTS_RETURNED = 100;\n\n@Injectable()\nexport class FhirHttpService extends FhirService {\n  readonly smartApiPromise: Promise<any>;\n  errorMessage: string;\n\n  private createContentTypeString = 'application/xhtml+xml;charset=utf-8';\n\n  constructor(\n      private debugService: DebuggerService,\n      @Inject(SMART_ON_FHIR_CLIENT) smartOnFhirClient: any,\n      private sanitizer: DomSanitizer, private http: HttpClient) {\n    super();\n    // Create a promise which resolves to the smart API when the smart API is\n    // ready. This allows clients of this service to call service methods\n    // which depend on the API, regardless of whether the API is ready or not.\n    this.smartApiPromise = new Promise(\n        (resolve, reject) => smartOnFhirClient.oauth2.ready(\n            smart => resolve(smart), err => reject(err)));\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If set, the number of observations that should be\n   *     queried for\n   */\n  getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]> {\n    const queryParams = {\n      type: FhirResourceType.Observation,\n      query: {\n        code: LOINCCode.CODING_STRING + '|' + code.codeString,\n        date: {\n          $and: [\n            GREATER_OR_EQUAL + dateRange.start.toISO(),\n            LESS_OR_EQUAL + dateRange.end.toISO()\n          ]\n        },\n        _count: limitCount ? limitCount : CERNER_MAX_OBS_RESULTS_RETURNED\n      }\n    };\n\n    return this.smartApiPromise.then(\n        smartApi =>\n            smartApi.patient.api.fetchAll(queryParams)\n                .then(\n                    (results: any[]) =>\n                        results\n                            .map(result => {\n                              return new Observation(result);\n                            })\n                            // TODO(b/126775896): Determine which statuses to\n                            // filter out.\n                            .filter(\n                                result => result.status !==\n                                    ObservationStatus.EnteredInError),\n                    // Do not return any Observations for this code if one of\n                    // the Observation constructions throws an error.\n                    rejection => {\n                      this.debugService.logError(rejection);\n                      throw rejection;\n                    }));\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * @param code The RxNormCode codes for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]> {\n    const queryParams = {\n      type: FhirResourceType.MedicationAdministration,\n      query: {\n        effectivetime: {\n          $and: [\n            GREATER_OR_EQUAL + dateRange.start.toISO(),\n            LESS_OR_EQUAL + dateRange.end.toISO()\n          ]\n        },\n        medication: {\n          code: RxNormCode.CODING_STRING + '|' + code.codeString,\n        }\n      }\n    };\n\n    if (limitCount) {\n      queryParams.query['_count'] = limitCount;\n    }\n\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then(\n                            (results: any[]) => results.map(result => {\n                              try {\n                                return new MedicationAdministration(result);\n                              } catch (e) {\n                                this.debugService.logError(e);\n                                throw e;\n                              }\n                            }),\n                            // Do not return any MedicationAdministrations for\n                            // this code if one of the MedicationAdministration\n                            // constructions throws an error.\n                            rejection => {\n                              this.debugService.logError(rejection);\n                              throw rejection;\n                            }));\n  }\n\n  /**\n   * Gets order for specified external id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationOrderWithId(id: string): Promise<MedicationOrder> {\n    return this.smartApiPromise.then(\n        smartApi =>\n            smartApi.patient.api\n                .read({type: FhirResourceType.MedicationOrder, 'id': id})\n                .then(\n                    (result: any) => {\n                      return new MedicationOrder(result.data);\n                    },\n                    // Do not return any MedicationOrders for\n                    // this code if one of the MedicationOrder\n                    // constructions throws an error.\n                    rejection => {\n                      this.debugService.logError(rejection);\n                      throw rejection;\n                    }));\n  }\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]> {\n    const queryParams = {\n      type: FhirResourceType.MedicationAdministration,\n\n      query: {\n        prescription:\n            {reference: [FhirResourceType.MedicationOrder, id].join('/')}\n      }\n    };\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then(\n                            (results: any[]) => {\n                              results.map(result => {\n                                return new MedicationAdministration(result);\n                              });\n                            },\n                            // Do not return any MedicationOrders for\n                            // this code if one of the MedicationOrder\n                            // constructions throws an error.\n                            rejection => {\n                              this.debugService.logError(rejection);\n                              throw rejection;\n                            }));\n  }\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  getEncountersForPatient(dateRange: Interval): Promise<Encounter[]> {\n    const queryParams = {\n      type: FhirResourceType.Encounter,\n    };\n\n    if (!dateRange) {\n      dateRange = APP_TIMESPAN;\n    }\n    // The Cerner implementation of the Encounter search does not offer any\n    // filtering by date at this point, so we grab all the encounters\n    // then filter them down to those which intersect with the date range\n    // we query, and those that have a start date no earlier than a year prior\n    // to now.\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then(\n                            (results: any[]) => {\n                              results =\n                                  results\n                                      .map(result => {\n                                        return new Encounter(result);\n                                      })\n                                      .filter(\n                                          encounter =>\n                                              dateRange.intersection(\n                                                  encounter.period) !== null)\n                                      .filter(\n                                          encounter => encounter.period.start >=\n                                              EARLIEST_ENCOUNTER_START_DATE);\n                              return results;\n                            },\n                            rejection => {\n                              this.debugService.logError(rejection);\n                              throw rejection;\n                            }));\n  }\n\n  /**\n   * Saves the current HTML of the graphs rendered as a DocumentReference\n   * (static save).\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written on.\n   */\n  saveStaticNote(html: string, date: string) {\n    html = this.sanitizer.sanitize(SecurityContext.HTML, html);\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    const xhtml = new XMLSerializer().serializeToString(doc);\n    const testData = {\n      resource: {\n        resourceType: FhirResourceType.DocumentReference,\n        type: {\n          coding: [{\n            system: LOINCCode.CODING_STRING,          // must be loinc\n            code: documentReferenceLoinc.codeString,  // Summary Note\n          }],\n        },\n        indexed: date,\n        status:\n            'current',  // Required; only supported option is 'current'\n                        // https://fhir.cerner.com/millennium/dstu2/infrastructure/document-reference/#body-fields\n        content: [{\n          attachment: {\n            contentType: this.createContentTypeString,\n            data: btoa(xhtml),\n          }\n        }],\n      }\n    };\n    this.smartApiPromise.then(smartApi => {\n      testData['resource']['subject'] = {\n        reference: [FhirResourceType.Patient, smartApi.patient.id].join('/')\n      };\n      testData['resource']['context'] = {\n        encounter: {\n          reference: [\n            FhirResourceType.Encounter, smartApi.tokenResponse.encounter\n          ].join('/')\n        }\n      };\n      smartApi.patient.api.create(testData);\n      return smartApi;\n    });\n  }\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in this\n   *   date range.\n   */\n  getDiagnosticReports(codeGroup: BCHMicrobioCodeGroup, dateRange: Interval):\n      Promise<DiagnosticReport[]> {\n    if (!FhirConfig.microbiology) {\n      console.warn(\n          'No microbiology parameters available in the configuration.');\n      return Promise.resolve([]);\n    }\n    return this.smartApiPromise.then(\n        smartApi => {\n          // YYYY-MM-DD format for dates\n          let callParams = new HttpParams();\n          callParams = callParams.append('patient', smartApi.patient.id);\n          callParams = callParams.append('category', 'microbiology'),\n          callParams = callParams.append(\n              'item-date', 'ge' + dateRange.start.toFormat('yyyy-MM-dd'));\n          callParams = callParams.append(\n              'item-date', 'le' + dateRange.end.toFormat('yyyy-MM-dd'));\n          callParams = callParams.append('format', 'json');\n\n          const httpHeaders = new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + FhirConfig.microbiology.username + ':' +\n                FhirConfig.microbiology.password,\n          });\n\n          return this.http\n              .get(\n                  [\n                    FhirConfig.microbiology.url,\n                    FhirResourceType.DiagnosticReport\n                  ].join('/'),\n                  {headers: httpHeaders, params: callParams})\n              .toPromise()\n              .then((results: any[]) => {\n                return results.map(result => {\n                  return new DiagnosticReport(result);\n                });\n              });\n        },\n        rejection => {\n          this.debugService.logError(rejection);\n          throw rejection;\n        });\n  }\n}\n","module.exports = \"\"","module.exports = \"<span *ngIf=\\\"!error\\\">Launching authentication...</span>\\n<div *ngIf=\\\"useDebugger\\\" style=\\\"background-color: white\\\">\\n  Authentication Information<br />\\n  Base URI: {{this.baseURL}}<br />\\n  Redirect URI : {{this.redirectURL}}<br />\\n  Scopes: {{this.scope}};<br />\\n  URL parameters: {{this.parameters}} <br />\\n  <button (click)=\\\"beginAuthenticationFlow()\\\">Click here to continue authentication.</button>\\n</div>\\n<span *ngIf=\\\"error\\\">Error: This app is not configured for this EHR.</span>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport 'fhirclient';\n\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Router} from '@angular/router';\n\nimport {environment} from '../../environments/environment';\n\nimport * as FhirConfig from './../fhir_config';\n\n/* Type definition for SMART on FHIR client (from assets/fhir-client.min.js) */\ndeclare var FHIR: any;\n\n@Component({\n  selector: 'app-fhir-launch',\n  templateUrl: './fhir-launch.component.html',\n  styleUrls: ['./fhir-launch.component.css']\n})\nexport class FhirLaunchComponent implements OnInit {\n  error = false;\n\n  scope: string = [\n    'launch', 'patient/Observation.read', 'patient/Patient.read',\n    'patient/MedicationOrder.read', 'patient/MedicationAdministration.read',\n    'patient/DocumentReference.read', 'patient/DocumentReference.write',\n    'patient/Encounter.read'\n  ].join(' ');\n\n  // We hold these variables in-class for authentication debugging.\n  clientId: string;\n  baseURL: string;\n  redirectURL: string;\n  useDebugger: boolean;\n  parameters = new Array<string>();\n\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    if (environment.useMockServer) {\n      this.router.navigate(['setup']);\n    } else {\n      this.useDebugger = environment.useDebugger;\n\n      this.route.queryParams.subscribe(params => {\n        const state = params['state'];\n        const code = params['code'];\n        if (state && code) {\n          // Navigate to the setup page, passing the code & state parameters\n          // along with the URL.\n          this.router.navigateByUrl('/setup?code=' + code + '&state=' + state);\n        } else {\n          if (this.useDebugger) {\n            this.clientId = FhirConfig.credentials.client_id;\n            this.baseURL = FhirConfig.url.baseURL;\n            this.redirectURL = FhirConfig.url.redirectURL;\n            this.route.queryParams.subscribe(pms => {\n              this.parameters.push(JSON.stringify(pms));\n            });\n            return;\n          }\n\n          this.beginAuthenticationFlow();\n        }\n      });\n    }\n  }\n\n  beginAuthenticationFlow() {\n    const clientId = FhirConfig.credentials.client_id;\n    if (!clientId) {\n      this.error = true;\n    } else {\n      FHIR.oauth2.authorize({\n        'client_id': clientId,\n        'scope': this.scope,\n        'redirect_uri': FhirConfig.url.redirectURL\n      });\n    }\n  }\n}\n","import {RXNORM_CODES, RxNormCode} from './clinicalconcepts/rx-norm';\n\n// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/**\n * A class that has a label attribute.\n */\nexport class LabeledClass {\n  constructor(readonly label: string) {}\n\n  /**\n   * Parses the passed-in JSON and gets out a RxNormCode.\n   *\n   * This function prefers to directly get the RxNorm code from the resource's\n   * encoding. If it can't get that, it will get the prescription's label,\n   * then try to map it back to a RxNorm code. If it can't find a suitable\n   * RxNorm code, it will pass back an undefined object.\n   */\n  static extractMedicationEncoding(json: any): RxNormCode {\n    let rxNormCode: RxNormCode;\n    if (json.medicationCodeableConcept) {\n      if (json.medicationCodeableConcept.coding) {\n        rxNormCode =\n            (json.medicationCodeableConcept.coding\n                 .map(\n                     // Map the codes to a boolean that is true only if the\n                     // encoding is an RxNorm encoding, and the RxNorm code\n                     // appears in our RxNormCode list that we care about.\n                     (coding) => (!coding.system ||\n                                  coding.system.indexOf(\n                                      RxNormCode.CODING_STRING) !== -1) &&\n                         RxNormCode.fromCodeString(coding.code))\n                 // Filter out any codes that are not RxNorm codes.\n                 .filter((code) => !!code))[0];\n      } else if (json.medicationCodeableConcept.text) {\n        // MedicationAdministrations do not come out of the BCH system with a\n        // RxNorm code on at this point, so if we don't get a RxNorm code,\n        // as a stopgap we reverse lookup based on the string name.\n        const rxNormString = json.medicationCodeableConcept.text;\n        const codesWithName = RXNORM_CODES.filter(\n            x => x.label.toLowerCase() === rxNormString.toLowerCase());\n        rxNormCode = codesWithName.length === 1 ? codesWithName[0] : undefined;\n      }\n    }\n    return rxNormCode;\n  }\n}\n\n/**\n * A set of FHIR resources. All resources that are a part of this set must\n * have the same label.\n */\nexport class FhirResourceSet<T extends LabeledClass> {\n  /**\n   * The list of resources that belong together.\n   */\n  readonly resourceList: T[];\n\n  /*\n   * The label for this set of data. All data in this set\n   * must have the same label.\n   */\n  label: string;\n\n  /**\n   * Constructor for FhirResourceSet.\n   * @param resourceList The list of resources belonging together.\n   * @throws Error if the resources have different labels, or if there is not\n   *     a label.\n   */\n  constructor(resourceList: T[]) {\n    if (!resourceList) {\n      throw Error('Resource list is undefined.');\n    }\n\n    if (resourceList.length > 0) {\n      const firstLabel = resourceList[0].label;\n      if (!firstLabel) {\n        throw Error('The first resource does not have a label.');\n      }\n\n      const allLabels = new Set(resourceList.map(rs => rs.label.toLowerCase()));\n      if (allLabels.size !== 1) {\n        throw Error(\n            'The resource list in this set has mixed labels: ' +\n            Array.from(allLabels.values()));\n      }\n      this.label = firstLabel;\n    }\n\n    this.resourceList = resourceList;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\nimport {Interval} from 'luxon';\nimport {of} from 'rxjs';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode, LOINCCodeGroup} from './clinicalconcepts/loinc-code';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {RxNormCodeGroup} from './clinicalconcepts/rx-norm-group';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation} from './fhir-data-classes/observation';\nimport {ChartType} from './graphtypes/graph/graph.component';\n\n@Injectable()\nexport abstract class FhirService {\n  errorMessage: string;\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  observationsPresentWithCode(code: LOINCCode, dateRange: Interval):\n      Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getObservationsWithCode(code, dateRange, 1)\n        .then(obs => obs.length > 0, rejection => {\n          // If any Observation for this code results in an error, do not show\n          // any Observations at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The BCHMicrobio code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  diagnosticReportsPresentWithCodes(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval): Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getDiagnosticReports(codeGroup, dateRange, 1)\n        .then(reports => reports.length > 0, rejection => {\n          // If any DiagnosticReports for this code results in an error, do not\n          // show any DiagnosticReports at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  abstract getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]>;\n\n  /**\n   * Gets observations from a specified date range with a specific code group.\n   * @param codeGroup The LOINCCodeGroup code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @returns The observations if there's a valid code group or date range.\n   */\n  getObservationsForCodeGroup(codeGroup: LOINCCodeGroup, dateRange: Interval):\n      Promise<Observation[][]> {\n    if (!codeGroup || !dateRange) {\n      return of([]).toPromise();\n    }\n    const observationPromises = new Array<Promise<Observation[]>>();\n    for (const c of codeGroup.resourceCodes) {\n      if (c instanceof LOINCCode) {\n        observationPromises.push(this.getObservationsWithCode(c, dateRange));\n      }\n    }\n    return Promise.all(observationPromises);\n  }\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The RxNorm code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  medicationsPresentWithCode(code: RxNormCode, dateRange: Interval):\n      Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getMedicationAdministrationsWithCode(code, dateRange, 1)\n        .then(obs => obs.length > 0, rejection => {\n          // If any MedicationAdministration for this code results in an error,\n          // do not show any MedicationAdministrations at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * group.\n   * @param codeGroup The RxNormCode code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  abstract getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]>;\n\n  /**\n   * Gets medication data from a specified date range with specific Rx codes,\n   * since multiple medications are displayed on a single chart.\n   * @param codes The RxNormCode codes for which to get observations.\n   * @param dateRanges The time interval observations should fall between.\n   */\n  getMedicationAdministrationsWithCodes(\n      codes: RxNormCodeGroup,\n      dateRange: Interval): Promise<MedicationAdministration[][]> {\n    if (!codes || !dateRange) {\n      return of([]).toPromise();\n    }\n    const medicationPromises = new Array<Promise<MedicationAdministration[]>>();\n    for (const code of codes.resourceCodes) {\n      medicationPromises.push(this.getMedicationAdministrationsWithCode(\n          code as RxNormCode, dateRange));\n    }\n    // This will be rejected if any Promise is rejected.\n    return Promise.all(medicationPromises);\n  }\n\n  /**\n   * Gets the order for specified order id.\n   * @param id The id to pull the order from.\n   */\n  abstract getMedicationOrderWithId(id: string): Promise<MedicationOrder>;\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  abstract getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]>;\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  abstract getEncountersForPatient(dateRange: Interval): Promise<Encounter[]>;\n\n  /**\n   * Saves the current HTML of the graphs rendered as a DocumentReference\n   * (static save).\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written on.\n   */\n  abstract saveStaticNote(html: string, date: string): void;\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in this\n   *   date range.\n   */\n  abstract getDiagnosticReports(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval,\n      limitCount?: number): Promise<DiagnosticReport[]>;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\nimport {CustomizableGraphAnnotation} from '../graphtypes/customizable-graph/customizable-graph-annotation';\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * CustomizableData holds a time-based series to which a user can add more\n * points.\n */\nexport class CustomizableData extends GraphData {\n  /** The display bounds of the y-axis. */\n  readonly yAxisDisplayBounds: [number, number];\n\n  private constructor(\n      series: LabeledSeries,\n      /**\n       * The annotations for this customizable graph. If populated, holds a\n       * map from a number representation of a Date to\n       * CustomizableGraphAnnotation for the corresponding point.\n       */\n      readonly annotations: Map<number, CustomizableGraphAnnotation>,\n      regions?: any[]) {\n    super(\n        [series], undefined,  // tooltip map\n        undefined,            // tooltip key function\n        regions);\n    this.annotations = annotations;\n    this.yAxisDisplayBounds = [0, 10];\n  }\n\n  static defaultEmptySeries() {\n    return new CustomizableData(\n        LabeledSeries.emptySeries(),\n        new Map<number, CustomizableGraphAnnotation>());\n  }\n\n  /**\n   * Adds a point to the series in this CustomizableData object.\n   * @param annotation: The annotation to add in to the graph.\n   */\n  addPointToSeries(annotation: CustomizableGraphAnnotation) {\n    // This method assumes there is only 1 series.\n    this.series[0].coordinates.push([annotation.timestamp, 0]);\n    this.annotations.set(annotation.timestamp.toMillis(), annotation);\n  }\n\n  /**\n   * Removes a point from the series in this CustomizableData object, as well as\n   * the corresponding annotation.\n   * @param date The date for this point to remove.\n   */\n  removePointFromSeries(date: DateTime) {\n    const index = this.series[0].coordinates.findIndex(\n        c => c[0].toMillis() === date.toMillis());\n    this.series[0].coordinates.splice(index, 1);\n    this.annotations.delete(date.toMillis());\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * The base class for holding data pertaining to one graph.\n */\nexport class GraphData {\n  // The number of decimal places to show for any value associated with this\n  // GraphData. The default is 0, to minimize errors caused by unnecessary\n  // trailing zeros.\n  precision = 0;\n\n  constructor(\n      /** A list of the series to be displayed on the graph. */\n      readonly series: LabeledSeries[] = [],\n\n      /**\n       * A map to provide tooltips.\n       * This is a bit complicated. c3's API lets you specify a function call\n       * that will provide the HTML content for any given point's tooltip.\n       * As a parameter, it passes in one or more data points:\n       * https://c3js.org/reference.html#tooltip-contents\n       * so when the tooltip is rendered, all you have is the plotted\n       * information. As far as I can tell, that data structure is undocumented.\n       * Upon inspection, the data point includes which series it belongs to,\n       * the x value, and the y value, so if you want to render a custom\n       * tooltip, you have to be able to derive all the information you need\n       * from those values.\n       * tooltipMap, alongside tooltipKeyFn, helps with this process.\n       * If you call tooltipKeyFn on the data object passed into the c3 contents\n       * function, it should yield the key into tooltipMap that will let you\n       * look up the appropriate tooltip for that data point. If tooltipKeyFn\n       * is unset, then we fall back to the default lookup, which is by x-value.\n       */\n      readonly tooltipMap?: Map<string, string>,\n      /**\n       * See documentation on tooltipMap for more detail. tooltipKeyFn\n       * takes in a graph data point and returns the key into tooltipMap that\n       * provides the tooltip for that data point.\n       */\n      readonly tooltipKeyFn?: (graphData: any) => string,\n      /**\n       * A list of x-axis regions to display on the graph.\n       */\n      readonly xRegions = new Array<[DateTime, DateTime]>()) {}\n\n  /*\n   * Returns whether or not there are any data points in the series that fall\n   * inside the date range provided.\n   * @param series The LabeledSeries to find data points in the date range.\n   * @param dateRange The date range in which to see if there are any data\n   *     points.\n   */\n  dataPointsInRange(dateRange: Interval): boolean {\n    const entireRange = Interval.fromDateTimes(\n        dateRange.start.toLocal().startOf('day'),\n        dateRange.end.toLocal().endOf('day'));\n    for (const s of this.series) {\n      if (s.hasPointInRange(entireRange)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n\nimport {DisplayGrouping, negFinalMB, negPrelimMB, posFinalMB, posPrelimMB} from '../clinicalconcepts/display-grouping';\nimport {DiagnosticReport, DiagnosticReportStatus} from '../fhir-data-classes/diagnostic-report';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationAdministration} from '../fhir-data-classes/medication-administration';\nimport {CHECK_RESULT_CODE, NORMAL} from '../fhir-data-classes/observation-interpretation-valueset';\nimport {LegendInfo} from '../graphtypes/legend-info';\n\nimport {MedicationOrder, MedicationOrderSet} from './../fhir-data-classes/medication-order';\nimport {ObservationSet} from './../fhir-data-classes/observation-set';\n\n/**\n * Timeseries data, represented as a list of <DateTime, number> tuples,\n * with metadata including a human-readable label, a unit, and a typical range.\n * Used for most charts to display a changing value over time. Multiple\n * LabeledSeries may appear on the same graph.\n */\nexport class LabeledSeries {\n  /**\n   * The y units for this series.\n   */\n  unit: string;\n\n  /**\n   * The DisplayGrouping this LabeledSeries corresponds to.\n   */\n  concept: DisplayGrouping;\n\n  /**\n   * A map of DateTimes to corresponding tuples representing the low and high\n   * bounds of what should be considered \"normal\" along the y-axis.\n   */\n  normalRanges = new Map<DateTime, [number, number]>();\n\n  /**\n   * This is the desired display range for the y-axis for this series. We\n   * calculate it as as:\n   * [minimum(yNormalBounds, yValues), maximum(yNormalBounds, yValues)]\n   */\n  readonly yDisplayBounds: [number, number];\n\n  constructor(\n      /** The descriptive label of the data series. */\n      readonly label: string,\n      /**\n       * The coordinate set for the series. The y-coordinates may be strings\n       * or numbers, depending on whether this is a categorical or numerical\n       * graph.\n       */\n      readonly coordinates: Array<[DateTime, string|number, string?]>,\n      /** The y-axis unit for this series. */\n      unit?: string,\n      /**\n       * Holds information about how this series should be displayed.\n       */\n      readonly legendInfo?: LegendInfo,\n      /**\n       * The coordinate values in the labeled series that should be marked as\n       * abnormal because of their interpretation results.\n       */\n      readonly abnormalCoordinates =\n          new Set<[DateTime | string, number|string]>(),\n      /**\n       * A map of DateTimes to corresponding tuples representing the low and\n       * high bounds of what should be considered \"normal\" along the y-axis.\n       */\n      normalRanges?: Map<DateTime, [number, number]>,\n      /**\n       * The DisplayGrouping associated with this LabeledSeries.\n       */\n      concept?: DisplayGrouping) {\n    // Sort the coordinates by x-value.\n    this.coordinates = coordinates.sort((a, b) => {\n      return a[0].toMillis() - b[0].toMillis();\n    });\n    this.unit = unit;\n\n    // If a specific legend wasn't passed through then we generate one for the\n    // series.\n    this.legendInfo = legendInfo || new LegendInfo(label);\n\n    this.concept = concept;\n    this.normalRanges = normalRanges;\n\n    /**\n     * Calculate the y axis display bounds by finding the outer boundaries of\n     * the data and the normal range.\n     */\n\n    const yValues = this.coordinates.map(c => c[1]).filter(x => x !== null);\n\n    if (yValues.map(val => typeof val === 'number').some(x => x === false)) {\n      return;\n    }\n    this.yDisplayBounds =\n        [Math.min.apply(Math, yValues), Math.max.apply(Math, yValues)];\n  }\n\n  /**\n   * Generates an empty LabeledSeries.\n   */\n  static emptySeries() {\n    return new LabeledSeries('', []);\n  }\n\n\n  /**\n   * Generates a LabeledSeries from the given ObservationSet.\n   * @param observationSet The ObservationSet to chart.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   */\n  static fromObservationSet(\n      observationSet: ObservationSet, encounters: Encounter[]): LabeledSeries {\n    let coordinates: Array<[DateTime, number]> = [];\n    const observations = observationSet.resourceList;\n    const abnormal = new Set<[DateTime | string, number | string]>();\n    for (const obs of observations) {\n      coordinates.push(\n          [obs.observation.timestamp, obs.observation.value.value]);\n\n      if (obs.observation.interpretation &&\n          obs.observation.interpretation.code !== NORMAL) {\n        abnormal.add([obs.observation.timestamp, obs.observation.value.value]);\n      }\n    }\n\n    coordinates = this.addEncounterEndpoints(coordinates, encounters);\n    return new LabeledSeries(\n        observationSet.label, coordinates, observationSet.unit,\n        undefined,  // legendInfo,\n        abnormal, observationSet.normalRanges);\n  }\n\n  /**\n   * Generates a LabeledSeries from the given list of discrete resulted-\n   * ObservationSets.\n   * For Observations with discrete values, such as \"yellow\"\n   * for the color of urine, we group all ObservationSets into one\n   * LabeledSeries, at a specific yValue.\n   * @param observationSets The discrete ObservationSets to chart.\n   * @param yValue The numerical y-value to map to this ObservationSet with\n   *     discrete results.\n   * @param label The label for this LabeledSeries.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   */\n  static fromObservationSetsDiscrete(\n      observationSets: ObservationSet[], yValue: number, label,\n      encounters: Encounter[]): LabeledSeries {\n    let coordinates: Array<[DateTime, number | string]> = [];\n    const abnormal = new Set<[DateTime | string, number | string]>();\n    for (const obsSet of observationSets) {\n      const observations = obsSet.resourceList;\n      for (const obs of observations) {\n        coordinates.push([obs.observation.timestamp, yValue]);\n\n        if (obs.observation.interpretation &&\n            obs.observation.interpretation.code !== NORMAL) {\n          abnormal.add([obs.observation.timestamp, yValue]);\n        }\n      }\n    }\n    coordinates = this.addEncounterEndpoints(coordinates, encounters);\n    return new LabeledSeries(\n        label, coordinates,\n        undefined,  // unit\n        undefined,  // legend info,\n        abnormal    // abnormal points\n    );\n  }\n\n  /**\n   * Generates a set of LabeledSeries from the given MedicationOrderSet. It will\n   * return one series for all the orders together since the order set\n   * represents all orders for the same medication.\n   * @param medOrderSet The MedicationOrderSet to chart.\n   * @param dateRange The date range displayed on the chart.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @param categoricalYPosition If set, we use this y-position for all the\n   *    datapoints in both returned series. If unset, we use the dosage\n   *    quantity for each administration as the y-value.\n   */\n  static fromMedicationOrderSet(\n      medOrderSet: MedicationOrderSet, dateRange: Interval,\n      encounters: Encounter[], categoricalYPosition?: string): LabeledSeries {\n    const data: LabeledSeries[] = [];\n    for (const medOrder of medOrderSet.resourceList) {\n      // The first series in fromMedicationOrder is all the administrations.\n      // The second series (unused in this function) is the end points only.\n      data.push(LabeledSeries.fromMedicationOrder(\n          medOrder, dateRange, categoricalYPosition)[0]);\n    }\n\n    // Combine all the series into a single series so that it shows up with\n    // the same color.\n    let coords = [];\n    for (const series of data) {\n      for (const coord of series.coordinates) {\n        coords.push(coord);\n      }\n    }\n\n    coords = this.addEncounterEndpoints(coords, encounters);\n    return new LabeledSeries(\n        medOrderSet.label, coords, medOrderSet.unit,\n        undefined,  // legendInfo\n        undefined,  // abnormal points\n        // Always keep normalRanges undefined for MedicationOrder-based\n        // LabeledSeries, as we only show normal ranges for Observations with a\n        // normal range given in the data.\n        undefined,  // normalRanges\n        // TODO(b/122468555): Enforce that medOrderSets have to have a\n        // RxNormCode upon construction\n        medOrderSet.rxNormCode ? medOrderSet.rxNormCode.displayGrouping :\n                                 undefined);\n  }\n\n  /**\n   * Generates a set of LabeledSeries from the given MedicationOrder. For each\n   * order, there are two LabeledSeries -- one for the corresponding\n   * MedicationAdministrations, and one for the endpoints displayed for the\n   * order.\n   * @param order The MedicationOrder to chart.\n   * @param dateRange The date range displayed on the chart.\n   * @param categoricalYPosition If set, we use this categorical y-position\n   *    for all the datapoints in both returned series. If unset, we use the\n   *    dosage quantity for each administration as the numerical y-value.\n   */\n  static fromMedicationOrder(\n      order: MedicationOrder, dateRange: Interval,\n      categoricalYPosition?: string): LabeledSeries[] {\n    const coordinates = new Array<[DateTime, string | number, string?]>();\n    const endpointCoordinates = new Array<[DateTime, string | number]>();\n    const medAdminsForOrder = order.administrationsForOrder;\n\n    const label = order.label + order.orderId;\n    const legend = order.rxNormCode.displayGrouping;\n\n    if (medAdminsForOrder) {\n      for (const annotatedAdmin of medAdminsForOrder.resourceList) {\n        coordinates.push([\n          annotatedAdmin.medAdministration.timestamp,\n          this.getYPositionForMed(\n              annotatedAdmin.medAdministration, categoricalYPosition)\n        ]);\n      }\n      // We add the beginning and end time stamp if the order is not fully\n      // displayed-- so that no dashes are displayed when an order is being\n      // carried over from before the time window displayed.\n      // We only display an endpoint for a MedicationOrder if the\n      // endpoint is visible -- that is, if the time of the first\n      // Administration of the order is during or after the beginning of the\n      // time range of the chart, and if the time of the last Administration\n      // of the order is before the end of the chart's time range.\n      const firstAdministrationIsAfterStartTime =\n          order.firstAdministration.timestamp.toMillis() >=\n          dateRange.start.toMillis();\n      const lastAdministrationIsBeforeEndTime =\n          order.lastAdmininistration.timestamp.toMillis() <=\n          dateRange.end.toMillis();\n\n      if (firstAdministrationIsAfterStartTime) {\n        endpointCoordinates.push([\n          order.firstAdministration.timestamp,\n          this.getYPositionForMed(\n              order.firstAdministration, categoricalYPosition)\n        ]);\n      } else if (\n          categoricalYPosition &&\n          (order.lastAdmininistration.timestamp.toMillis() >\n           dateRange.start.toMillis())) {\n        // Only add a point for continuity if we have a fixed y position.\n        coordinates.push([dateRange.start, categoricalYPosition]);\n      }\n      if (lastAdministrationIsBeforeEndTime) {\n        endpointCoordinates.push([\n          order.lastAdmininistration.timestamp,\n          this.getYPositionForMed(\n              order.lastAdmininistration, categoricalYPosition)\n        ]);\n      } else if (\n          categoricalYPosition &&\n          order.firstAdministration.timestamp.toMillis() <\n              dateRange.end.toMillis()) {\n        // Only add a point for continuity if we have a fixed y position.\n        coordinates.push([dateRange.end, categoricalYPosition]);\n      }\n    }\n\n    return [\n      new LabeledSeries(\n          label, coordinates, medAdminsForOrder.unit, legend,\n          undefined,  // abnormal points\n          // Always keep normalRanges undefined for MedicationOrder-based\n          // LabeledSeries, as we only show normal ranges for Observations with\n          // a normal range given in the data.\n          undefined,  // normalRanges\n          order.rxNormCode.displayGrouping),\n      new LabeledSeries(\n          'endpoint' + label, endpointCoordinates, medAdminsForOrder.unit,\n          legend)\n    ];\n  }\n\n  /**\n   * Generates a LabeledSeries from the given initial date and y-value.\n   * @param date The DateTime corresponding to the initial point to chart.\n   * @param yValue The y-value for the initial point to chart.\n   */\n  static fromInitialPoint(date: DateTime, yValue: number) {\n    return new LabeledSeries('', [[date, yValue]]);\n  }\n\n  /**\n   * Generates LabeledSeries from the given DiagnosticReport.\n   * @param report The DiagnosticReport to chart.\n   * @param date the DateTime corresponding to the Observations in the\n   *     DiagnosticReport.\n   */\n  static fromDiagnosticReport(report: DiagnosticReport, date: DateTime):\n      LabeledSeries[] {\n    const series = [];\n    const interpretationMap = new Map<string, Array<[DateTime, string]>>();\n    // Sort results by interpretation, and make a LabeledSeries for each.\n    for (const observation of report.results) {\n      const categoricalYValue = observation.display;\n      const interpretation = observation.interpretation.code;\n      if (interpretationMap.get(interpretation)) {\n        const existing = interpretationMap.get(interpretation);\n        existing.push([date, categoricalYValue]);\n        interpretationMap.set(interpretation, existing);\n      } else {\n        interpretationMap.set(interpretation, [[date, categoricalYValue]]);\n      }\n    }\n    // Make a LabeledSeries for each interpretation.\n    for (const interpretation of Array.from(interpretationMap.keys())) {\n      const seriesLabel =\n          report.id + '-' + interpretation + '-' + report.status;\n      const isPositive = seriesLabel.includes(CHECK_RESULT_CODE);\n      series.push(new LabeledSeries(\n          // Encode the status and interpretation into the series name so that\n          // we can use d3 later on to filter the data points and display them\n          // with the correct styling.\n          seriesLabel, interpretationMap.get(interpretation),\n          undefined,  // unit\n          LabeledSeries.getLegendInfoFromResult(report.status, isPositive)));\n    }\n    return series;\n  }\n\n  /**\n   * Returns the correct legend info for a diagnostic report.\n   * @param status The DiagnosticReport's status.\n   * @param isPositive Whether the report appears to be positive.\n   * @returns The correct legend info for the report.\n   */\n  private static getLegendInfoFromResult(\n      status: DiagnosticReportStatus, isPositive: boolean): LegendInfo {\n    if (isPositive) {\n      if (status === DiagnosticReportStatus.Preliminary) {\n        return posPrelimMB;\n      } else if (status === DiagnosticReportStatus.Final) {\n        return posFinalMB;\n      }\n    } else if (status === DiagnosticReportStatus.Preliminary) {\n      return negPrelimMB;\n    } else if (status === DiagnosticReportStatus.Final) {\n      return negFinalMB;\n    }\n  }\n\n  private static getYPositionForMed(\n      medAdmin: MedicationAdministration, categoricalYPosition: string): string\n      |number {\n    return categoricalYPosition !== undefined && categoricalYPosition !== null ?\n        categoricalYPosition :\n        medAdmin.dosage.quantity;\n  }\n\n  private static addEncounterEndpoints(\n      coordinates: any[], encounters: Encounter[]): any[] {\n    if (coordinates.length > 0) {\n      // If any encounters are set for this MedicationOrderSet, add null values\n      // to the endpoints of encounters to ensure line breakage between points\n      // of different encounters.\n      // We assume that encounter endpoints correspond to correct line breaks,\n      // and do not cross-check encounter id's of MedicationOrders or\n      // MedicationAdministrations.\n      coordinates = coordinates.sort((a, b) => a[0] - b[0]);\n      for (const encounter of encounters) {\n        coordinates.unshift([encounter.period.start.toUTC(), null]);\n        coordinates.push([encounter.period.end.toUTC(), null]);\n      }\n    }\n    return coordinates;\n  }\n\n  hasPointInRange(dateRange: Interval) {\n    for (const x of this.coordinates.map(c => c[0])) {\n      if (dateRange.contains(x)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {DateTime, Interval} from 'luxon';\n\nimport {ResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {ObservationSet} from '../fhir-data-classes/observation-set';\nimport {MedicationAdministrationTooltip} from '../graphtypes/tooltips/medication-tooltips';\n// tslint:disable-next-line:max-line-length\nimport {DiscreteObservationTooltip, GenericAbnormalTooltip, GenericAnnotatedObservationTooltip} from '../graphtypes/tooltips/observation-tooltips';\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * LineGraphData holds configurations for a line graph. A line graph may display\n * one or more LabeledSeries.\n */\nexport class LineGraphData extends GraphData {\n  /** The tick marks to display on the y axis. */\n  readonly yTicks: number[];\n\n  /**\n   * Contains the ResourceCodeGroup for this set of data, which helps determine\n   * whether to force display bounds, and the code group's display bounds.\n   */\n  readonly resourceGroup: ResourceCodeGroup;\n  private constructor(\n      /** The label for the graph. */\n      readonly label: string,\n      /** The LabeledSeries that are a part of this line graph. */\n      series: LabeledSeries[],\n      /** The display bounds of the y-axis. */\n      readonly yAxisDisplayBounds: [number, number],\n      /** The unit for the y-axis of the graph. */\n      readonly unit: string, tooltipMap?: Map<string, string>,\n      tooltipKeyFn?: (key: string) => string, regions?: any[],\n      precision?: number, resourceCodeGroup?: ResourceCodeGroup) {\n    super(series, tooltipMap, tooltipKeyFn, regions);\n    this.precision = precision ? precision : 0;\n    this.yTicks =\n        LineGraphData.getYTicks(yAxisDisplayBounds[0], yAxisDisplayBounds[1]);\n    this.resourceGroup = resourceCodeGroup;\n  }\n\n  /**\n   * Converts a list of ObservationSets to a LineGraphData object.\n   * @param label The label for this set of observations.\n   * @param observationGroup A list of ObservationSets to display.\n   * @param resourceCodeGroup The ResourceCodeGroup these ObservationSets belong\n   *   to\n   * @param sanitizer A DOM sanitizer for use in tooltip construction\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different units.\n   */\n  static fromObservationSetList(\n      label: string, observationGroup: ObservationSet[],\n      resourceCodeGroup: ResourceCodeGroup, sanitizer: DomSanitizer,\n      encounters: Encounter[]): LineGraphData {\n    let minY: number = Number.MAX_VALUE;\n    let maxY: number = Number.MIN_VALUE;\n\n    const allSeries = [];\n    const obsGroupToSeries = new Map<ObservationSet, LabeledSeries>();\n    for (const obsSet of observationGroup) {\n      const lblSeries = LabeledSeries.fromObservationSet(obsSet, encounters);\n      obsGroupToSeries.set(obsSet, lblSeries);\n      allSeries.push(lblSeries);\n      /* Find the minimum and maximum y values for all the series. */\n      if (lblSeries.yDisplayBounds) {\n        minY = Math.min(minY, lblSeries.yDisplayBounds[0]);\n        maxY = Math.max(maxY, lblSeries.yDisplayBounds[1]);\n      }\n    }\n\n    let tooltipMap = LineGraphData.makeTooltipMap(obsGroupToSeries, sanitizer);\n\n    tooltipMap = LineGraphData.addAbnormalValueTooltips(\n        tooltipMap, sanitizer, obsGroupToSeries);\n\n    const allUnits =\n        new Set(observationGroup.map(x => x.unit).filter(x => x !== undefined));\n    if (allUnits.size > 1) {\n      throw Error('Observations have different units.');\n    }\n\n    const data = new LineGraphData(\n        label, allSeries, [minY, maxY], allUnits.values().next().value,\n        tooltipMap.size > 0 ? tooltipMap : undefined,\n        undefined,  // tooltipMap\n        undefined,  // regions\n        resourceCodeGroup.precision, resourceCodeGroup);\n    return data;\n  }\n\n  /**\n   * Manually find y axis tick values based on the min and max display bounds.\n   */\n  static getYTicks(min: number, max: number, tickCount = 4): number[] {\n    // Evenly space out 5 numbers between the min and max (display bounds).\n    const difference = max - min;\n    const spacing = difference / tickCount;\n    const values = [];\n    // If there is no difference between the min and max, simply return the\n    // min.\n    if (spacing === 0) {\n      return [min];\n    }\n    for (let curr = min; curr <= max; curr += spacing) {\n      values.push(curr);\n    }\n    return values;\n  }\n\n\n  private static makeTooltipMap(\n      obsGroupToSeries: Map<ObservationSet, LabeledSeries>,\n      sanitizer: DomSanitizer,\n      ): Map<string, string> {\n    const tooltipMap = new Map<string, string>();\n\n    for (const entry of Array.from(obsGroupToSeries.entries())) {\n      const obsGroup: ObservationSet = entry[0];\n      const series: LabeledSeries = entry[1];\n      for (const obs of obsGroup.resourceList) {\n        const timestamp = obs.observation.timestamp.toMillis().toString();\n        // The key for this tooltip is the administration's timestamp.\n        // There may be multiple data points associated with the timestamp\n        // so we stack the administrations on top of one another in that case.\n        if (tooltipMap.get(timestamp)) {\n          tooltipMap.set(\n              timestamp,\n              tooltipMap.get(timestamp) +\n                  new GenericAnnotatedObservationTooltip(\n                      false, series.legendInfo.fill)\n                      .getTooltip(obs, sanitizer));\n        } else {\n          tooltipMap.set(\n              timestamp,\n              new GenericAnnotatedObservationTooltip(\n                  true, series.legendInfo.fill)\n                  .getTooltip(obs, sanitizer));\n        }\n      }\n    }\n    return tooltipMap;\n  }\n\n  /**\n   * Constructs a map of timestamps to GenericAbnormalTooltips for any point\n   * with an \"abnormal\" value. Currently, we only use the normal range as\n   * reference.\n   * TODO(b/129059213): Use Observation.interpretation to determine abnormality\n   * as well.\n   * @param series The series to construct the tooltip map for.\n   * @param tooltipMap The existing tooltips for the series.\n   * @param obsLabelToColor A map of Observation label to corresponding color.\n   * @param sanitizer A DOM sanitizer for use in tooltip construction\n   * @returns a map of timstamp strings to tooltips, with GenericObservation\n   *     tooltips replaced with GenericAbnormal tooltip if the value is\n   *     abnormal.\n   */\n  private static addAbnormalValueTooltips(\n      tooltipMap: Map<string, string>,\n      sanitizer: DomSanitizer,\n      obsGroupToSeries: Map<ObservationSet, LabeledSeries>,\n      ): Map<string, string> {\n    for (const entry of Array.from(obsGroupToSeries.entries())) {\n      const series: LabeledSeries = entry[1];\n      // Add a tooltip for any value with an abnormal y-value.\n      for (const coords of series.coordinates) {\n        const value = coords[1];\n        const timestamp = coords[0].toMillis().toString();\n        const yBounds = series.normalRanges.get(coords[0]);\n        if (yBounds && (value < yBounds[0] || value > yBounds[1])) {\n          const params = {};\n          params['timestamp'] = coords[0].toMillis();\n          params['value'] = value;\n          params['label'] = series.label;\n          params['unit'] = series.unit;\n          // The key for this tooltip is the timestamp.\n          // There may be multiple data points associated with the\n          // timestamp so we stack the administrations on top of one\n          // another in that case.\n          if (tooltipMap.get(timestamp)) {\n            tooltipMap.set(\n                timestamp,\n                tooltipMap.get(timestamp) +\n                    new GenericAbnormalTooltip(false, series.legendInfo.fill)\n                        .getTooltip(params, sanitizer));\n          } else {\n            tooltipMap.set(\n                timestamp,\n                new GenericAbnormalTooltip(true, series.legendInfo.fill)\n                    .getTooltip(params, sanitizer));\n          }\n        }\n      }\n    }\n    return tooltipMap;\n  }\n\n  /**\n   * Converts a list of MedicationOrderSets to a LineGraphData object.\n   * @param medicationOrderListGroup A list of MedicationOrderSets to\n   *     display.\n   * @param encounters A list of Encounters to use while determining line\n   *     breaks in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the medication administrations in medicationOrderSet\n   *     have different units.\n   */\n  static fromMedicationOrderSet(\n      medicationOrderSet: MedicationOrderSet, dateRange: Interval,\n      sanitizer: DomSanitizer, encounters: Encounter[]): LineGraphData {\n    const tooltipMap = new Map<string, string>();\n    const regions = new Array<[DateTime, DateTime]>();\n    for (const order of medicationOrderSet.resourceList) {\n      regions.push([\n        order.firstAdministration.timestamp,\n        order.lastAdmininistration.timestamp\n      ]);\n      for (const admin of order.administrationsForOrder.resourceList) {\n        const timestamp =\n            admin.medAdministration.timestamp.toMillis().toString();\n        // The key for this tooltip is the administration's timestamp.\n        // There may be multiple data points associated with the timestamp\n        // so we stack the administrations on top of one another in that\n        // case.\n        const tooltipText = new MedicationAdministrationTooltip().getTooltip(\n            [admin], sanitizer);\n        if (tooltipMap.get(timestamp)) {\n          tooltipMap.set(timestamp, tooltipMap.get(timestamp) + tooltipText);\n        } else {\n          tooltipMap.set(timestamp, tooltipText);\n        }\n      }\n    }\n\n    return new LineGraphData(\n        medicationOrderSet.label,\n        [LabeledSeries.fromMedicationOrderSet(\n            medicationOrderSet, dateRange, encounters)],\n        [medicationOrderSet.minDose, medicationOrderSet.maxDose],\n        medicationOrderSet.unit, tooltipMap, undefined, regions);\n  }\n\n  /**\n   * Converts a list of ObservationSets with discrete y-values (results) to\n   * a LineGraphData object. If we are graphing Observations with discrete\n   * values, such as \"yellow\" for the color of urine, we group all\n   * ObservationSets into one LabeledSeries, and display textual information\n   * in the tooltip.\n   * @param label The label for this set of observations.\n   * @param observationGroup A list of ObservationSets to display.\n   * @param encounters A list of Encounters to use while determining line\n   *     breaks in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different\n   *     units.\n   */\n  static fromObservationSetListDiscrete(\n      label: string, observationGroup: ObservationSet[],\n      sanitizer: DomSanitizer, encounters: Encounter[]): LineGraphData {\n    // For ObservationSets with discrete categories, we display a\n    // scatterplot with one series, with most information in the tooltip.\n    const yValue = 10;\n    const lblSeries = LabeledSeries.fromObservationSetsDiscrete(\n        observationGroup, yValue, label, encounters);\n\n    const tooltipMap = new Map<string, string>();\n    for (const observationSet of observationGroup) {\n      for (const obs of observationSet.resourceList) {\n        const tsString = obs.observation.timestamp.toMillis().toString();\n        const tooltipText = new DiscreteObservationTooltip().getTooltip(\n            [obs.observation], sanitizer);\n        // The key for this tooltip is the observation's timestamp.\n        // There may be multiple data points associated with the timestamp\n        // so we stack the tooltips on top of one another in that case.\n        if (tooltipMap.has(tsString)) {\n          tooltipMap.set(tsString, tooltipMap.get(tsString) + tooltipText);\n        } else {\n          tooltipMap.set(tsString, tooltipText);\n        }\n      }\n    }\n    return new LineGraphData(\n        label, [lblSeries], [0, yValue], undefined,  // Units\n        tooltipMap);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {DateTime} from 'luxon';\n\nimport {AnnotatedDiagnosticReport, DiagnosticReport} from '../fhir-data-classes/diagnostic-report';\nimport {MicrobioTooltip} from '../graphtypes/tooltips/microbio-tooltips';\n\nimport {LabeledSeries} from './labeled-series';\nimport {StepGraphData} from './stepgraphdata';\n\n/**\n * MicrobioGraphData holds configurations for a microbiology graph. The format\n * of a microbiology graph is simliar to a step graph in that each y-axis\n * position represents a single microbiology test, and points plotted along\n * that position represent results for that test.\n */\n\nexport class MicrobioGraphData extends StepGraphData {\n  private constructor(\n      endpointSeries: LabeledSeries[], tooltipMap: Map<string, string>) {\n    super(endpointSeries, tooltipMap, undefined);\n  }\n\n  /**\n   * Converts a list of DiagnosticReports to a StepGraphData object.\n   * All DiagnosticReports in the list should belong to the same culture type.\n   * @param diagnosticReports A list of DiagnosticReports to display.\n   * @returns a new StepGraphData for this set.\n   */\n  static fromDiagnosticReports(\n      diagnosticReports: DiagnosticReport[], cultureType: string,\n      sanitizer: DomSanitizer): MicrobioGraphData {\n    // TODO(b/121266814): Make constants or enum for cultureType.\n    const points: LabeledSeries[] = [];\n\n    const tooltipMap = new Map<string, string>();\n\n    for (const report of diagnosticReports) {\n      // Find the specimen in the report with the correct Culture type.\n      // We throw an error if there are mutiple specimens of the same type for\n      // a DiagnosticReport.\n      const seen = new Set();\n      const hasDuplicates = report.specimens.some((s) => {\n        return seen.size === seen.add(s.type).size;\n      });\n      if (hasDuplicates) {\n        throw Error('Report has multiple specimens with same type.');\n      }\n\n      const specimen = report.specimens.find(s => (s.type === cultureType));\n      if (specimen) {\n        const annotatedReport =\n            new AnnotatedDiagnosticReport(report, cultureType);\n        // For this tooltip, the keys are timestamps.\n        tooltipMap.set(\n            annotatedReport.timestamp.toMillis().toString(),\n            new MicrobioTooltip().getTooltip(annotatedReport, sanitizer));\n        for (const series of LabeledSeries.fromDiagnosticReport(\n                 report, annotatedReport.timestamp)) {\n          points.push(series);\n        }\n      }\n    }\n\n    return new MicrobioGraphData(points, tooltipMap);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {DateTime, Interval} from 'luxon';\n\nimport {MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {MedicationTooltip} from '../graphtypes/tooltips/medication-tooltips';\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * StepGraphData holds configurations for a step graph. A step graph displays\n * one or more LabeledSeries.\n */\n\nexport class StepGraphData extends GraphData {\n  constructor(\n      /** A list of the LabeledSeries data to plot. */\n      readonly dataSeries: LabeledSeries[],\n      /** A list of the LabeledSeries representing end points. */\n      // readonly endpointSeries: LabeledSeries[],\n      /** A map of tooltips for the data points. */\n      tooltipMap: Map<string, string>,\n      /**\n       *  The function to call to get the key for the tooltip map for a point.\n       */\n      keyFn: (data: string) => string) {\n    super(dataSeries, tooltipMap, keyFn);\n  }\n\n  /**\n   * Converts a list of MedicationOrderSets to a StepGraphData object.\n   * @param medicationOrderListGroup A list of MedicationOrderSets to display.\n   * @returns a new StepGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different units.\n   */\n  static fromMedicationOrderSetList(\n      medicationOrderListGroup: MedicationOrderSet[], dateRange: Interval,\n      sanitizer: DomSanitizer): StepGraphData {\n    const data: LabeledSeries[] = [];\n    const endpoints: LabeledSeries[] = [];\n\n    medicationOrderListGroup = medicationOrderListGroup.sort((a, b) => {\n      return a.resourceList[a.resourceList.length - 1]\n                 .lastAdmininistration.timestamp.toMillis() -\n          b.resourceList[b.resourceList.length - 1]\n              .lastAdmininistration.timestamp.toMillis();\n    });\n\n    const tooltipMap = new Map<string, string>();\n    for (const medOrderSet of medicationOrderListGroup) {\n      // Each MedicationOrderSet represents multiple MedicationOrders\n      // for the same medicine.\n      for (const medOrder of medOrderSet.resourceList) {\n        const labeledSeries = LabeledSeries.fromMedicationOrder(\n            medOrder, dateRange, medOrder.administrationsForOrder.label);\n        const administrationSeries = labeledSeries[0];\n        const endpointSeries = labeledSeries[1];\n        data.push(administrationSeries);\n        endpoints.push(endpointSeries);\n\n        // For this custom tooltip, the key is the series ID, and the value is\n        // the medication tooltip that shows the first and last doses for the\n        // medication.\n        tooltipMap.set(\n            medOrderSet.rxNormCode.label.toLowerCase() +\n                medOrder.firstAdministration.timestamp,\n            new MedicationTooltip().getTooltip(medOrder, sanitizer));\n        tooltipMap.set(\n            medOrderSet.rxNormCode.label.toLowerCase() +\n                medOrder.lastAdmininistration.timestamp,\n            new MedicationTooltip().getTooltip(medOrder, sanitizer));\n      }\n    }\n    // Do not display the units for Medication administration values on the card\n    // for MedicationSummary.\n    for (const series of data) {\n      series.unit = undefined;\n    }\n    for (const series of endpoints) {\n      series.unit = undefined;\n    }\n    return new StepGraphData(\n        endpoints,  // do not render medication administrations, only endpoints\n        tooltipMap,\n        // Our tooltip key here is the drug name plus the timestamp.\n        (tooltipContext: any) => {\n          const xValue = tooltipContext.dataPoints[0].label;\n          const yValue = tooltipContext.dataPoints[0].value;\n          return yValue.toLowerCase() +\n              DateTime.fromISO(xValue).toMillis().toString();\n        });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\n\nimport {Axis} from './axis';\n\n/**\n * An AxisGroup is a set of Axes that should be rendered on a single card\n * together.\n *\n * Upon construction, the AxisGroup kicks off a FHIR call to determine whether\n * there is data available for the AxisGroup within the time span of the\n * application. When the promise returns, its result is stored in the\n * dataAvailable class variable.\n *\n * None of the information in AxisGroup changes over the application's\n * lifecycle.\n */\nexport class AxisGroup {\n  /**\n   * Whether there is data available in the app timescope for this axis group.\n   * Marked as public because Angular templates need to get to it, and marked\n   * as mutable since it's changed by a promise result, but its value is only\n   * set once.\n   */\n  dataAvailable: boolean = undefined;\n\n  /**\n   * Constructs an AxisGroup.\n   *\n   * If label is unset in the constructor, then every axis in axes must have\n   * the same label for the constructor to succeed. Similarly, if displayGroup\n   * is unset, every axis must have the same resourceGroup.displayGrouping.\n   */\n  constructor(\n      /**\n       * The set of axes to be displayed in the same grouping.\n       */\n      readonly axes: Axis[],\n      /**\n       * The label for this axis group. If it isn't set here, we'll set it\n       * using the label of the contained axes.\n       */\n      readonly label?: string,\n      /**\n       * The display grouping for this axis group. If it isn't set here, we'll\n       * set it using the display grouping of the contained axes.\n       */\n      readonly displayGroup?: DisplayGrouping) {\n    if (!label) {\n      const labelSet = new Set(axes.map(axis => axis.label));\n      if (labelSet.size !== 1) {\n        throw Error(\n            'The axis group has multiple labels, so we can\\'t pick just one: ' +\n            Array.from(labelSet.entries()));\n      }\n      this.label = axes[0].label;\n    }\n\n    if (!displayGroup) {\n      const allDisplayGroups =\n          new Set(axes.map(axis => axis.resourceGroup.displayGrouping.label));\n      if (allDisplayGroups.size !== 1) {\n        throw Error(\n            'All axes on the same card need to have the same display grouping. Groups:' +\n            Array.from(new Set(\n                axes.map(axis => axis.resourceGroup.displayGrouping.label))));\n      }\n      this.displayGroup = axes[0].resourceGroup.displayGrouping;\n    }\n\n    // Go ahead and make the calls to get whether the data is available.\n    Promise.resolve(this.dataAvailableInAppTimeScope());\n  }\n\n  /**\n   * Returns whether there is any data available for any axes in this group\n   * within the time scope of the app.\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    if (this.dataAvailable !== undefined) {\n      return Promise.resolve(this.dataAvailable);\n    }\n    return Promise\n        .all(this.axes.map(axis => axis.dataAvailableInAppTimeScope()))\n        .then(rsc => {\n          this.dataAvailable = rsc.some(r => r === true);\n          return this.dataAvailable;\n        });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {BCHMicrobioCode, BCHMicrobioCodeGroup} from '../clinicalconcepts/bch-microbio-code';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {LOINCCode, LOINCCodeGroup} from '../clinicalconcepts/loinc-code';\nimport {ResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {RxNormCodeGroup} from '../clinicalconcepts/rx-norm-group';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationOrder, MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {FhirService} from '../fhir.service';\nimport {GraphData} from '../graphdatatypes/graphdata';\nimport {LineGraphData} from '../graphdatatypes/linegraphdata';\nimport {MicrobioGraphData} from '../graphdatatypes/microbiographdata';\nimport {StepGraphData} from '../graphdatatypes/stepgraphdata';\n\nimport {ChartType} from './graph/graph.component';\n\n/**\n * An axis represents one graph to be rendered. It\n * holds values for the type of graph (step, scatter, line, etc) as well as the\n * actual graph data.\n *\n * One axis might have multiple ResourceCodes associated with it, but all of\n * the same type.\n *\n * This class makes the FHIR calls to grab the associated data for the chart.\n */\nexport class Axis {\n  /**\n   * The chart type for this graph.\n   */\n  readonly chartType: ChartType;\n\n  /**\n   * The date range the data is currently loaded for.\n   */\n  dateRange: Interval;\n\n  /**\n   * Holds the GraphData already resolved for the class's current date range,\n   * unless it hasn't been resolved yet. Then this variable will be undefined,\n   * and you need to call updateDateRange to get the data loaded in.\n   */\n  private alreadyResolvedData: GraphData;\n\n  /**\n   * The associated DisplayGrouping for this graph.\n   */\n  displayConcept: DisplayGrouping;\n\n  /*\n   * The label for this axis.\n   */\n  label: string;\n\n  /*\n   * Whether to show tick marks for this axis (only changed when results are all\n   * qualitative).\n   */\n  showTicks = true;\n\n  // An error message if there's an error in data retrieval.\n  errorMessage: string;\n\n  // The encounters for the date range.\n  private encounters: Encounter[] = [];\n\n  // Holds the grouping of the resource codes for this axis.\n  private allLoinc: boolean;\n  private allRx: boolean;\n  private allBCHMicrobio: boolean;\n\n  /**\n   * The constructor for this axis.\n   * @param fhirService The FhirService used to make the FHIR calls.\n   * @param resourceGroup The ResourceGroup to request data for.\n   * @param dateRange: The date range to display on the axis.\n   * @param label?: The optional y-axis label for this axis.\n   */\n  constructor(\n      private fhirService: FhirService, private sanitizer: DomSanitizer,\n      /**\n       * The ResourceCodeGroup for this axis.\n       */\n      readonly resourceGroup: ResourceCodeGroup,\n      /*\n       * The label for this axis.\n       */\n      label?: string) {\n    this.chartType = resourceGroup.chartType;\n    this.displayConcept = resourceGroup.displayGrouping;\n    this.label = label;\n\n    const resourceCodeList = this.resourceGroup.resourceCodes;\n    // Check that all elements of the resourceCodeList are of the same type.\n    this.allLoinc = resourceCodeList.every(code => code instanceof LOINCCode);\n    this.allRx = resourceCodeList.every(code => code instanceof RxNormCode);\n    this.allBCHMicrobio =\n        resourceCodeList.every(code => code instanceof BCHMicrobioCode);\n    if (!this.allLoinc && !this.allRx && !this.allBCHMicrobio) {\n      throw Error('All resource codes must be of the same type.');\n    }\n  }\n\n  /**\n   * Changes this axis' date range and loads in the new graph data accordingly.\n   */\n  updateDateRange(dateRange: Interval): Promise<GraphData> {\n    if (dateRange === this.dateRange) {\n      return Promise.resolve(this.alreadyResolvedData);\n    }\n\n    // Invalidate the already-resolved data so that the graph data promise\n    // has to be re-evaluated.\n    this.dateRange = dateRange;\n    this.alreadyResolvedData = undefined;\n    return this.getDataFromFhir(dateRange).then(\n        data => {\n          this.alreadyResolvedData = data;\n          return data;\n        },\n        rejection => {\n          throw rejection;\n        });\n  }\n\n  /**\n   * Returns whether there is data available for this axis within the\n   * application's time scope.\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return Promise\n        .all(this.resourceGroup.resourceCodes.map(\n            rsc => rsc.dataAvailableInAppTimeScope(this.fhirService)))\n        .then(rsc => {\n          const flattened: boolean[] = [].concat.apply([], rsc);\n          return flattened.reduce((prev, curr) => prev || curr, false);\n        });\n  }\n\n  /**\n   * Gets the appropriate GraphData by classifying the resource codes and\n   * making the appropriate FHIR calls for data and transformations. If\n   * the data is already set in this class, it just returns that data.\n   *\n   * @returns A GraphData promise that will resolve to the GraphData for\n   *    this axis's resourceGroup.\n   */\n  private getDataFromFhir(dateRange: Interval): Promise<GraphData> {\n    if (this.alreadyResolvedData) {\n      return Promise.resolve(this.alreadyResolvedData);\n    }\n\n    // Set the encounters for this date range. If the promise fails, the list of\n    // encounters is empty.\n    this.fhirService.getEncountersForPatient(dateRange).then(e => {\n      e = e.sort(\n          (a, b) => a.period.start.toMillis() - b.period.start.toMillis());\n      this.encounters = e;\n    }, reject => this.encounters = []);\n\n    if (this.allRx) {\n      // Prescriptions can be plotted as a step chart or as a line chart.\n      if (this.chartType === ChartType.STEP) {\n        return this.getStepGraphDataForMedicationSummary(\n            this.resourceGroup as RxNormCodeGroup, dateRange);\n      } else {\n        return this.getLineGraphDataForMedicationDetail(\n            this.resourceGroup as RxNormCodeGroup, dateRange);\n      }\n    }\n\n    if (this.allBCHMicrobio) {\n      // Microbiology always shows up as a step chart.\n      return this.getStepGraphDataForMB(\n          this.resourceGroup as BCHMicrobioCodeGroup, dateRange);\n    } else {\n      // In this case it is all LOINC codes.\n      // We use LineGraphData for both ChartType.Scatter and\n      // ChartType.Line, for plotting LOINC Codes.\n      return (this.resourceGroup as LOINCCodeGroup)\n          .getResourceSet(dateRange)\n          .then(obsSetList => {\n            if (obsSetList) {\n              // If the observation set contains any qualitative\n              // values, even if it's mixed in with quantitative values,\n              // we display the discrete linegraph.\n              if (obsSetList.some(obsSet => obsSet.anyQualitative)) {\n                this.showTicks = false;\n                return LineGraphData.fromObservationSetListDiscrete(\n                    this.displayConcept.label, obsSetList, this.sanitizer,\n                    this.encounters);\n              }\n              return LineGraphData.fromObservationSetList(\n                  this.displayConcept.label, obsSetList, this.resourceGroup,\n                  this.sanitizer, this.encounters);\n            }\n          });\n    }\n  }\n\n  /**\n   * Get the data needed for the medication summary.\n   * We first get the MedicationAdministrations corresponding to the RxNorms to\n   * display on the page, and group them by order id (representing a\n   * prescription). We then get the MedicationOrder for each order id, and group\n   * those into MedicationOrderSets, where each MedicationOrderSet represents a\n   * set of MedicationOrders for a particular medication.\n   * @param rxNorms The RxNorms to be displayed in the StepGraphCard.\n   */\n  getStepGraphDataForMedicationSummary(\n      rxNorms: RxNormCodeGroup, dateRange: Interval): Promise<StepGraphData> {\n    return rxNorms.getResourceFromFhir(dateRange).then(medOrderSets => {\n      return StepGraphData.fromMedicationOrderSetList(\n          medOrderSets.map(x => x.orders), dateRange, this.sanitizer);\n    });\n  }\n\n  getStepGraphDataForMB(bchCodes: BCHMicrobioCodeGroup, dateRange: Interval):\n      Promise<StepGraphData> {\n    return bchCodes.getResourceFromFhir(dateRange).then(diagReports => {\n      return MicrobioGraphData.fromDiagnosticReports(\n          diagReports, bchCodes.label, this.sanitizer);\n    });\n  }\n\n  /**\n   * Issues a FHIR request to get all the meds data for a list of\n   * RxNorm codes (medications).\n   */\n  getLineGraphDataForMedicationDetail(\n      rxNorms: RxNormCodeGroup, dateRange: Interval): Promise<LineGraphData> {\n    return rxNorms.getResourceFromFhir(dateRange)\n        .then(rxNs => {\n          const medOrders: MedicationOrder[] =\n              [].concat(...rxNs.map(rx => rx.orders.resourceList));\n          return medOrders.map(\n              order => order.setMedicationAdministrations(this.fhirService));\n        })\n        .then(orders => {\n          return Promise.all(orders);\n        })\n        .then(orders => {\n          return LineGraphData.fromMedicationOrderSet(\n              new MedicationOrderSet(orders), dateRange, this.sanitizer,\n              this.encounters);\n        });\n  }\n\n  /**\n   * Gets the x regions from the data for this axis.\n   */\n  getXRegions(): Promise<any[]> {\n    return this.getDataFromFhir(this.dateRange).then(data => {\n      return data.xRegions ? data.xRegions : [];\n    });\n  }\n\n  /**\n   * Returns whether there's resolved data for this axis.\n   */\n  dataResolved(): boolean {\n    return this.alreadyResolvedData ? true : false;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\nimport {DateTime} from 'luxon';\n\n/*\n * This class makes an annotation for a particular timestamp with custom notes.\n */\nexport class CustomizableGraphAnnotation {\n  // Whether or not the full annotation is shown. If false, only the title of\n  // the annotation will show.\n  private showDetails: boolean;\n  // The width of the annotation.\n  readonly annotationWidth = 100;\n  // The default height of the annotation.\n  readonly annotationHeight = 25;\n  // The default y position of the annotation.\n  readonly annotationDefaultY = 20;\n\n  timestamp: DateTime;\n  deleteIcon: HTMLElement;\n  editIcon: HTMLElement;\n  expandIcon: HTMLElement;\n\n  constructor(\n      timestamp: DateTime,\n      /** The title that will show up in the annotation. */\n      readonly title = '',\n      /** The description that will show up in the annotation. */\n      readonly description = '',\n      /** The color for this annotation and associated point. */\n      readonly color: Color = Color.rgb('black'),\n      /** The timestamp for the annotation */\n  ) {\n    this.timestamp = timestamp;\n  }\n\n  addAnnotation(chartDivId: string, differenceInHeight: number): HTMLElement {\n    const self = this;\n    this.showDetails = false;\n    const millis = this.timestamp.toMillis();\n\n    const tooltipContainer = document.createElement('div');\n    tooltipContainer.setAttribute(\n        'class', 'tooltip-custom-' + chartDivId + millis);\n    tooltipContainer.style.left = '0px';\n    tooltipContainer.style.borderColor = 'grey';\n    tooltipContainer.style.backgroundColor = this.color;\n    tooltipContainer.style.bottom =\n        (this.annotationDefaultY + differenceInHeight) + 'px';\n\n    const tooltipTitleContainer = document.createElement('div');\n    tooltipContainer.appendChild(tooltipTitleContainer);\n\n    this.expandIcon =\n        this.makeIcon('expand-' + chartDivId + millis, 'expand_more');\n    this.expandIcon.style.cursor = 'pointer';\n    tooltipTitleContainer.append(this.expandIcon);\n\n    const tooltipTitle = document.createElement('h6');\n    tooltipTitle.setAttribute(\n        'class', 'tooltip-title-custom-' + chartDivId + millis);\n    tooltipTitle.innerText = this.title;\n    tooltipTitleContainer.appendChild(tooltipTitle);\n\n\n    this.deleteIcon = this.makeIcon('delete-' + chartDivId + millis, 'clear');\n    this.deleteIcon.style.cursor = 'pointer';\n    tooltipTitleContainer.append(this.deleteIcon);\n\n    const tooltipDetails = document.createElement('div');\n    tooltipDetails.setAttribute(\n        'class', 'tooltip-details-custom-' + chartDivId + millis);\n    tooltipContainer.appendChild(tooltipDetails);\n\n    const tooltipDetailsText = document.createElement('div');\n    tooltipDetailsText.innerText = this.description;\n    tooltipDetailsText.setAttribute(\n        'class', 'tooltip-details-text-' + chartDivId + millis);\n    tooltipDetails.appendChild(tooltipDetailsText);\n\n    this.editIcon = this.makeIcon('edit-' + chartDivId + millis, 'edit');\n    this.editIcon.style.cursor = 'pointer';\n    tooltipDetails.append(this.editIcon);\n\n    /**\n     * Add action handlers.\n     */\n    tooltipTitle.onclick = ((e: MouseEvent) => {\n      // Toggle whether or not the details are shown.\n      self.showDetails = !self.showDetails;\n      self.showDetailsToggle(\n          millis, self.showDetails, tooltipContainer, chartDivId);\n    });\n\n    this.expandIcon.onclick = ((e: MouseEvent) => {\n      // Toggle whether or not the details are shown.\n      self.showDetails = !self.showDetails;\n      self.showDetailsToggle(\n          millis, self.showDetails, tooltipContainer, chartDivId);\n    });\n\n\n    tooltipContainer.onmouseover = (e: MouseEvent) => {\n      this.expandIcon.style.visibility = 'visible';\n      this.deleteIcon.classList.add('showIcon');\n      this.editIcon.classList.add('showIcon');\n    };\n\n    tooltipContainer.onmouseout = (e: MouseEvent) => {\n      this.expandIcon.style.visibility = 'hidden';\n      this.deleteIcon.classList.remove('showIcon');\n      this.editIcon.classList.remove('showIcon');\n    };\n    return tooltipContainer;\n  }\n\n  removeAnnotation(chartDivId: string) {\n    const annotation = document.getElementsByClassName(\n        'tooltip-whole-' + chartDivId + this.timestamp.toMillis())[0];\n    annotation.remove();\n  }\n\n  private makeIcon(id: string, iconName: string): HTMLElement {\n    const icon = document.createElement('i');\n    icon.setAttribute('class', 'material-icons');\n    icon.setAttribute('id', id);\n    icon.style.fontSize = '18px';\n    icon.innerHTML = iconName;\n    return icon;\n  }\n  // Toggles whether or not the full annotation is shown.\n  private showDetailsToggle(\n      millis: number, toggle: boolean, element: any, chartDivId: string) {\n    const detailsElement =\n        document.getElementsByClassName(\n            'tooltip-details-custom-' + chartDivId + millis)[0] as HTMLElement;\n    const expandElement =\n        document.getElementById('expand-' + chartDivId + millis);\n    if (toggle) {\n      detailsElement.style.display = 'inline-block';\n      expandElement.innerHTML = 'expand_less';\n    } else {\n      detailsElement.style.display = 'none';\n      expandElement.innerHTML = 'expand_more';\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, forwardRef, Input, OnChanges, OnDestroy, Output, SimpleChanges} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {DateTime, Interval} from 'luxon';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableTimelineDialogComponent} from 'src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component';\nimport {CustomizableData} from 'src/app/graphdatatypes/customizabledata';\n\nimport {GraphComponent} from '../graph/graph.component';\n\nimport {CustomizableGraphAnnotation} from './customizable-graph-annotation';\n\n@Component({\n  selector: 'app-customizable-graph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: [\n    '../../cardtypes/customizable-timeline/customizable-timeline.component.css'\n  ],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => CustomizableGraphComponent)\n  }]\n})\nexport class CustomizableGraphComponent extends\n    GraphComponent<CustomizableData> implements OnChanges, OnDestroy {\n  /**\n   * An event indicating that the points on the CustomizableGraph have changed.\n   */\n  @Output() pointsChanged = new EventEmitter<CustomizableData>();\n  /**\n   * Holds whether this graph is in edit mode.\n   */\n  @Input() inEditMode: boolean;\n\n  /**\n   * The reference for the Dialog opened.\n   */\n  private dialogRef: any;\n\n\n  constructor(readonly sanitizer: DomSanitizer, public dialog: MatDialog) {\n    super(sanitizer);\n    this.chartTypeString = 'scatter';\n  }\n\n  ngOnDestroy() {\n    if (this.dialogRef && this.dialogRef.unsubscribe) {\n      // Destroy the dialog ref to prevent memory leaks.\n      this.dialogRef.unsubscribe();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // TODO(shilpakumar): Handle edit mode.\n    if (changes.dateRange) {\n      // CustomizableGraph needs to update annotations in the case that the date\n      // range is changed.\n      this.dateRangeChanged();\n    }\n  }\n  adjustGeneratedChartConfiguration() {\n    const self = this;\n    this.chartOptions.scales.yAxes[0].display = false;\n    this.chartOptions.scales.yAxes[0].ticks.beginAtZero = true;\n    this.chartOptions.tooltips = {enabled: false};\n    this.chartOptions.hover = {mode: null};\n    this.chartOptions.onClick = function(event) {\n      if (!self.inEditMode) {\n        return;\n      }\n      const xValueMoment =\n          this.scales[GraphComponent.X_AXIS_ID].getValueForPixel(event.offsetX);\n      const dateClicked = DateTime.fromJSDate(xValueMoment.toDate());\n      const currentInterval = Interval.fromDateTimes(\n          self.dateRange.start.toLocal().startOf('day'),\n          self.dateRange.end.toLocal().endOf('day'));\n      if (currentInterval.contains(dateClicked)) {\n        self.openDialog(dateClicked);\n      }\n    };\n    this.chartOptions.onHover = function(event) {\n      if (!self.inEditMode) {\n        return;\n      }\n      const chart: any = this;\n      const yScale = chart.scales[GraphComponent.Y_AXIS_ID];\n      const xScale = chart.scales[GraphComponent.X_AXIS_ID];\n      const currentDate =\n          DateTime.fromJSDate(xScale.getValueForPixel(event.offsetX).toDate());\n      const currentDateString = currentDate.toLocaleString() + ' ' +\n          currentDate.toLocal().toLocaleString(DateTime.TIME_24_SIMPLE);\n\n      const currentInterval = Interval.fromDateTimes(\n          self.dateRange.start.toLocal().startOf('day'),\n          self.dateRange.end.toLocal().endOf('day'));\n\n      // Remove all other ctx lines drawn, to only show one hover line.\n      chart.clear();\n      chart.draw();\n\n      // Only display the hover line if the date it represents is within the\n      // current date range. This is because the chart is slightly larger than\n      // the area contained within the axes, and a line could potentially be\n      // shown before the x-axis starts, or after it ends.\n      if (currentInterval.contains(currentDate)) {\n        chart.ctx.beginPath();\n        chart.ctx.moveTo(event.offsetX, 0);\n        chart.ctx.strokeStyle = '#A0A0A0';\n        chart.ctx.lineTo(event.offsetX, yScale.bottom);\n        chart.ctx.stroke();\n        chart.ctx.fillText(currentDateString, event.offsetX, yScale.bottom / 2);\n      }\n    };\n    this.removeAnnotations();\n    this.addAnnotations();\n  }\n\n  dateRangeChanged() {\n    this.reloadChart();\n    this.adjustGeneratedChartConfiguration();\n  }\n\n  private addAnnotations() {\n    for (const dataPt of this.chartData[0].data) {\n      const canvas = document.getElementById(this.chartDivId);\n      const millis = DateTime.fromISO(dataPt['x']).toMillis();\n      const annotation = this.data.annotations.get(millis);\n      const color = annotation.color ? annotation.color : '#000000';\n      // We need to cast this.chart.chart as any so we can access the 'scales'\n      // property.\n      const xOffset = (this.chart.chart as any)\n                          .scales[GraphComponent.X_AXIS_ID]\n                          .getPixelForValue(annotation.timestamp.toJSDate());\n      const yOffset = (this.chart.chart as any)\n                          .scales[GraphComponent.Y_AXIS_ID]\n                          .margins['bottom'];\n      const yAxisHeight =\n          (this.chart.chart as any).scales[GraphComponent.Y_AXIS_ID].height;\n      const heightToUse =\n          this.findBestYCoordinate(xOffset, yAxisHeight, yOffset);\n      const difference = heightToUse - yOffset;\n\n      // Only display the flag if the date it represents is within the\n      // current date range. This is so that the flag is not added to a location\n      // on the DOM that is not within the chart.\n      if (this.entireInterval.contains(DateTime.fromMillis(millis).toLocal())) {\n        const tooltip = this.findOrCreateTooltipElement(\n            canvas, 'annotation-' + this.chartDivId + millis);\n        tooltip.setAttribute(\n            'class', 'tooltip-whole-' + this.chartDivId + millis);\n        tooltip.style.borderLeftColor = color;\n        tooltip.style.bottom = yOffset + 'px';\n        tooltip.style.left = xOffset + 'px';\n        tooltip.style.height = heightToUse + 'px';\n        while (tooltip.firstChild) {\n          tooltip.removeChild(tooltip.firstChild);\n        }\n        tooltip.onclick = (e: MouseEvent) => {\n          const parent = tooltip.parentNode;\n          // TODO(b/123935165): Find a better way to handle the errors.\n          try {\n            parent.appendChild(tooltip);\n          } catch (e) {\n            console.log(e);\n          }\n        };\n\n        tooltip.appendChild(\n            annotation.addAnnotation(this.chartDivId, difference));\n        this.addDeleteEvent(annotation);\n        this.addEditListener(annotation);\n      }\n    }\n  }\n\n  private removeAnnotations() {\n    const selector = 'tooltip-whole-' + this.chartDivId;\n    for (const annotation of Array.from(\n             document.querySelectorAll('[class*=' + selector + ']'))) {\n      annotation.remove();\n    }\n  }\n\n  private findBestYCoordinate(\n      xOffset: number, yAxisHeight: number, yOffset: number): number {\n    const annotationWidth = 100;\n    const verticalOverlap = 10;\n    const horizontalOverlap = 20;\n    const selector = 'tooltip-whole-' + this.chartDivId;\n    const allFlags =\n        Array.from(document.querySelectorAll('[class*=' + selector + ']'));\n    const positions = allFlags.map(flag => {\n      const htmlFlag = flag as HTMLElement;\n      return {\n        left: Number(htmlFlag.style.left.replace('px', '')),\n        height: Number(htmlFlag.style.height.replace('px', '')),\n      };\n    });\n    const overlappingYs = [];\n    // Check if there are any annotations with horizontal overlap.\n    for (const position of positions) {\n      const leftPosition = position.left + annotationWidth;\n      if (xOffset <= leftPosition &&\n          (xOffset + annotationWidth >= position.left)) {\n        overlappingYs.push(position.height);\n      }\n    }\n\n    // Figure out the new y-coordinate for the annotation.\n    let heightToUse = yOffset;\n    // Sort all heights in increasing order.\n    overlappingYs.sort(function(a, b) {\n      return a - b;\n    });\n    // By default, try putting the new box above all other annotations with\n    // horizontal overlap.\n    if (overlappingYs.length > 0) {\n      const currentMaxHeight = overlappingYs[overlappingYs.length - 1];\n      // Only add height if the annotation does not go past the y axis height.\n      if (currentMaxHeight + verticalOverlap <= yAxisHeight) {\n        heightToUse = currentMaxHeight + verticalOverlap;\n      } else {\n        heightToUse = currentMaxHeight;\n      }\n    }\n    // Check if there is any position with space available between existing\n    // annotations.\n    for (let i = 0; i < overlappingYs.length; i++) {\n      // Check if there is enough space.\n      if (overlappingYs[i + 1] - (overlappingYs[i] + annotationWidth) >=\n          horizontalOverlap) {\n        heightToUse = overlappingYs[i];\n      }\n    }\n    return heightToUse;\n  }\n\n  // If the selected date already has an annotation, modify the time\n  // by + 1 millisecond.\n  private updateTime(millis: number) {\n    if (this.data.annotations.has(millis)) {\n      return this.updateTime(millis + 1);\n    }\n    return millis;\n  }\n\n  /**\n   * Allow for the addition of a point to the CustomizableGraph, via a\n   * CustomizableTimelineDialog.\n   * (Visible only for testing.)\n   */\n  addPoint(timestamp: DateTime) {\n    if (this.inEditMode) {\n      this.dialogRef = this.openDialog(timestamp);\n    }\n  }\n\n  private openDialog(\n      timestamp: DateTime, editedAnnotation?: CustomizableGraphAnnotation) {\n    // Make the dialog show up near where the user clicked.\n    const data = editedAnnotation ? {\n      title: editedAnnotation.title,\n      date: new Date(editedAnnotation.timestamp.toMillis()),\n      description: editedAnnotation.description,\n      color: editedAnnotation.color,\n      dateRange: this.dateRange,\n    } :\n                                    {\n                                      date: timestamp,\n                                      dateRange: this.dateRange,\n                                    };\n\n    this.dialogRef =\n        this.dialog.open(CustomizableTimelineDialogComponent, {data: data});\n    this.dialogRef.afterClosed().subscribe(r => {\n      if (r) {\n        if (editedAnnotation) {\n          this.data.removePointFromSeries(\n              DateTime.fromMillis(editedAnnotation.timestamp.toMillis()));\n          editedAnnotation.removeAnnotation(this.chartDivId);\n        }\n\n        const result: CustomizableGraphAnnotation =\n            r as CustomizableGraphAnnotation;\n        // By default, the user selected date is the original date\n        // corresponding to where the user chose to add the point.\n        let userSelectedDate = result.timestamp;\n        // TODO(b/122371627):  Use UUIDs instead of timestamps to track\n        // annotations.\n        userSelectedDate =\n            DateTime.fromMillis(this.updateTime(userSelectedDate.toMillis()));\n        result.timestamp = userSelectedDate;\n        this.data.addPointToSeries(result);\n        this.pointsChanged.emit(this.data);\n        this.generateChart();\n\n        // Record the user adding an event on a CustomizableTimeline to Google\n        // Analytics.\n        (<any>window).gtag('event', 'addEventCustomTimeline', {\n          'event_category': 'customTimeline',\n          'event_label': new Date().toDateString()\n        });\n      }\n    });\n  }\n\n  /**\n   * Add a listener for a click event on the delete button of the annotation at\n   * the given time.\n   * @param annotation The annotation for this point to remove.\n   */\n  private addDeleteEvent(annotation: CustomizableGraphAnnotation) {\n    annotation.deleteIcon.onclick = ((e: MouseEvent) => {\n      this.data.removePointFromSeries(annotation.timestamp);\n      annotation.removeAnnotation(this.chartDivId);\n      this.pointsChanged.emit(this.data);\n      this.generateChart();\n    });\n  }\n\n  /**\n   * Add a listener for a click event on the edit button of the annotation at\n   * the given time.\n   * Visible only for testing.\n   * @param annotation The annotation for the point to edit.\n   */\n  addEditListener(annotation: CustomizableGraphAnnotation) {\n    annotation.editIcon.onclick = ((e: MouseEvent) => {\n      this.dialogRef = this.openDialog(annotation.timestamp, annotation);\n      // Record the user editing an event on a CustomizableTimeline to Google\n      // Analytics.\n      (<any>window).gtag('event', 'editEventCustomTimeline', {\n        'event_category': 'customTimeline',\n        'event_label': new Date().toDateString()\n      });\n    });\n  }\n}\n","module.exports = \"::ng-deep canvas{\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n}\\n::ng-deep .chartjs-tooltip {\\n  opacity: 1;\\n  position: absolute;\\n  pointer-events: none;\\n  /* Show the tooltip above everything else. */\\n  z-index: 1000;\\n}\\n::ng-deep .chartjs-tooltip-key {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 10px;\\n}\\n/* All the below styles apply to elements within the graphs. Because these\\nare nested inside the components and within C3 divs, we have to prefix the\\nstyle names with ::ng-deep.  */\\n.c3-tooltip > tbody > tr > th {\\n  background-color: rgb(197, 185, 172); /* Boston Warm Gray */\\n  width: 100%;\\n  word-wrap: break-word;\\n}\\n::ng-deep .c3-tooltip td {\\n  width: 125px;\\n}\\n::ng-deep .order-region {\\n  fill: rgb(179, 157, 219); /* Secondary color */\\n  stroke:  rgb(179, 157, 219); /* Secondary color */\\n}\\n\"","module.exports = \"<!-- This top level div expands to fill the card. If we remove it, then the inner div\\ninfinitely expands as the canvas tries to take up more and more space.-->\\n<div>\\n  <div style=\\\"position: relative; height:125px\\\">\\n    <canvas baseChart [datasets]=\\\"chartData\\\" [options]=\\\"chartOptions\\\" [plugins]=\\\"chartPlugins\\\"\\n      [chartType]=\\\"chartTypeString\\\" [id]=\\\"chartDivId\\\" height=\\\"125\\\" width=\\\"500\\\"></canvas>\\n  </div>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Chart, ChartDataSets, ChartOptions, ChartXAxe, ChartYAxe} from 'chart.js';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport {DateTime, Interval} from 'luxon';\nimport {BaseChartDirective, Color} from 'ng2-charts';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {LabeledSeries} from 'src/app/graphdatatypes/labeled-series';\nimport {LineGraphData} from 'src/app/graphdatatypes/linegraphdata';\nimport {v4 as uuid} from 'uuid';\n\nimport {StandardTooltip} from '../tooltips/tooltip';\n\nexport enum ChartType {\n  SCATTER,\n  LINE,\n  STEP,\n  MICROBIO\n}\n\n/**\n * Displays a graph. T is the data type the graph is equipped to display.\n */\nexport abstract class GraphComponent<T extends GraphData> implements OnInit,\n                                                                     OnChanges {\n  /** Dummy data series label. */\n  private static readonly DEFAULT_BLANK_DATA_LABEL = 'blankdatalabel';\n\n  /**\n   * The amount of padding to add to the left of the graph. This goes hand in\n   * hand with how we choose to wrap the labels in the rendered chart, so if\n   * Y_AXIS_TICK_MAX changes, this probably needs to change, too.\n   */\n  private static readonly Y_AXIS_LEFT_PADDING = 125;\n\n  /** Line weights for emphasized and non-emphasized line graphs. */\n  private static readonly THICK_LINE = 3;\n  private static readonly THIN_LINE = 1;\n\n  /** Constants for x and y axis names. */\n  static readonly Y_AXIS_ID = 'y-axis-0';\n  static readonly X_AXIS_ID = 'x-axis-0';\n\n  /** The base chart height to use when rendering. */\n  readonly BASE_CHART_HEIGHT_PX = 150;\n\n  /** The eventline annotations to keep track of. */\n  annotations = [];\n\n  /**\n   * The entire interval represented by the current date range. This Interval\n   * goes from the beginning of the first day of the date range, to the end of\n   * the last day of the date range.\n   */\n  entireInterval: Interval;\n\n  /*****************************************\n   * Bound input variables\n   */\n\n  /** The x-axis eventlines to display on the chart. */\n  @Input() eventlines: Array<{[key: string]: number | string}>;\n  /** The x-axis to use for the chart. */\n  @Input() dateRange: Interval;\n  /** The y-axis label to display. */\n  @Input() axisLabel: string;\n  /** The graph data to show.  */\n  @Input() data: T;\n  /** The x regions to mark on this graph. */\n  @Input() xRegions: Array<[DateTime, DateTime]>;\n\n  /*****************************************\n   * Variables the chart.js directive binds to.\n   */\n\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n  /** Plugins for chart.js. */\n  chartPlugins = [pluginAnnotations];\n\n  /**\n   * Sets the tooltip for the graph.\n   * If the class has a tooltipMap set, then we look up the tooltip from that\n   * map. If there's no tooltipMap, then we return a simple formatted tooltip\n   * of just the string representing the data plus the appropriate units for\n   * a linegraph, or just the unedited value if it's a different kind of graph.\n   */\n  readonly customTooltips =\n      (tooltipContext) => {\n        // Get, or construct, a tooltip element to put all the tooltip HTML\n        // into.\n        const canvas = document.getElementById(this.chartDivId);\n        const tooltipEl = this.findOrCreateTooltipElement(\n            canvas, 'chartjs-tooltip' + this.chartDivId);\n\n        // Hide the element if there is no tooltip-- this function gets called\n        // back whether you're hovering over an element or not.\n        if (tooltipContext.opacity === 0) {\n          tooltipEl.style.opacity = '0';\n          return;\n        }\n\n        if (tooltipContext.body) {\n          tooltipEl.innerHTML = this.getTooltipInnerHtml(tooltipContext);\n        }\n\n        // Display the tooltip lined up with the data point.\n        const positionY = canvas.offsetTop;\n        const positionX = canvas.offsetLeft;\n        tooltipEl.style.opacity = '1';\n        tooltipEl.style.left = positionX + tooltipContext.caretX + 'px';\n        tooltipEl.style.top = positionY + tooltipContext.caretY + 'px';\n      }\n\n  // The bindings are unhappy when you provide an empty data array, so we\n  // give it a fake series to render.\n  /**\n   * The chart data sets to render.\n   */\n  chartData: ChartDataSets[] = [\n    {data: [], label: GraphComponent.DEFAULT_BLANK_DATA_LABEL},\n  ];\n\n  /**\n   * Chart options to be rendered.\n   */\n  chartOptions: (ChartOptions&{annotation: any}) = {\n    // Draw straight lines between points instead of curves.\n    elements: {line: {tension: 0}},\n    layout: {padding: {top: 15}},\n    // We make our own legend so we don't show the built-in one.\n    legend: {display: false},\n    scales: {xAxes: [this.generateXAxis()], yAxes: [this.generateYAxis()]},\n    // Needed to grow the graph to fit the space.\n    responsive: true,\n    maintainAspectRatio: false,\n    // Set up the custom callback for the tooltips.\n    tooltips: {\n      enabled: false,\n      mode: 'x',\n      position: 'nearest',\n      custom: this.customTooltips\n    },\n    annotation: {\n      // Array of annotation configuration objects to be filled in.\n      annotations: []\n    },\n    /** The settings below are just for better performance. */\n    animation: {duration: 0},\n    hover: {animationDuration: 0},\n    responsiveAnimationDuration: 0\n  };\n\n  /**\n   * The sequence of colors to use for rendering the LabeledSeries for\n   * this chart's data. The ordering of this color array should be in\n   * parallel to the ordering of the LabeledSeries in this chart's data.\n   */\n  chartColors: Color[] = [];\n\n  /** A unique identifier for the element to bind the graph to. */\n  chartDivId: string;\n\n  /**\n   * The default chart type for this chart. The Angular directive binds\n   * to this string to tell chart.js which chart type to use.\n   */\n  chartTypeString = 'line';\n\n  constructor(readonly sanitizer: DomSanitizer) {\n    // Generate a unique ID for this chart.\n    const chartId = uuid();\n    // Replace the dashes in the UUID to meet HTML requirements.\n    const re = /\\-/gi;\n    this.chartDivId = 'chart' + chartId.replace(re, '');\n  }\n\n  ngOnInit() {\n    this.generateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.eventlines) {\n      this.updateEventlines(changes.eventlines.currentValue);\n    }\n    if (changes.dateRange) {\n      this.chartOptions.scales.xAxes = [this.generateXAxis()];\n      this.entireInterval = Interval.fromDateTimes(\n          this.dateRange.start.toLocal().startOf('day'),\n          this.dateRange.end.toLocal().endOf('day'));\n    }\n    if (changes.xRegions) {\n      this.showXRegions();\n    }\n  }\n\n  /**\n   * When the component gets initialized and upon updates, this series of calls\n   * modifies the data-bound variables so that the correct chart gets rendered.\n   *\n   * 1) prepareForChartConfiguration: an overrideable function in which\n   *    subclasses can get things ready for the chart to load in data\n   * 2) generateBasicChart: load in the chart data and do formatting that all\n   *    subclasses share in common\n   * 3) adjustGeneratedChartConfiguration: make any tweaks to the chart\n   *    that couldn't be made until the data got loaded in\n   */\n\n  generateChart(focusOnSeries?: LabeledSeries[]) {\n    if (this.data && this.dateRange) {\n      this.chartData =\n          [{data: [], label: GraphComponent.DEFAULT_BLANK_DATA_LABEL}];\n      this.entireInterval = Interval.fromDateTimes(\n          this.dateRange.start.toLocal().startOf('day'),\n          this.dateRange.end.toLocal().endOf('day'));\n      this.prepareForChartConfiguration();\n      this.generateBasicChart(focusOnSeries);\n      this.adjustGeneratedChartConfiguration();\n\n      // Don't let point style change on hover.\n      // For some reason this does better after data binding instead of inline.\n      // for (let i = 0; i < this.data.series.length; i++) {\n      //   const chartjsSeries = this.chartData[i];\n      //   const labeledSeries = this.data.series[i];\n      //   try {\n      //     chartjsSeries.pointHoverBackgroundColor =\n      //         labeledSeries.legendInfo.fill;\n      //     chartjsSeries.pointHoverBorderColor =\n      //         labeledSeries.legendInfo.outline;\n      //   } catch {\n      //   }\n      // }\n    }\n  }\n\n  updateEventlines(eventlines: Array<{[key: string]: number | string}>) {\n    const currentInterval = Interval.fromDateTimes(\n        this.dateRange.start.toLocal().startOf('day'),\n        this.dateRange.end.toLocal().endOf('day'));\n    this.chartOptions.annotation.annotations =\n        this.chartOptions.annotation.annotations.filter(\n            a => !(a.id && a.id.includes('eventline')));\n    if (this.chart) {\n      for (const eventline of eventlines) {\n        const currentDate = DateTime.fromMillis(Number(eventline.value));\n        if (currentInterval.contains(currentDate)) {\n          const line = {\n            type: 'line',\n            mode: 'vertical',\n            id: 'eventline' + eventline.value,\n            scaleID: GraphComponent.X_AXIS_ID,\n            value: currentDate.toJSDate(),\n            borderColor: eventline.color,\n            borderWidth: 2,\n            label: {\n              fontColor: 'grey',\n              fontSize: 8,\n              position: 'center',\n              enabled: true,\n              content: eventline.text\n            }\n          };\n          this.chartOptions.annotation.annotations.push(line);\n        }\n      }\n      this.reloadChart();\n    }\n  }\n\n  reloadChart() {\n    if (this.chart !== undefined && this.chart.chart !== undefined) {\n      this.chart.chart.destroy();\n\n      this.chart.datasets = this.chartData;\n      this.chart.options = this.chartOptions;\n      this.chart.ngOnInit();\n    }\n  }\n\n  /**\n   * Lines up any extra things needed to generate the\n   * chart. Override this function when you need to make changes before the data\n   * is loaded into the chart or when you need to load more data into the chart.\n   */\n  prepareForChartConfiguration() {}\n\n  /**\n   * Tweaks the generated chart. Override this function when you need to make\n   * changes based on the data loaded into the chart.\n   */\n  adjustGeneratedChartConfiguration() {}\n\n  /**\n   * Sets up a generalized c3.ChartConfig for the data passed in. See\n   * the type definition at:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/c3/index.d.ts\n   * @param maxXTicks: The maximum number of tick-marks to include on\n   *     the x-axis\n   */\n  private generateBasicChart(focusOnSeries?: LabeledSeries[]) {\n    // Transform the data into a format that chart.js can render it.\n    Chart.defaults.global.defaultFontFamily = 'Work Sans';\n    const data = [];\n    for (const series of this.data.series) {\n      let lineWidth: number = GraphComponent.THIN_LINE;\n      if (focusOnSeries !== undefined && focusOnSeries.includes(series)) {\n        lineWidth = GraphComponent.THICK_LINE;\n      }\n      if (series.coordinates.length > 0) {\n        data.push({\n          data: series.coordinates.map(pt => {\n            return {x: pt[0].toISO(), y: pt[1]};\n          }),\n          label: series.label,\n          // Do not fill the area under the line.\n          fill: false,\n          borderWidth: lineWidth,\n          pointBorderWidth: 2,\n          pointRadius: 3,\n          backgroundColor: series.legendInfo.fill,\n          borderColor: series.legendInfo.fill,\n          pointBackgroundColor: series.legendInfo.fill,\n          pointBorderColor: series.legendInfo.outline,\n        });\n      }\n    }\n\n    // The subclasses may have already put series in lineChartData, and\n    // we don't want to remove them, so we just append them to the\n    // series. On the other hand, if there's a blank series in\n    // lineChartData, we want to get rid of it before putting everything\n    // else in.\n    if (data.length > 0 && this.onlyDefaultDataPresent()) {\n      this.chartData = data;\n    } else {\n      this.chartData = this.chartData.concat(data);\n    }\n\n    // Set the axis label if it's provided.\n    this.chartOptions.scales.yAxes[0].scaleLabel.labelString =\n        this.axisLabel ? this.axisLabel : '';\n\n    // Add left-padding so that the y-axes are aligned with one another.\n    this.chartOptions.scales.yAxes[0]['afterSetDimensions'] = function(axes) {\n      axes.paddingLeft = GraphComponent.Y_AXIS_LEFT_PADDING;\n    };\n\n    this.showXRegions();\n  }\n\n  private showXRegions() {\n    if (!this.xRegions) {\n      return;\n    }\n    for (const region of this.xRegions) {\n      const annotation = {\n        // Show the region underneath the data points.\n        drawTime: 'beforeDatasetsDraw',\n        type: 'box',\n        xMin: region[0].toMillis(),\n        xMax: region[1].toMillis(),\n        xScaleID: GraphComponent.X_AXIS_ID,\n        yScaleID: GraphComponent.Y_AXIS_ID,\n        backgroundColor: 'rgba(179, 157, 219, 0.3)',  // purple secondary color\n        borderColor: 'rgba(179, 157, 219, 0.9)',      // purple secondary color\n        borderWidth: 2,\n      };\n      this.chartOptions.annotation.annotations.push(annotation);\n    }\n  }\n\n  protected onlyDefaultDataPresent() {\n    return this.chartData.length === 1 &&\n        this.chartData[0].label === GraphComponent.DEFAULT_BLANK_DATA_LABEL;\n  }\n\n  /***************************\n   * Legend interactions\n   */\n\n  resetChart() {\n    this.generateChart();\n  }\n\n  focusOnSeries(labeledSeries: LabeledSeries[]) {\n    this.generateChart(labeledSeries);\n  }\n\n  /******************************\n   * Helper functions for tooltipping\n   */\n\n  /**\n   * Finds or creates a HTML element to render the tooltip onto.\n   * @param canvas The Canvas this graph is rendered on\n   * @param uniqueId The unique ID to give to this element. If not provided,\n   *     will use 'chartjs-tooltip' + the chart div ID.\n   */\n  protected findOrCreateTooltipElement(canvas: HTMLElement, uniqueId: string):\n      HTMLElement {\n    const tooltipTag =\n        uniqueId ? uniqueId : 'chartjs-tooltip' + this.chartDivId;\n    let tooltipEl = document.getElementById(tooltipTag);\n    if (!tooltipEl) {\n      tooltipEl = document.createElement('div');\n      tooltipEl.id = tooltipTag;\n      tooltipEl.classList.add('chartjs-tooltip');\n      tooltipEl.innerHTML = '<table></table>';\n      canvas.parentNode.appendChild(tooltipEl);\n    }\n    return tooltipEl;\n  }\n\n  /**\n   * Gets the tooltip text for the given context.\n   * @param tooltipContext The tooltip context passed into the tooltip\n   *     callback\n   */\n  private getTooltipInnerHtml(tooltipContext: any): string {\n    // We squish together all points at the same timestamp preemptively\n    // in our tooltip creation so that we just find the index of the\n    // tooltip based on the first point's x-value.\n    const xValue = tooltipContext.dataPoints[0].label;\n\n    const timestampKey = DateTime.fromISO(xValue).toMillis().toString();\n    // Our data class may provide a tooltip key function that will\n    // get the correct identifier from the data point. If it does,\n    // we'll use that, but by default, the key is the timestamp\n    // of the data point.\n    const keyToUse = this.data.tooltipKeyFn ?\n        this.data.tooltipKeyFn(tooltipContext) :\n        timestampKey;\n\n    // If something bad happens and we don't have a tooltip for the\n    // key, return a generic tooltip with the value.\n    let tooltipText;\n    if (!this.data.tooltipMap || !this.data.tooltipMap.has(keyToUse)) {\n      tooltipText =\n          new StandardTooltip(\n              [], undefined,\n              this.data instanceof LineGraphData ? this.data.unit : '')\n              .getTooltip(undefined, this.sanitizer);\n    } else {\n      tooltipText = this.data.tooltipMap.get(keyToUse);\n    }\n    return tooltipText;\n  }\n\n  /*************************\n   * Helper functions for other chart options\n   */\n  protected generateXAxis(): ChartXAxe {\n    return {\n      id: GraphComponent.X_AXIS_ID,\n      type: 'time',\n      gridLines: {display: true, drawOnChartArea: false},\n      time: {\n        // This sets the bounds of the x-axis. The default values of 0 and 10\n        // are nonsensical but necessary since the graph is first rendered\n        // before dateRange is bound.\n        min: this.dateRange ? this.dateRange.start.toISO() :\n                              DateTime.utc().toISO(),\n        max: this.dateRange ? this.dateRange.end.toISO() :\n                              DateTime.utc().toISO(),\n        // If we're showing fewer than three days, go for the hour axis labels;\n        // otherwise go with by-day axis labels.\n        unit: this.dateRange && (this.dateRange.length('day') > 3) ? 'day' :\n                                                                     'hour',\n        displayFormats: {\n          hour: 'MM/DD H:mm',\n          day: 'MM/DD',\n        }\n      },\n      ticks: {\n        // Only show as many tick labels will fit neatly on the axis.\n        autoSkip: true,\n        display: true\n      },\n      scaleLabel: {fontFamily: 'Work Sans'}\n    };\n  }\n\n  private generateYAxis(): ChartYAxe {\n    return {\n      id: GraphComponent.Y_AXIS_ID,\n      position: 'left',\n      // Show tick marks but not grid lines.\n      gridLines: {display: true, drawOnChartArea: false},\n      scaleLabel: {\n        display: true,\n        labelString: '',\n      },\n      ticks: {\n        // We explicitly set the y values to show, so we don't want to use\n        // autoskip.\n        autoSkip: false,\n        callback: (value, index, values) => {\n          if (!this.data || !this.data.precision) {\n            return value;\n          }\n          return (value).toLocaleString('en-us', {\n            minimumFractionDigits: this.data.precision,\n            maximumFractionDigits: this.data.precision\n          });\n        }\n      }\n    };\n  }\n}\n","\n// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\nimport * as Color from 'color';\nimport * as Colors from '../theme/verily_colors';\n/**\n * Represents how a concept will be displayed in a legend, with a label, fill\n * color, and outline color.\n */\nexport class LegendInfo {\n  private static colorIdx = 0;\n  constructor(\n      readonly label: string, readonly fill?: Color, readonly outline?: Color) {\n    let tempColor: Color = fill;\n    if (!fill) {\n      tempColor = Colors.getDataColors()[LegendInfo.colorIdx];\n      LegendInfo.colorIdx =\n          (LegendInfo.colorIdx + 1) % Colors.getDataColors().length;\n    }\n    this.fill = tempColor;\n    this.outline = outline ? outline : tempColor;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef, Input} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ChartPoint} from 'chart.js';\nimport {DateTime} from 'luxon';\nimport {ResourceCodeGroup} from 'src/app/clinicalconcepts/resource-code-group';\nimport {LineGraphData} from 'src/app/graphdatatypes/linegraphdata';\nimport {ABNORMAL} from 'src/app/theme/verily_colors';\n\nimport {GraphComponent} from '../graph/graph.component';\nimport {LegendInfo} from '../legend-info';\n\n@Component({\n  selector: 'app-linegraph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [\n    {provide: GraphComponent, useExisting: forwardRef(() => LineGraphComponent)}\n  ]\n})\nexport class LineGraphComponent extends GraphComponent<LineGraphData> {\n  @Input() showTicks: boolean;\n\n  constructor(readonly sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n\n  prepareForChartConfiguration() {\n    if (this.data.yAxisDisplayBounds) {\n      // We only ever have one y-axis so it's safe to work only on the 0th\n      // subscript here.\n      // Calculate the data range and add a bit of padding at top and bottom\n      // (unless the bottom is zero or the top is 100--those might be\n      // percentages). This reasonably ensures that there's no cropping where\n      // the normal bound labels would get cut off.\n      this.adjustChartYScales(this.data.yAxisDisplayBounds);\n    }\n  }\n\n  adjustGeneratedChartConfiguration() {\n    // We have to wait until after the data loads up into the graph to iterate\n    // over the points and adjust their coloring based on the normal range.\n    this.addYNormalRange();\n  }\n\n  /**\n   * Adds y normal ranges to the graph and colors points the designated\n   * \"abnormal\" color if they fall outside the normal range.\n   */\n  private addYNormalRange() {\n    let yDisplayBounds = this.data.yAxisDisplayBounds;\n    // Only LineGraphData has y normal bounds.\n    if (!(this.data instanceof LineGraphData)) {\n      return;\n    }\n\n    if (this.data.series.length === 1) {\n      // Some things are only valid if there are y-axis normal bounds. We\n      // also only show normal bounds if there's one data series on the\n      // axis, and all normal bounds for the current date range are the same.\n      // These customizations are based on this.data, which is a type\n      // specific for LineGraphData, and could not be generalized in the\n      // abstract GraphCard class.\n      let dateTimesInRange = [];\n      let firstNormalRange: [number, number];\n      if (this.data.series[0].normalRanges) {\n        dateTimesInRange = Array.from(this.data.series[0].normalRanges.keys())\n                               .filter(date => this.dateRange.contains(date));\n        firstNormalRange = dateTimesInRange.length > 0 ?\n            this.data.series[0].normalRanges.get(dateTimesInRange[0]) :\n            undefined;\n      }\n      if (firstNormalRange) {\n        let differentNormalRanges = false;\n        for (const time of dateTimesInRange) {\n          const currNormalRange = this.data.series[0].normalRanges.get(time);\n          if (currNormalRange[0] !== firstNormalRange[0] ||\n              currNormalRange[1] !== firstNormalRange[1]) {\n            differentNormalRanges = true;\n          }\n        }\n        // If all normal ranges associated with points in the current date\n        // range are the same, then add the region to the chart, and adjust\n        // display bounds accordingly.\n        if (!differentNormalRanges) {\n          this.addGreenRegion(firstNormalRange);\n          yDisplayBounds = [\n            Math.min(yDisplayBounds[0], firstNormalRange[0]),\n            Math.max(yDisplayBounds[1], firstNormalRange[1])\n          ];\n          // Color points that fall outside of their respective normal ranges.\n          for (let i = 0; i < this.data.series.length; i++) {\n            const chartjsSeries = this.chartData[i];\n            const labeledSeries = this.data.series[i];\n            if (labeledSeries.normalRanges) {\n              this.colorAbnormalPoints(\n                  chartjsSeries, firstNormalRange, labeledSeries.legendInfo);\n            }\n          }\n        }\n      }\n    }\n    if (this.data.resourceGroup && this.data.resourceGroup.displayBounds) {\n      yDisplayBounds = this.getDisplayBounds(\n          yDisplayBounds[0], yDisplayBounds[1], this.data.resourceGroup);\n    }\n\n    this.adjustChartYScales(yDisplayBounds);\n  }\n\n  private adjustChartYScales(yDisplayBounds: [number, number]) {\n    const padding = (yDisplayBounds[1] - yDisplayBounds[0]) * 0.25;\n    this.chartOptions.scales.yAxes[0].ticks.min = yDisplayBounds[0] - padding;\n    this.chartOptions.scales.yAxes[0].ticks.max = yDisplayBounds[1] === 100 ?\n        yDisplayBounds[1] :\n        yDisplayBounds[1] + padding;\n    this.chartOptions.scales.yAxes[0].afterBuildTicks = (scale) => {\n      if (this.data && this.data.yTicks) {\n        scale.ticks = (this.data.yTicks.length === 1) ?\n            LineGraphData.getYTicks(yDisplayBounds[0], yDisplayBounds[1]) :\n            this.data.yTicks;\n      }\n    };\n  }\n\n\n  private getDisplayBounds(\n      minInSeries: number, maxInSeries: number,\n      resourceCodeGroup: ResourceCodeGroup): [number, number] {\n    let yAxisDisplayMin;\n    let yAxisDisplayMax;\n    if (resourceCodeGroup.forceDisplayBounds) {\n      // We use the provided display bounds by default, regardless of the\n      // bounds of the data.\n      yAxisDisplayMin = resourceCodeGroup.displayBounds[0];\n      yAxisDisplayMax = resourceCodeGroup.displayBounds[1];\n    } else {\n      // We use the provided display bounds as the y-axis display min and max,\n      // unless the calculated minimum and maximum of the data span a smaller\n      // range.\n\n      // We choose the provided min bound if it is larger than the min of the\n      // data, to cut off abnormal values.\n      yAxisDisplayMin = (resourceCodeGroup.displayBounds[0] >= minInSeries) ?\n          resourceCodeGroup.displayBounds[0] :\n          minInSeries;\n      // We choose the provided max bound if it is smaller than the max of the\n      // data, to cut off abnormal values.\n      yAxisDisplayMax = (resourceCodeGroup.displayBounds[1] <= maxInSeries) ?\n          resourceCodeGroup.displayBounds[1] :\n          maxInSeries;\n    }\n    return [yAxisDisplayMin, yAxisDisplayMax];\n  }\n\n\n  /**\n   * Draws a green box spanning the entire x-axis and covering y axis normal\n   * range. Also puts descriptive labels at the top and bottom of the range.\n   * @param yNormalBounds The bounds of the y range considered normal.\n   */\n  private addGreenRegion(yNormalBounds: [number, number]) {\n    const normalRegionAnnotation = {\n      // Show the y-bounds underneath the graph points.\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      yMin: yNormalBounds[0],\n      yMax: yNormalBounds[1],\n      // No x-axis bounds so it extends to cover the whole graph.\n      xScaleID: GraphComponent.X_AXIS_ID,\n      yScaleID: GraphComponent.Y_AXIS_ID,\n      // Color the region light green.\n      backgroundColor: 'rgba(64, 191, 128, 0.15)',\n    };\n\n    // Draw label lines for the high and low bounds of the normal range.\n    const lines = [\n      ['High normal boundary: ', yNormalBounds[1], -8],\n      ['Low normal boundary: ', yNormalBounds[0], 8]\n    ];\n\n    for (const line of lines) {\n      const lbl = line[0];\n      const val = line[1];\n      const yOffsetPx = line[2];\n      const bound = {\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: GraphComponent.Y_AXIS_ID,\n        value: val,\n        borderColor: 'rgba(64, 191, 128, 1)',\n        borderWidth: 2,\n        label: {\n          enabled: true,\n          // Clear background color.\n          backgroundColor: 'rgba(0,0,0,0.0)',\n          // Black text for label.\n          fontColor: 'rgba(0, 0, 0, 0.8)',\n          fontFamily: 'Work Sans',\n          content: lbl + val.toString() + ' ' + this.data.unit,\n          // Shift the text above or below the line, and to the right side of\n          // the axis.\n          position: 'right',\n          yAdjust: yOffsetPx\n        }\n      };\n\n      this.chartOptions.annotation.annotations.push(bound);\n    }\n    this.chartOptions.annotation.annotations.push(normalRegionAnnotation);\n  }\n\n  /**\n   * Colors the point the default series color if it's in the normal range,\n   * or the designated \"abnormal\" color if it's outside of the normal range.\n   *\n   * @param series The data series to color points for.\n   * @param yNormalBounds The bounds of what should be considered normal.\n   * @param seriesLegend The legend info for the series we're working with.\n   */\n  private colorAbnormalPoints(\n      series: any, yNormalBounds: [number, number], seriesLegend: LegendInfo) {\n    const pointBackgroundColors = new Array<string>();\n    const pointBorderColors = new Array<string>();\n\n    // Highlight the points that are outside of the normal range, or that\n    // are marked as abnormal.\n    const allAbnormalPoints =\n        this.data.series.map(s => s.abnormalCoordinates)\n            .reduce(\n                (p, c) => new Set([...Array.from(p), ...Array.from(c)]),\n                new Set());\n    for (let pt of series.data) {\n      // pt could also be a number here, so we constrain it to when it's a\n      // ChartPoint. For some reason Typescript doesn't like it when we do a\n      // test to see if pt is an instanceof ChartPoint so checking for the\n      // y-attribute is a workaround.\n      if (pt.hasOwnProperty('y')) {\n        pt = pt as ChartPoint;\n        const outsideOfNormalBounds = yNormalBounds &&\n            (pt.y < yNormalBounds[0] || pt.y > yNormalBounds[1]);\n        const inAbnormalSet = allAbnormalPoints.has([pt.x, pt.y]);\n\n        if (outsideOfNormalBounds || inAbnormalSet) {\n          pointBackgroundColors.push(seriesLegend.fill.rgb().string());\n          pointBorderColors.push(ABNORMAL.rgb().string());\n        } else {\n          pointBackgroundColors.push(seriesLegend.fill.rgb().string());\n          pointBorderColors.push(seriesLegend.outline.rgb().string());\n        }\n        series.pointBackgroundColor = pointBackgroundColors;\n        series.pointBorderColor = pointBorderColors;\n      }\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {GraphComponent} from '../graph/graph.component';\nimport {StepGraphComponent} from '../stepgraph/stepgraph.component';\n\n@Component({\n  selector: 'app-microbio-graph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => MicrobioGraphComponent)\n  }]\n})\nexport class MicrobioGraphComponent extends StepGraphComponent {\n  constructor(sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n\n  prepareForChartConfiguration() {\n    super.prepareForChartConfiguration();\n    // Make the points a little bigger for microbio series since there is info\n    // encoded in their point styling.\n    for (const series of this.chartData) {\n      series.pointRadius = 5;\n      series.pointBorderWidth = 2;\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {GraphComponent} from '../graph/graph.component';\nimport {LineGraphComponent} from '../linegraph/linegraph.component';\n\n@Component({\n  selector: 'app-scatterplot',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => ScatterplotComponent)\n  }]\n})\nexport class ScatterplotComponent extends LineGraphComponent {\n  constructor(sanitizer: DomSanitizer) {\n    super(sanitizer);\n    this.chartTypeString = 'scatter';\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MicrobioGraphData} from 'src/app/graphdatatypes/microbiographdata';\nimport * as wordwrap from 'wordwrap';\n\nimport {StepGraphData} from '../../graphdatatypes/stepgraphdata';\nimport {GraphComponent} from '../graph/graph.component';\n\n@Component({\n  selector: 'app-stepgraph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [\n    {provide: GraphComponent, useExisting: forwardRef(() => StepGraphComponent)}\n  ]\n})\nexport class StepGraphComponent extends\n    GraphComponent<StepGraphData|MicrobioGraphData> {\n  constructor(readonly sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n  /**\n   * The maximum characters for a y-axis tick label.\n   */\n  readonly Y_AXIS_TICK_MAX_LENGTH = 15;\n\n  /**\n   * Adjusts the y-axis configuration for the chart.\n   */\n  prepareForChartConfiguration() {\n    this.chartOptions.scales.yAxes[0].type = 'category';\n    this.chartOptions.scales.yAxes[0].gridLines = {\n      display: true,\n      drawOnChartArea: true\n    };\n\n    // Set up the data points.\n    const yValuesForEndpoints = [];\n    for (const series of this.data.series) {\n      // Since the categorical labels may be long, we truncate the label names.\n      // We also have to re-map the coordinates to the truncated names so\n      // that they may be plotted correctly along the categorical axis.\n      series.coordinates.forEach(pt => {\n        const lines = wordwrap(this.Y_AXIS_TICK_MAX_LENGTH)(pt[1]).split('\\n');\n        const truncatedLabel = lines[0] + (lines.length > 1 ? '...' : '');\n        yValuesForEndpoints.push(truncatedLabel);\n        pt[1] = truncatedLabel;\n      });\n    }\n    let allLabels = Array.from(new Set(yValuesForEndpoints));\n    // Show the labels alphabetically along the y-axis.\n    allLabels = allLabels.sort();\n    // Add blank labels to the top and bottom of the graph to add some padding.\n    allLabels.push('\\t');\n    allLabels.unshift('\\t');\n\n    this.chartOptions.scales.yAxes[0]['labels'] = allLabels;\n  }\n  adjustGeneratedChartConfiguration() {}\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as d3 from 'd3';\nimport {Duration} from 'luxon';\nimport {AnnotatedAdministration, MedicationAdministration} from 'src/app/fhir-data-classes/medication-administration';\n\nimport {MedicationOrder} from '../../fhir-data-classes/medication-order';\nimport {Tooltip} from '../tooltips/tooltip';\n\n/**\n * Makes a tooltip for a medication order that lists the order's first and last\n * doses in a table.\n */\nexport class MedicationTooltip extends Tooltip<MedicationOrder> {\n  getTooltip(order: MedicationOrder, sanitizer: DomSanitizer): string {\n    const medication = order.label;\n    const firstDose =\n        Tooltip.formatTimestamp(order.firstAdministration.timestamp);\n    const lastDose =\n        Tooltip.formatTimestamp(order.lastAdmininistration.timestamp);\n    const dosageInstruction = order.dosageInstruction;\n    const table = Tooltip.createNewTable();\n    Tooltip.addHeader(medication, table, sanitizer);\n    Tooltip.addRow(table, ['First Dose', firstDose], sanitizer);\n    Tooltip.addRow(table, ['Last Dose', lastDose], sanitizer);\n    Tooltip.addRow(\n        table, ['Dosage Instructions', dosageInstruction], sanitizer);\n    return table.outerHTML;\n  }\n}\n\n/**\n * Makes a tooltip for a medication administration that shows its dose\n * as well as the time since the last dose.\n */\nexport class MedicationAdministrationTooltip extends\n    Tooltip<AnnotatedAdministration[]> {\n  getTooltip(\n      administrations: AnnotatedAdministration[],\n      sanitizer: DomSanitizer): string {\n    const timestamp = administrations[0].medAdministration.timestamp;\n    const table = Tooltip.createNewTable();\n    for (const administration of administrations) {\n      Tooltip.addHeader(\n          Tooltip.formatTimestamp(timestamp) + ': Dose ' +\n              administration.doseInOrder + ' of ' +\n              administration.medAdministration.rxNormCode.label,\n          table, sanitizer, 3);\n      Tooltip.addRow(table, ['', 'Time', 'Dose'], sanitizer);\n      Tooltip.addRow(\n          table,\n          [\n            'This dose',\n            Tooltip.formatTimestamp(administration.medAdministration.timestamp),\n            this.formatDosage(administration.medAdministration)\n          ],\n          sanitizer);\n\n      if (administration.previousDose) {\n        const timestampDifference: Duration =\n            administration.medAdministration.timestamp.diff(\n                administration.previousDose.medAdministration.timestamp);\n\n        const doseDiffText =\n            Tooltip.formatTimestamp(\n                administration.previousDose.medAdministration.timestamp) +\n            '<br>(' + timestampDifference.toFormat('h:m') + ' after dose ' +\n            administration.previousDose.doseInOrder + ')';\n\n        Tooltip.addRow(\n            table,\n            [\n              'Previous dose', doseDiffText,\n              this.formatDosage(administration.previousDose.medAdministration)\n            ],\n            sanitizer);\n      }\n    }\n    return table.outerHTML;\n  }\n\n  private formatDosage(administration: MedicationAdministration) {\n    return d3.format(',')(administration.dosage.quantity) + ' ' +\n        administration.dosage.unit;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {AnnotatedDiagnosticReport, DiagnosticReportStatus} from 'src/app/fhir-data-classes/diagnostic-report';\n\nimport {Tooltip} from '../tooltips/tooltip';\n\n/*\n * This class makes a tooltip for a DiagnosticReport that applies to all points\n * charted from the same report. It lists the time of the report, the report\n * status, as well as all results contained in the report.\n */\nexport class MicrobioTooltip extends Tooltip<AnnotatedDiagnosticReport> {\n  getTooltip(\n      annotatedReport: AnnotatedDiagnosticReport,\n      sanitizer: DomSanitizer): string {\n    const status = DiagnosticReportStatus[annotatedReport.report.status];\n    const results = annotatedReport.report.results;\n    const timestamp = annotatedReport.timestamp;\n\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(timestamp, table, sanitizer);\n    Tooltip.addRow(table, ['Status', status], sanitizer);\n    const spacerRow = table.insertRow();\n    spacerRow.insertCell();\n    Tooltip.addHeader('Results Contained', table, sanitizer);\n    for (const result of results) {\n      Tooltip.addRow(\n          table, [result.display, result.interpretation.display], sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'd3';\nimport {DateTime} from 'luxon';\nimport {AnnotatedObservation} from 'src/app/fhir-data-classes/annotated-observation';\n\nimport {Observation} from '../../fhir-data-classes/observation';\n\nimport {Tooltip} from './tooltip';\n\n/*\n * This class makes a tooltip for a list of Observations containing discrete, or\n * qualitative, values rather than quantitative results. The list of\n * Observations should all have the same timestamp.\n */\nexport class DiscreteObservationTooltip extends Tooltip<Observation[]> {\n  getTooltip(observations: Observation[], sanitizer: DomSanitizer): string {\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(observations[0].timestamp, table, sanitizer);\n    for (const obs of observations) {\n      Tooltip.addRow(table, [obs.label, obs.result], sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n\n/**\n * Makes a generic tooltip for an AnnotatedObservation with rows for each of\n * its annotation values.\n */\nexport class GenericAnnotatedObservationTooltip extends\n    Tooltip<AnnotatedObservation> {\n  constructor(private addTimestampRow: boolean, private color: Color) {\n    super();\n  }\n\n  /**\n   * Returns the HTML for a generic tooltip.\n   * @param observation The AnnotatedObservation used to generate the tooltip\n   * @param sanitizer A DOM sanitizer\n   * @returns If the observation has annotations, a HTML table with the\n   *     annotation values. If there are no annotations, will return undefined.\n   */\n  getTooltip(observation: AnnotatedObservation, sanitizer: DomSanitizer): string\n      |undefined {\n    const table = Tooltip.createNewTable();\n    if (this.addTimestampRow) {\n      Tooltip.addTimeHeader(\n          observation.observation.timestamp, table, sanitizer);\n    }\n\n    Tooltip.addRow(\n        table,\n        [\n          observation.label,\n          observation.observation.value.value + ' ' +\n              observation.observation.unit\n        ],\n        sanitizer, this.color);\n    for (const annotation of observation.annotationValues) {\n      Tooltip.addRow(table, annotation, sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n\n\n/**\n * Makes a generic tooltip for an AnnotatedObservation with rows for each of\n * its annotation values.\n */\nexport class GenericAbnormalTooltip extends\n    Tooltip<{[key: string]: number | string}> {\n  constructor(private addTimestampRow: boolean, private color: Color) {\n    super();\n  }\n\n  /**\n   * Returns the HTML for a generic tooltip.\n   * @param params The parameters necessary for the AbnormalTooltip text. It\n   *     should contain a timestamp field, a value field, a label field, and a\n   *     unit field.\n   * @param sanitizer A DOM sanitizer\n   * @returns If the observation has annotations, a HTML table with the\n   *     annotation values. If there are no annotations, will return undefined.\n   */\n  getTooltip(params: {[key: string]: number|string}, sanitizer: DomSanitizer):\n      string|undefined {\n    const table = Tooltip.createNewTable();\n    const millis: any = params['timestamp'];\n    const timestamp = DateTime.fromMillis(millis);\n    if (this.addTimestampRow) {\n      Tooltip.addTimeHeader(timestamp, table, sanitizer);\n    }\n\n    Tooltip.addHeader('Caution: value outside normal range', table, sanitizer);\n    return table.outerHTML;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {SecurityContext} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'd3';\nimport {DateTime} from 'luxon';\n\n/*\n * This base class contains useful helper methods used while making a custom\n * tooltip for a c3 chart, including adding a row to the table, resetting the\n * table, and adding a header.\n *\n * This is functionally a static class, but Typescript doesn't allow for\n * abstract static functions. We make all tooltip classes inherit from Tooltip\n * so that they must implement the getTooltip function.\n *\n * @param T The type of data that the tooltip is derived from.\n */\nexport abstract class Tooltip<T> {\n  static createNewTable(): HTMLTableElement {\n    const table: HTMLTableElement = document.createElement('table');\n    table.setAttribute('class', 'c3-tooltip');\n    return table;\n  }\n\n  static addTimeHeader(\n      timestamp: DateTime, table: HTMLTableElement, sanitizer: DomSanitizer,\n      colSpan = 2) {\n    Tooltip.addHeader(\n        Tooltip.formatTimestamp(timestamp), table, sanitizer, colSpan);\n  }\n\n  static formatTimestamp(timestamp: DateTime) {\n    return timestamp.toLocaleString() + ' ' +\n        timestamp.toLocal().toLocaleString(DateTime.TIME_24_SIMPLE);\n  }\n\n  static addHeader(\n      content: string, table: HTMLTableElement, sanitizer: DomSanitizer,\n      colSpan = 2) {\n    // Header row\n    const row = table.insertRow();\n    const headerCell = document.createElement('th');\n    row.appendChild(headerCell);\n    headerCell.colSpan = colSpan;\n    headerCell.innerHTML = sanitizer.sanitize(SecurityContext.HTML, content);\n  }\n\n  static addRow(\n      table: HTMLTableElement, cellText: string[], sanitizer: DomSanitizer,\n      color?: Color) {\n    const row = table.insertRow();\n    for (let i = 0; i < cellText.length; i++) {\n      const cell1 = row.insertCell();\n      if (i === 0) {\n        cell1.className = 'name';\n        if (color) {\n          cell1.appendChild(Tooltip.makeColorSwatch(color));\n          const div = document.createElement('div');\n          div.setAttribute('style', 'display: inline-block;');\n          div.innerHTML = sanitizer.sanitize(SecurityContext.HTML, cellText[i]);\n          cell1.appendChild(div);\n          continue;\n        }\n      } else {\n        cell1.className = 'value';\n      }\n      cell1.innerHTML = sanitizer.sanitize(SecurityContext.HTML, cellText[i]);\n    }\n  }\n\n  static makeColorSwatch(color: Color): HTMLSpanElement {\n    const colorSpan: HTMLSpanElement = document.createElement('span');\n    colorSpan.setAttribute(\n        'style',\n        'background-color: ' + color.toString() +\n            '; display: inline-block; height: 10px; width: 10px;');\n    return colorSpan;\n  }\n\n  abstract getTooltip(inputValue: T, sanitizer: DomSanitizer): string;\n}\n\n/**\n * This is a generic tooltip for a data point on the graph. It just takes in\n * the data points C3 provides to the tooltip function, then returns a table\n * with a header of the timestamp and a row for each included point.\n * The left hand side of each row is the series label. The right hand side of\n * each row is the y-value.\n */\nexport class StandardTooltip extends Tooltip<any> {\n  constructor(\n      private dataPoints: any[], private color: Function, private unit = '') {\n    super();\n  }\n\n  getTooltip(unused: any, sanitizer: DomSanitizer): string {\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(\n        DateTime.fromJSDate(new Date(this.dataPoints[0].x)), table, sanitizer);\n\n    for (const pt of this.dataPoints) {\n      Tooltip.addRow(\n          table, [pt.name, pt.value + ' ' + this.unit], sanitizer,\n          this.color(pt));\n    }\n    return table.outerHTML;\n  }\n}\n","module.exports = \".stepContent {\\n  margin-bottom: 30px;\\n  margin-top: 10px;\\n  font-size: 20px;\\n}\\n\\n::ng-deep .mat-horizontal-content-container {\\n  padding-bottom: 0px !important;\\n}\\n\\n.stepperButtons {\\n  float: right;\\n}\\n\\n.stepperButtons button {\\n  margin-right: 5px;\\n}\\n\\n::ng-deep .mat-dialog-container {\\n  max-height: -webkit-fill-available !important;\\n}\\n\\nimg {\\n  width: 100%;\\n}\\n\\n.divider {\\n  margin-bottom: 20px;\\n  margin-top: 10px;\\n  border-top-width: 5px !important;\\n}\"","module.exports = \"<div style=\\\"float: right;\\\" mat-dialog-actions>\\n  <button mat-icon-button (click)=\\\"onExit()\\\">\\n    <mat-icon color=\\\"primary\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-horizontal-stepper [linear]=\\\"false\\\" #stepper>\\n  <!-- keep icons as numbers during edit-->\\n  <ng-template matStepperIcon=\\\"edit\\\" let-index=\\\"index\\\">\\n    {{index +1}}\\n  </ng-template>\\n  <mat-step label=\\\"Intro\\\">\\n    <div class=\\\"stepContent\\\">\\n      MedTimeLine intro screen\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Changing the dates\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          Change the dates of the data displayed on the chart using datepickers.\\n        </div>\\n        <img src=\\\"assets/images/datepicker1.png\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the datepicker icon to open a calendar.\\n        </div>\\n        <img src=\\\"assets/images/datepicker2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Custom TimeLine\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        The Timeline feature allows you to enter custom events.\\n      </div>\\n      <div>\\n        <div>\\n          Click anywhere on the timeline to add an event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          By default, descriptions for events are hidden. Click on the expander to reveal the description.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the pencil icon to edit the event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline3.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the trashcan icon to delete the event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline4.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Charts\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          For charts with legends, hover over a series to highlight that series on the chart. Click on a series to hide\\n          it from the chart.\\n        </div>\\n        <img src=\\\"assets/images/chartUpClose1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          The green highlighted area on some charts represents a \\\"normal range\\\" indicated in the standard.\\n        </div>\\n        <img src=\\\"assets/images/chartUpClose2.png\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Card Container\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        The card container displays all charts selected.\\n      </div>\\n      <div>\\n        <div>\\n          Click and drag a chart to rearrange on the page.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the trashcan icon to remove a card from the page. Press \\\"Undo\\\" at the bottom of the page to restore.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          You can add cards to the top of the page using the toolbar.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer3.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Save Snapshot\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          The \\\"Save Snapshot\\\" button allows you to save a static image of the current page to the patient record.\\n        </div>\\n        <img src=\\\"assets/images/saveSnapshot.gif\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button (click)=\\\"onExit()\\\">Close</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\"","import {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-help-dialog',\n  templateUrl: './help-dialog.component.html',\n  styleUrls: ['./help-dialog.component.css']\n})\n\n/**\n * This class holds the logic and template for a tutorial stepper dialog.\n * TODO(b/122670756): Change wording and pictures in the tutorial.\n */\nexport class HelpDialogComponent {\n  constructor(public dialogRef: MatDialogRef<HelpDialogComponent>) {}\n\n  onExit() {\n    this.dialogRef.close();\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {DateTime, Interval} from 'luxon';\nimport {FhirResourceType} from 'src/constants';\n\nimport {environment} from '../environments/environment';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from './clinicalconcepts/loinc-code';\nimport {ResourceCode} from './clinicalconcepts/resource-code-group';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation, ObservationStatus} from './fhir-data-classes/observation';\nimport {FhirService} from './fhir.service';\n\n@Injectable()\nexport class MockFhirService extends FhirService {\n  errorMessage: string;\n\n  private readonly assetPath = './assets/' + environment.mockDataFolder + '/';\n  private readonly allFilePaths =\n      environment.mockDataFiles.map(x => this.assetPath + x + '.json');\n\n  private readonly loincMap = new Map<LOINCCode, Observation[]>();\n  private readonly medicationAdministrationMapByCode =\n      new Map<RxNormCode, MedicationAdministration[]>();\n  private readonly medicationAdministrationMapByOrderId =\n      new Map<string, MedicationAdministration[]>();\n  private readonly medicationOrderMap = new Map<string, MedicationOrder[]>();\n  private readonly diagnosticReportMap =\n      new Map<ResourceCode, DiagnosticReport[]>();\n  private readonly encounters = new Array<Encounter>();\n  private readonly allDataPromise: Promise<void[]>;\n\n  private constructResourceMap<K, V>(\n      json: any, mapToUpdate: Map<K, V[]>, constructorFn: (any) => V,\n      getCodesFn: (value: V) => K[]) {\n    try {\n      const obj = constructorFn(json.resource);\n      const uniqueCodes = Array.from(new Set(getCodesFn(obj)));\n      for (const code of uniqueCodes) {\n        let existing = mapToUpdate.get(code);\n        if (!existing) {\n          existing = [];\n        }\n        existing.push(obj);\n        mapToUpdate.set(code, existing);\n      }\n    } catch (err) {\n      // tslint:disable-next-line:no-console\n      console.debug(err);\n    }\n  }\n\n  private mapAllData(): Promise<void[]> {\n    return Promise.all(this.allFilePaths.map(filePath => {\n      return this.http.get(filePath).toPromise<any>().then(data => {\n        try {\n          let entry = data.entry;\n          // Sometimes data comes to us in bundles, and then we want to flatten\n          // it into a series of resources.\n          if (data.length > 0) {\n            entry = data.map(bundle => bundle.entry).flat();\n          }\n          for (const json of entry) {\n            const resourceType = json.resource.resourceType;\n            if (resourceType === FhirResourceType.Observation) {\n              this.constructResourceMap(\n                  json, this.loincMap, (x: any) => new Observation(x),\n                  (obs) => obs.codes);\n            }\n\n            if (resourceType === FhirResourceType.MedicationAdministration) {\n              this.constructResourceMap(\n                  json, this.medicationAdministrationMapByCode,\n                  (d) => new MedicationAdministration(d),\n                  (admin) => [admin.rxNormCode]);\n\n              this.constructResourceMap(\n                  json, this.medicationAdministrationMapByOrderId,\n                  (d) => new MedicationAdministration(d),\n                  (admin) => [admin.medicationOrderId]);\n            }\n\n            if (resourceType === FhirResourceType.MedicationOrder) {\n              this.constructResourceMap(\n                  json, this.medicationOrderMap, (d) => new MedicationOrder(d),\n                  (order) => [order.orderId]);\n            }\n\n            if (resourceType === FhirResourceType.Encounter) {\n              const encounter = new Encounter(json.resource);\n              this.encounters.push(encounter);\n            }\n\n            if (resourceType === FhirResourceType.DiagnosticReport) {\n              this.constructResourceMap(\n                  json, this.diagnosticReportMap,\n                  (d) => new DiagnosticReport(d),\n                  (report) =>\n                      report.results.map(x => x.codes)\n                          .reduce(\n                              (prev: ResourceCode[], curr: ResourceCode[]) => {\n                                return prev.concat(curr);\n                              },\n                              []));\n            }\n          }\n        } catch {\n          console.warn(\n              'Trouble reading file: ' + filePath +\n              '. Continuing on since this is the mock server.');\n        }\n      });\n    }));\n  }\n\n  constructor(private http: HttpClient) {\n    super();\n    this.allDataPromise = this.mapAllData();\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If set, the number of observations that should be\n   *     queried for\n   */\n  getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]> {\n    return this.allDataPromise.then(\n        map =>\n            this.getObservations(this.loincMap, code, dateRange, limitCount));\n  }\n\n  private getObservations(\n      map: Map<LOINCCode, Observation[]>, code: LOINCCode, dateRange: Interval,\n      limitCount = 0) {\n    return map.has(code) ?\n        map.get(code)\n            .filter(obs => dateRange.contains(obs.timestamp))\n            .filter(obs => obs.status !== ObservationStatus.EnteredInError)\n            .slice(0, limitCount ? limitCount : undefined) :\n        [];\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * @param code The RxNormCode codes for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount Unused in this implementation, as this is just a\n   *     time-saving feature for HTTP calls.\n   */\n  getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]> {\n    return this.allDataPromise.then(\n        x => {return this.medicationAdministrationMapByCode.has(code) ?\n                  this.medicationAdministrationMapByCode.get(code)\n                      .filter(obs => dateRange.contains(obs.timestamp))\n                      .slice(0, limitCount ? limitCount : undefined) :\n                  []});\n  }\n\n  /**\n   * Returns arbitrary orders for current mock medications.\n   * @param id The id to pull the order from.\n   * TODO(b/117438708): Add more mock medication orders to JSON files for\n   * different medications requested.\n   */\n  getMedicationOrderWithId(id: string): Promise<MedicationOrder> {\n    return this.allDataPromise.then(\n        x => this.medicationOrderMap.has(id) ?\n            this.medicationOrderMap.get(id)[0] :\n            undefined);\n  }\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]> {\n    return this.allDataPromise.then(\n        x => this.medicationAdministrationMapByOrderId.get(id));\n  }\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  getEncountersForPatient(dateRange: Interval): Promise<Encounter[]> {\n    return this.allDataPromise.then(\n        x => this.encounters.filter(\n            encounter => dateRange.intersection(encounter.period) !== null &&\n                encounter.period.start >= DateTime.utc().minus({years: 1})));\n  }\n\n  /**\n   * Prints the current HTML of the graphs rendered to the console.\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written for.\n   */\n  saveStaticNote(html: string, date: string) {\n    console.log('Save to note button clicked for mock data for date: ' + date);\n    console.log(html);\n  }\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range, whose contained Observations are in the codeGroup\n   * provided.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in\n   *     this date range.\n   */\n  getDiagnosticReports(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval,\n      limitCount?: number): Promise<DiagnosticReport[]> {\n    return this.allDataPromise.then(x => {\n      let reports = new Array<DiagnosticReport>();\n      for (const code of codeGroup.resourceCodes) {\n        if (this.diagnosticReportMap.has(code)) {\n          reports = reports.concat(this.diagnosticReportMap.get(code));\n        }\n      }\n      reports\n          .filter(\n              report => report.specimens.map(s => s.type)\n                            .find(specimen => specimen === codeGroup.label) !==\n                  undefined)\n          .slice(0, limitCount ? limitCount : undefined);\n      return reports;\n    });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\nimport {AxisGroup} from './graphtypes/axis-group';\nimport {Encounter} from './fhir-data-classes/encounter';\n\n\n/**\n * This class is a service that communicates the user-selected concepts on the\n * configuration page (SetupComponent) to CardContainerComponent.\n */\n@Injectable({providedIn: 'root'})\n\n// This class is a service that communicates the user-selected concepts on the\n// configuration page (SetupComponent) to CardContainerComponent.\nexport class SetupDataService {\n  /** Which concepts to display. */\n  selectedConcepts: AxisGroup[];\n  /** Which encounters to show in the date picker. */\n  encounters: Encounter[];\n  /**\n   * The first encounter to load into the app. We grab the data using this\n   * encounter's date span.\n   */\n  selectedEncounter: Encounter;\n}\n","module.exports = \"button {\\n  margin-right: 10px;\\n}\\n\\nh3 {\\n  padding: 5px;\\n  margin: 10px;\\n}\\n\\nh1, h2 {\\n  font-family: 'Montserrat', sans-serif;\\n}\\n\\nmat-icon {\\n  padding-top: 20px;\\n  vertical-align: bottom;\\n}\\n\\n.actions {\\n  margin-left: auto;\\n  padding: 20px;\\n}\\n\\n.category {\\n  padding-left: 10px;\\n}\\n\\n.mainSetup {\\n  width: 100%;\\n  padding-top: 20px;\\n  padding-left: 40px;\\n  color: white;\\n  height: 100%;\\n}\\n\\n.conceptOptions {\\n  padding-left: 25px;\\n}\\n\\n::ng-deep .mat-toolbar-row, .mat-toolbar-single-row {\\n  display: -webkit-box;\\n  display: flex;\\n  display: -ms-flexbox;\\n}\\n\\n.defaultBackgroundColor {\\n  background-color: #202020; /* Grey 900 */\\n}\\n\\n.accentBackgroundColor {\\n  /* Deep Purple 800 to Pink 900 */\\n background-image: -webkit-gradient(linear, left top, right top, from(#4527A0) , to(#870D4E));\\n background-image: linear-gradient(to right, #4527A0 , #870D4E);\\n color: white;\\n}\\n\\n::ng-deep  app-setup .mat-form-field-wrapper {\\n  color: white;\\n}\\n\\n::ng-deep app-setup .mat-checkbox-frame {\\n  border-color: white;\\n}\\n\\n::ng-deep app-setup .mat-radio-outer-circle {\\n  border-color: white;\\n}\\n\\n::ng-deep app-setup .mat-checkbox-disabled .mat-checkbox-label {\\n  color: gray;\\n}\\n\\n::ng-deep app-setup .mat-form-field-empty.mat-form-field-label {\\n  color: white;\\n}\\n\\n::ng-deep app-setup .mat-form-field-label {\\n  color:white !important;\\n}\\n\\n::ng-deep app-setup .mat-form-field-underline {\\n  background-color: white !important;\\n}\\n\\n::ng-deep app-setup .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: white !important;\\n}\\n\\n::ng-deep app-setup .mat-form-field-underline {\\n  background-color: white !important;\\n}\\n\\napp-setup .mat-input-placeholder {\\n  color: white;\\n}\\n\"","module.exports = \"<mat-toolbar class=\\\"accentBackgroundColor\\\">\\n  <h1 style=\\\"color: white;\\\">{{uiConstants.INITIAL_CONFIGURATION_HEADER}}</h1>\\n  <div class=\\\"actions\\\">\\n    <button mat-raised-button (click)=\\\"onContinue()\\\" cdkFocusInitial id=\\\"continue\\\">\\n      {{uiConstants.CONTINUE}}\\n    </button>\\n  </div>\\n</mat-toolbar>\\n<div *ngIf=\\\"useDebugger\\\">\\n  <app-debugger></app-debugger>\\n</div>\\n<div class=\\\"defaultBackgroundColor mainSetup\\\">\\n  <div>\\n    <h2>{{uiConstants.WHICH_ENCOUNTER_FIRST}}</h2>\\n    <mat-radio-group>\\n      <div *ngFor=\\\"let encounter of encounters\\\">\\n        <mat-radio-button [value]=\\\"encounter\\\">\\n          {{encounter.period.toFormat('MM/dd/yyyy')}} {{uiConstants.ENCOUNTER}}\\n        </mat-radio-button>\\n      </div>\\n      <div>\\n        <mat-radio-button value=\\\"undefined\\\" [checked]=\\\"true\\\">\\n          {{uiConstants.LAST_SEVEN_DAYS}}\\n        </mat-radio-button>\\n      </div>\\n    </mat-radio-group>\\n  </div>\\n\\n  <div class=\\\"checkboxActions\\\">\\n    <h2>{{uiConstants.WHICH_CONCEPTS_FIRST}}</h2>\\n    <button mat-raised-button (click)=\\\"selectAll()\\\" id=\\\"continue\\\">\\n      {{uiConstants.SELECT_ALL}}\\n    </button>\\n    <button mat-raised-button (click)=\\\"clearAll()\\\" id=\\\"continue\\\">\\n      {{uiConstants.CLEAR_SELECTION}}\\n    </button>\\n  </div>\\n  <form class=\\\"conceptForm\\\">\\n    <mat-form-field class=\\\"conceptFormField\\\">\\n      <input matInput placeholder=\\\"{{uiConstants.SEARCH_FOR_A_CONCEPT}}\\\" [formControl]=\\\"conceptCtrl\\\">\\n      <mat-icon matPrefix>search</mat-icon>\\n    </mat-form-field>\\n    <div *ngFor=\\\"let entry of displayGroupingOptions | async\\\">\\n      <div [style.color]=\\\"entry[0].fill.hsl().string()\\\" class=\\\"category\\\">\\n        <h3>{{entry[0].label}}</h3>\\n      </div>\\n      <div *ngFor=\\\"let element of entry[1].sort(sortResources)\\\" class=\\\"conceptOptions\\\">\\n        <mat-checkbox [(ngModel)]=\\\"checkedConcepts[element.label]\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n          [disabled]=\\\"!codeGroupAvailable.get(element.label)\\\">\\n          {{element.label}} <span class=\\\"grayout\\\"\\n            *ngIf=\\\"!codeGroupAvailable.get(element.label)\\\">{{uiConstants.NO_DATA_PAST_SIX_MOS}}</span>\\n        </mat-checkbox>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"(displayGroupingOptions | async).length === 0\\\" class=\\\"noResults\\\">\\n      {{uiConstants.NO_RESULTS}}\\n    </div>\\n  </form>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatRadioGroup} from '@angular/material/radio';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DateTime, Interval} from 'luxon';\nimport {DeviceDetectorService} from 'ngx-device-detector';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {APP_TIMESPAN, UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {environment} from '../../environments/environment';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeManager} from '../clinicalconcepts/resource-code-manager';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {FhirService} from '../fhir.service';\nimport {AxisGroup} from '../graphtypes/axis-group';\nimport {SetupDataService} from '../setup-data.service';\n\n/**\n * Contains the intial configuration options for the MedTimeLine.\n * Users can choose which concepts to display, or pick the default\n * configuration.\n */\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.css']\n})\nexport class SetupComponent implements OnInit, OnDestroy {\n  readonly allConcepts = new Array<AxisGroup>();\n  readonly checkedConcepts = new Map<string, boolean>();\n  readonly chosenConcepts = new Array<AxisGroup>();\n  readonly useDebugger = environment.useDebugger;\n\n\n  /**\n   * Which encounter to load into the app first.\n   */\n  @ViewChild(MatRadioGroup) selectedEncounter: MatRadioGroup;\n\n  /**\n   * This FormControl monitors changes in the user input typed in the\n   * autocomplete.\n   */\n  readonly conceptCtrl = new FormControl();\n  /**\n   * An Observable of filtered [DisplayGrouping, ResourceCodesForCard[] pairings\n   * based on user input in the autocomplete. Each element of the array contains\n   * a DisplayGrouping and filtered ResourceCodesForCards that belong  to that\n   * DisplayGrouping.\n   */\n  displayGroupingOptions: Observable<Array<[DisplayGrouping, AxisGroup[]]>>;\n\n  /**\n   * An array of DisplayGroupings and AxisGroup that belong to that\n   * grouping.\n   */\n  readonly displayGroupings: Array<[DisplayGrouping, AxisGroup[]]>;\n\n  /**\n   * Holds whether there's any data available for each resource code group.\n   */\n  readonly codeGroupAvailable = new Map<string, boolean>();\n\n  /**\n   * List of times the patient was in the hospital.\n   */\n  encounters: Encounter[];\n\n  /** A string that displays the browser. Used for debugging; to be removed. */\n  browserString = '';\n\n  sortResources = (function(a, b) {\n    return a.label.localeCompare(b.label);\n  });\n\n  ngOnDestroy() {\n    // Pass the selected information through to the setup data service.\n    this.setupDataService.selectedConcepts = this.chosenConcepts;\n    this.setupDataService.encounters = this.encounters;\n    this.setupDataService.selectedEncounter = this.selectedEncounter.value ?\n        this.selectedEncounter.value :\n        Interval.fromDateTimes(DateTime.utc().minus({days: 7}), DateTime.utc());\n  }\n\n  constructor(\n      resourceCodeManager: ResourceCodeManager, private route: ActivatedRoute,\n      private router: Router, private setupDataService: SetupDataService,\n      private fhirService: FhirService,\n      private deviceService: DeviceDetectorService,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {\n    // Set up jut a couple things so we don't have to hold on to them as\n    // unnecessary class variables.\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    /* Load in the concepts to display, flattening them all into a\n     * single-depth array. */\n    this.allConcepts = Array.from(displayGroups.values())\n                           .reduce((acc, val) => acc.concat(val), []);\n\n    this.displayGroupings = Array.from(displayGroups.entries());\n  }\n\n  ngOnInit() {\n    // Watch for changes to the user input on the autocomplete panel.\n    this.displayGroupingOptions = this.conceptCtrl.valueChanges.pipe(\n        startWith(''),  // The autocomplete input starts with nothing typed in.\n        map(concept => concept ? this.filter(concept) :\n                                 this.displayGroupings.slice()));\n\n    for (const concept of this.allConcepts) {\n      this.checkedConcepts[concept.label] = false;\n      const showByDefault =\n          concept.axes.some(axis => axis.resourceGroup.showByDefault);\n      if (showByDefault) {\n        this.checkedConcepts[concept.label] = true;\n      }\n    }\n\n    // Put up a warning if the browser is different than we intend.\n    this.deviceService.getDeviceInfo();\n    this.browserString = 'Browser: ' + this.deviceService.browser +\n        ' version: ' + this.deviceService.browser_version;\n\n    // Retrieve the patient encounters. When they load in asynchronously,\n    // the radio buttons for encounter selection will show up.\n    this.fhirService.getEncountersForPatient(APP_TIMESPAN).then(encounters => {\n      if (encounters.length > 0) {\n        this.encounters = encounters.sort(\n            (a, b) => a.period.start.toMillis() - b.period.start.toMillis());\n      }\n    });\n\n    // Check to see which clinical concepts have any data, and enable/disable\n    // on that basis.\n    this.displayGroupings.forEach(grouping => {\n      const resourceCodes = grouping[1];\n      resourceCodes.forEach(rsc => {\n        rsc.dataAvailableInAppTimeScope().then(available => {\n          if (!available) {\n            this.checkedConcepts[rsc.label] = false;\n          }\n          this.codeGroupAvailable.set(rsc.label, available);\n        });\n      });\n    });\n  }\n\n  /**\n   * The user wishes to continue to the main screen of MedTimeLine, with all\n   * charts selected.\n   */\n  onContinue() {\n    for (const concept of this.allConcepts) {\n      if (this.checkedConcepts[concept.label]) {\n        this.chosenConcepts.push(concept);\n      }\n    }\n    this.router.navigate(['/main'], {skipLocationChange: true});\n  }\n\n  /**\n   * The user wishes to select all concepts.\n   */\n  selectAll() {\n    for (const concept of this.allConcepts) {\n      this.checkedConcepts[concept.label] = true;\n    }\n  }\n\n  /**\n   * The user wishes to clear all select concepts.\n   */\n  clearAll() {\n    for (const concept of this.allConcepts) {\n      this.checkedConcepts[concept.label] = false;\n    }\n  }\n\n  /**\n   * Filter the concepts shown on the autocomplete menu.\n   */\n  filter(concept): any[] {\n    return this.displayGroupings\n        .filter(\n            entry => entry[1].some(\n                codes => codes.label.toLowerCase().indexOf(\n                             concept.toLowerCase()) === 0))\n        .map(function(entry) {\n          const displayGrouping: DisplayGrouping = entry[0];\n          const resourceCodesFiltered = entry[1].filter(\n              codes => codes.label.toLowerCase().indexOf(\n                           concept.toLowerCase()) === 0);\n          return [displayGrouping, resourceCodesFiltered];\n        });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {InjectionToken} from '@angular/core';\nexport let SMART_ON_FHIR_CLIENT = new InjectionToken('SmartOnFhirClient');\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\n/**\n * Encodings of the colors for Verily branding.\n */\n\n// Primary color palette\nexport const GREY_900 = Color('#202020');\nexport const BLACK = Color('#000000');\nexport const BLUE_A400 = Color('#2878FF');\nexport const BLUE_A700 = Color('#2861FF');\nexport const DEEP_PURPLE_600 = Color('#5E35B1');\nexport const DEEP_PURPLE_800 = Color('#4527A0');\nexport const PINK_A700 = Color('#C41061');\nexport const PINK_900 = Color('#870D4E');\nexport const PINK_A400 = Color('#FF1643');\nexport const PINK_A700_DARKER = Color('#D40000');\nexport const BLUE_GREY_100 = Color('#C3D7DB');\nexport const BLUE_GREY_500 = Color('#5F7C8A');\nexport const BLUE_GREY_50 = Color('#EBEEF0');\nexport const WHITE = Color('#FFFFFF');\n\n// Secondary color palette\nexport const CYAN = Color('#00C6EF');\nexport const DEEP_CYAN = Color('#009DB7');\nexport const TURQUOISE = Color('#07796A');\nexport const DEEP_TURQUOISE = Color('#045B4C');\nexport const GREEN = Color('#0D8D39');\nexport const DEEP_GREEN = Color('#056823');\nexport const LIME = Color('#80BA17');\nexport const DEEP_LIME = Color('#668E0E');\nexport const GOLD = Color('#FFB233');\nexport const DEEP_GOLD = Color('#C38419');\nexport const ORANGE = Color('#FF8117');\nexport const DEEP_ORANGE = Color('#C35308');\nexport const CORAL = Color('#FF5052');\nexport const DEEP_CORAL = Color('#C14047');\n\n// Color to indicate a selected item.\nexport const SELECTED = BLUE_GREY_50;\n\nexport const ABNORMAL = PINK_A700_DARKER;\n\n/**\n * Returns all the colors that are acceptable for data points to be plotted in.\n */\nexport function getDataColors(): Color[] {\n  return [GREY_900, BLUE_A700, DEEP_PURPLE_800, PINK_900, GREEN, GOLD];\n}\n","module.exports = \".datePicker {\\n  background-color: white;\\n  padding-top: 20px;\\n}\\n\\n.mat-form-field {\\n  width: 40%;\\n  margin-right: 5%;\\n  margin-left: 5%;\\n}\\n\\n::ng-deep .mat-h2 {\\n  margin-bottom: 0px !important;\\n}\\n\\n/* Remove extra padding below the button. */\\n\\n::ng-deep .mat-mini-fab .mat-button-wrapper {\\n  padding: 0px !important;\\n}\\n\\n::ng-deep .mat-h2 {\\n  margin-bottom: 0px !important;\\n}\\n\\n::ng-deep td.available{\\n  color: black;\\n}\\n\\n::ng-deep td.notInEncounter {\\n  color: grey !important;\\n  opacity: .5;\\n  text-decoration: line-through;\\n}\\n\\n::ng-deep td.inEncounter {\\n  color: #4527A0 !important; /* Deep Purple 800 */\\n  background-color: #e5f3ec;\\n}\\n\\n::ng-deep td.active.available.inEncounter {\\n  color: white !important;\\n}\\n\\ninput {\\n  font-family: 'Work Sans', sans-serif;\\n}\\n\\n/* Change colors of ngx-datepicker to match custom material theme */\\n\\n::ng-deep .ranges button.active {\\n  background-color: #4527A0 !important; /* Deep Purple 800 */\\n}\\n\\n::ng-deep .md-drppicker .btn {\\n  background-color: #4527A0 !important; /* Deep Purple 800 */\\n}\\n\\n::ng-deep td.active.available {\\n  background-color: #4527A0 !important; /* Deep Purple 800 */\\n}\\n\\n.errorIcon {\\n  width: 40px;\\n  height: 40px;\\n  line-height: 40px;\\n  cursor: default;\\n}\\n\"","module.exports = \"<div class=\\\"datePicker\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"mat-h2\\\">\\n  <input type=\\\"button\\\" class=\\\"mat-raised-button\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selected\\\"\\n    [minDate]=\\\"earliestAvailableDate\\\" [maxDate]=\\\"latestAvailableDate\\\" [linkedCalendars]=\\\"true\\\"\\n    [isCustomDate]=\\\"addCustomClass\\\" (datesUpdated)=\\\"datesUpdated($event)\\\" [ranges]=\\\"datePickerRanges\\\"\\n    [alwaysShowCalendars]=\\\"true\\\" [keepCalendarOpeningWithRange]=\\\"true\\\" matTooltip=\\\"{{uiConstants.CHANGE_DATE_RANGE}}\\\" />\\n  <mat-icon *ngIf=\\\"encounterError\\\" class=\\\"errorIcon\\\" matTooltip=\\\"{{uiConstants.BAD_ENCOUNTER_ERROR}}\\\">\\n    warning</mat-icon>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Inject, Input, Output, Renderer2, ViewChild} from '@angular/core';\nimport {DateTime, Duration, Interval} from 'luxon';\nimport * as moment from 'moment';\nimport {DaterangepickerDirective} from 'ngx-daterangepicker-material';\nimport {APP_TIMESPAN, UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {getDaysForIntervalSet} from '../date_utils';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {FhirService} from '../fhir.service';\n\n/**\n * Date range picker for selecting the time span to show in all the charts.\n *\n * There is a lot of messy date conversion in this class. The problem is that\n * we use luxon DateTime for our date handling across this application, but the\n * date range picker only works with Moment.js datetimes. The only format both\n * classes have converters for is JSDate, so we pass dates through that\n * several places.\n */\n@Component({\n  selector: 'app-timeline-controller',\n  templateUrl: './timeline-controller.component.html',\n  styleUrls: ['./timeline-controller.component.css']\n})\nexport class TimelineControllerComponent {\n  @Output() changeDateRange = new EventEmitter<Interval>();\n  @ViewChild(DaterangepickerDirective)\n  pickerDirective: DaterangepickerDirective;\n\n  /**\n   * Holds the encounters for this patient.\n   */\n  @Input() encounters: Encounter[];\n\n  /**\n   * Holds the encounter to default to on initial setup. If unset, we'll\n   * default to the last seven days.\n   */\n  @Input() selectedEncounter: Encounter;\n\n  /**\n   * Holds all the ISO strings for days covered by all the patient encounters\n   * above. Used to gray out datepicker options that are not part of\n   * a patient's encounter.\n   */\n  private daysCoveredByAnEncounter = new Set<string>();\n\n  /** Bounds the dates that may be selected. */\n  earliestAvailableDate = moment.utc(APP_TIMESPAN.start.toJSDate());\n  readonly latestAvailableDate = moment.utc(APP_TIMESPAN.end.toJSDate());\n\n  /** Selected timespan is past seven days by default. */\n  readonly defaultDateRange = {\n    startDate: moment.utc(\n        DateTime.utc().minus(Duration.fromObject({days: 7})).toJSDate()),\n    endDate: moment.utc(DateTime.utc())\n  };\n\n  /**\n   * The date range picker binds to this variable.\n   */\n  selected: {startDate: moment.Moment, endDate: moment.Moment};\n\n  /** The list of encounters to display as available ranges to select. */\n  readonly datePickerRanges = {};\n\n  /**\n   * Whether there was an encounter input into this component.\n   */\n  encounterError = false;\n\n  constructor(\n      private renderer: Renderer2,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {}\n\n  ngOnInit() {\n    // Set the initial date range selection and fire off a change event.\n    let selectedRange = this.defaultDateRange;\n    if (this.selectedEncounter && this.selectedEncounter.period) {\n      selectedRange = {\n        startDate: moment(\n            this.selectedEncounter.period.start.startOf('day').toJSDate()),\n        endDate:\n            moment(this.selectedEncounter.period.end.startOf('day').toJSDate())\n      };\n    }\n    this.selected = selectedRange;\n    this.datesUpdated(selectedRange);\n\n    // Set up the encounters in the date picker.\n    if (this.encounters && this.encounters.length > 0) {\n      this.encounterError = false;\n\n      this.encounters = this.encounters.sort(\n          (a, b) => a.period.start.toMillis() - b.period.start.toMillis());\n\n      // Set the minimum date to select to be the beginning of the\n      // earliest encounter that had days that fell inside the app\n      // timespan, in UTC.\n      this.earliestAvailableDate = moment(\n          this.encounters[0].period.start.startOf('day').toUTC().toJSDate());\n\n      // We have to store everything as an ISO string because if we\n      // store as objects the set membership check doesn't work.\n      this.daysCoveredByAnEncounter = new Set<string>(\n          getDaysForIntervalSet(this.encounters.map(x => x.period))\n              .map(x => x.toISO().slice(0, 10)));\n\n      // We manually update the ranges stored in the daterangepicker\n      // so that the list of encounters is displayed.\n      // We store these in local time to prevent errors with\n      // displaying a date different than the dates of the encounter.\n      // While being communicated with charts, the interval will be\n      // converted to UTC.\n      for (const encounter of this.encounters) {\n        const start = moment(encounter.period.start.startOf('day').toJSDate());\n        const end = moment(encounter.period.end.endOf('day').toJSDate());\n        const label =\n            start.format('MM/DD/YYYY') + '-' + end.format('MM/DD/YYYY');\n        this.datePickerRanges[label] = [start, end];\n      }\n\n      this.datePickerRanges['Last seven days'] =\n          [this.defaultDateRange.startDate, this.defaultDateRange.endDate];\n\n    } else {\n      this.encounterError = true;\n    }\n  }\n\n  /**\n   * Used to add a style to dates in the date picker so that the user can\n   * differentiate between dates inside and outside of encounters.\n   */\n  addCustomClass =\n      (m: moment.Moment) => {\n        // The slice gets jus tthe date portion of the ISO string.\n        return this.daysCoveredByAnEncounter.has(m.toISOString().slice(0, 10)) ?\n            'inEncounter' :\n            'notInEncounter';\n      }\n\n  /**\n   * Emits the date range picked in the date picker as an event.\n   * @param range The date range selected in the picker.\n   */\n  datesUpdated(rangeIn: {startDate: moment.Moment, endDate: moment.Moment}) {\n    if (!rangeIn.startDate || !rangeIn.endDate || !this.selected) {\n      return;\n    }\n    if (rangeIn.startDate.isBefore(rangeIn.endDate)) {\n      this.selected = rangeIn;\n      // Convert to UTC time.\n      const interval = Interval.fromDateTimes(\n          DateTime.fromJSDate(rangeIn.startDate.toDate())\n              .startOf('day')\n              .toUTC(),\n          DateTime.fromJSDate(rangeIn.endDate.toDate()).endOf('day').toUTC());\n      this.changeDateRange.emit(interval);\n\n      // Record the user changing the date range to Google Analytics.\n      (<any>window).gtag('event', 'dateRangeChanged', {\n        'event_category': 'timeline',\n        'event_label': interval.start.toLocaleString() + ' - ' +\n            interval.end.toLocaleString()\n      });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"timelineToolbarMain\\\" fxLayout=\\\"row\\\">\\n  <div *ngIf=\\\"showMockDataMessage\\\">{{uiConstants.SYNTH_DATA}}</div>\\n  <button mat-icon-button matTooltip=\\\"{{uiConstants.LAUNCH_TUTORIAL}}\\\" (click)=\\\"openHelpDialog()\\\">\\n    <mat-icon class=\\\"toolbarButton\\\">help_outline</mat-icon>\\n  </button>\\n  <button mat-icon-button matTooltip=\\\"{{uiConstants.SAVE_TO_NOTE}}\\\" (click)=\\\"snapshot()\\\">\\n    <mat-icon class=\\\"toolbarButton\\\">\\n      save\\n    </mat-icon>\\n  </button>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Inject, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UI_CONSTANTS_TOKEN} from 'src/constants';\n\nimport {environment} from '../../environments/environment';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeManager} from '../clinicalconcepts/resource-code-manager';\nimport {AxisGroup} from '../graphtypes/axis-group';\nimport {HelpDialogComponent} from '../help-dialog/help-dialog.component';\n\n@Component({\n  selector: 'app-timeline-toolbar',\n  templateUrl: './timeline-toolbar.component.html',\n  styleUrls: ['../cardcontainer/cardcontainer.component.css']\n})\nexport class TimelineToolbarComponent {\n  readonly displayGroupings: Array<[DisplayGrouping, AxisGroup[]]>;\n  readonly showMockDataMessage = environment.useMockServer;\n\n  @Output() saveSnapshot = new EventEmitter<null>();\n  @Output() addTextbox = new EventEmitter<null>();\n\n  constructor(\n      resourceCodeManager: ResourceCodeManager, private dialog: MatDialog,\n      @Inject(UI_CONSTANTS_TOKEN) readonly uiConstants: any) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    this.displayGroupings = Array.from(displayGroups.entries());\n  }\n\n  // Emits an event indicating to CardContainer to save a snapshot of the page.\n  snapshot() {\n    this.saveSnapshot.emit();\n  }\n\n  // Emits an event indicating to CardContainer to add a blank textbox at the\n  // top of the page.\n  textbox() {\n    this.addTextbox.emit();\n  }\n\n  openHelpDialog() {\n    const dialogRef = this.dialog.open(HelpDialogComponent);\n    // Record the user viewing the tutorial to Google Analytics.\n    (<any>window).gtag('event', 'viewTutorial', {\n      'event_category': 'tutorial',\n      'event_label': new Date().toDateString()\n    });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/**\n * This function replaces abbrevations and symbols in a unit string to comply\n * with EHRA guidelines.\n * @param unit The unit string to fix abbreviations of.\n */\nexport function fixUnitAbbreviations(unit: string): string {\n  if (unit) {\n    return unit.replace('uL', 'microL')\n        .replace('µ', 'micro')\n        .replace('DegC', 'Deg C');\n  }\n  return undefined;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {InjectionToken} from '@angular/core';\nimport {DateTime, Duration, Interval} from 'luxon';\n\nimport {environment} from './environments/environment';\n\n/** The period of time this app will search for patient encounters in.  */\nexport const APP_TIMESPAN = environment.production ?\n    Interval.fromDateTimes(\n        DateTime.utc().minus(Duration.fromObject({months: 6})),\n        DateTime.utc()) :\n    Interval.fromDateTimes(\n        DateTime.utc().minus(Duration.fromObject({months: 60})),\n        DateTime.utc());\n\n/**\n * Do not consider any encounters with a start date earlier than a year from\n * now.\n */\nexport const EARLIEST_ENCOUNTER_START_DATE = DateTime.utc().minus({years: 1});\n\n/** Constants used for FHIR resource types. */\nexport enum FhirResourceType {\n  Encounter = 'Encounter',\n  Observation = 'Observation',\n  MedicationAdministration = 'MedicationAdministration',\n  MedicationOrder = 'MedicationOrder',\n  DocumentReference = 'DocumentReference',\n  Patient = 'Patient',\n  Specimen = 'Specimen',\n  Medication = 'Medication',\n  DiagnosticReport = 'DiagnosticReport'\n}\n\n/**\n * Injection token for passing UI constants across the app.\n */\nexport let UI_CONSTANTS_TOKEN = new InjectionToken('UiConstantsToken');\n\n/**\n * UI constants text.\n */\nexport const UI_CONSTANTS = {\n  SYNTH_DATA: 'This is synthesized data used only for demo purposes.',\n  // Tooltip for adding a card inline\n  ADD_TIMELINE_HERE: 'Add timeline here',\n  // Dialog for adding an event to the custom timeline\n  ADD_TITLE_CUSTOM_EVENT: 'Add title',\n  ADD_DESCRIPTION_CUSTOM_EVENT: 'Add description',\n  DATE_CUSTOM_EVENT: 'Date',\n  TIME_CUSTOM_EVENT: 'Time',\n  CANCEL: 'Cancel',\n  SAVE: 'Save',\n  CONTINUE: 'Continue',\n  // Custom timeline constants\n  ADD_CUSTOM_TIMELINE: 'Add Custom Timeline',\n  CUSTOM_TIMELINE_LABEL: 'Custom Timeline',\n  CUSTOM_TIMELINE_INSTRUCTIONS:\n      'Click on this graph to add a flag for anything you want to keep track of.',\n  // Annotation constants\n  ADD_ANNOTATION: 'Add Textbox',\n  ANNOTATION_INSTRUCTIONS: 'Add your text here.',\n  SAVE_TEXT_HINT: 'Click the save button to save your text.',\n  EDIT_TEXT_HINT: 'Click the edit button to edit this text.',\n  // Constants\n  NO_DATA_AVAILABLE_TMPL: 'No data between ',\n  // Used in menu to add timelines\n  ADD_CHART: 'Add Data Timeline',\n  SEARCH_FOR_A_CONCEPT: 'Search for a concept',\n  // Confirmation dialog for removing a card\n  REMOVE_CARD: 'Do you want to remove this card?',\n  REMOVE_CARD_NO: 'No',\n  REMOVE_CARD_YES: 'Yes, remove this card',\n  // Error handling\n  BAD_DATA_ERROR: 'Invalid data received. Please check the PowerChart.',\n  BAD_ENCOUNTER_ERROR:\n      'Unable to retrieve hospital visit dates for this patient.' +\n      ' You can select any time period in the past six months.',\n  // Setup screen\n  INITIAL_CONFIGURATION_HEADER: 'Select Initial Configuration',\n  LAST_SEVEN_DAYS: 'Last seven days',\n  NO_RESULTS: 'No results found',\n  SELECT_ALL: 'Select all',\n  CLEAR_SELECTION: 'Clear selection',\n  NO_DATA_PAST_SIX_MOS: '(No data found for past six months)',\n  WHICH_ENCOUNTER_FIRST: 'Which time period would you like to see first?',\n  WHICH_CONCEPTS_FIRST: 'Which data timelines would you like to see first?',\n  ENCOUNTER: '(patient encounter)',\n  // Top banner constants\n  CHANGE_DATE_RANGE: 'Change date range',\n  MOCK_DATA_BANNER: 'This is synthesized data used for demo purposes only.',\n  LAUNCH_TUTORIAL: 'Launch Tutorial',\n  SAVE_TO_NOTE: 'Save a screenshot of this page to a PowerChart clinical note',\n  // Interacting with cards\n  REMOVE_THIS_CARD: 'Remove this card',\n  CARD_REMOVED: 'Card removed.',\n  UNDO: 'Undo',\n  DRAG_THIS_CARD: 'Drag and drop to move this card somewhere else',\n  EDIT_THIS_CARD: 'Edit this card',\n  SAVE_YOUR_WORK: 'Save your work on this card',\n  // Saving to PowerChart\n  SAVED_TO_POWERCHART: 'Screenshot saved to PowerChart.',\n  DISMISS: 'Dismiss',\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  useMockServer: true,\n  mockDataFolder: 'demo_data/DemoMockData',\n  mockDataFiles: [\n    'DiagnosticReportMockData', 'EncounterMockData',\n    'MedicationAdministrationMockData', 'MedicationOrderMockData',\n    'ObservationMockData'\n  ],\n  useDebugger: false,\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\nimport 'zone.js/dist/zone-error'; // Included with Angular CLI.\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport * as FhirConfig from './app/fhir_config';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nif (FhirConfig.googleAnalyticsTag) {\n  // Global site tag (gtag.js) - Google Analytics\n  document.write(\n      '  <script async src=\"https://www.googletagmanager.com/gtag/js?id=' +\n      FhirConfig.googleTag + '\"></script>');\n  document.write(\n      '<script>window.dataLayer = window.dataLayer || [];' +\n      'function gtag() {dataLayer.push(arguments);} gtag(\"js\", new Date());' +\n      'gtag(\"config\", \"' + FhirConfig.googleTag + '\");</script>');\n} else {\n  // If there is no Google Analytics Tag found, insert an empty script to\n  // prevent errors with user interaction.\n  document.write('<script>function gtag() {} </script>');\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(\n    err => console.log(err));\n"],"sourceRoot":""}