{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cardcontainer/cardcontainer.component.css","webpack:///./src/app/cardcontainer/cardcontainer.component.html","webpack:///./src/app/cardcontainer/cardcontainer.component.ts","webpack:///./src/app/cardtypes/card.ts","webpack:///./src/app/cardtypes/card/card.component.css","webpack:///./src/app/cardtypes/card/card.component.html","webpack:///./src/app/cardtypes/card/card.component.ts","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component.css","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component.html","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component.ts","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.css","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.html","webpack:///./src/app/cardtypes/customizable-timeline/customizable-timeline.component.ts","webpack:///./src/app/cardtypes/legendstyles.css","webpack:///./src/app/cardtypes/multigraphcard/multigraphcard.component.ts","webpack:///./src/app/cardtypes/multigraphcard/multigraphcard.html","webpack:///./src/app/cardtypes/textboxcard/textboxcard.component.html","webpack:///./src/app/cardtypes/textboxcard/textboxcard.component.ts","webpack:///./src/app/clinicalconcepts/bch-microbio-code.ts","webpack:///./src/app/clinicalconcepts/display-grouping.ts","webpack:///./src/app/clinicalconcepts/loinc-code.ts","webpack:///./src/app/clinicalconcepts/resource-code-group.ts","webpack:///./src/app/clinicalconcepts/resource-code-manager.ts","webpack:///./src/app/clinicalconcepts/rx-norm-group.ts","webpack:///./src/app/clinicalconcepts/rx-norm.ts","webpack:///./src/app/data-selector-element/data-selector-element.component.css","webpack:///./src/app/data-selector-element/data-selector-element.component.html","webpack:///./src/app/data-selector-element/data-selector-element.component.ts","webpack:///./src/app/data-selector-menu/data-selector-menu.component.css","webpack:///./src/app/data-selector-menu/data-selector-menu.component.html","webpack:///./src/app/data-selector-menu/data-selector-menu.component.ts","webpack:///./src/app/date_utils.ts","webpack:///./src/app/delete-dialog/delete-dialog.component.html","webpack:///./src/app/delete-dialog/delete-dialog.component.ts","webpack:///./src/app/fhir-data-classes/annotated-observation.ts","webpack:///./src/app/fhir-data-classes/diagnostic-report.ts","webpack:///./src/app/fhir-data-classes/dosage.ts","webpack:///./src/app/fhir-data-classes/encounter.ts","webpack:///./src/app/fhir-data-classes/medication-administration.ts","webpack:///./src/app/fhir-data-classes/medication-order.ts","webpack:///./src/app/fhir-data-classes/medication.ts","webpack:///./src/app/fhir-data-classes/observation-interpretation-valueset.ts","webpack:///./src/app/fhir-data-classes/observation-set.ts","webpack:///./src/app/fhir-data-classes/observation.ts","webpack:///./src/app/fhir-data-classes/specimen.ts","webpack:///./src/app/fhir-http.service.ts","webpack:///./src/app/fhir-launch/fhir-launch.component.css","webpack:///./src/app/fhir-launch/fhir-launch.component.html","webpack:///./src/app/fhir-launch/fhir-launch.component.ts","webpack:///./src/app/fhir-resource-set.ts","webpack:///./src/app/fhir.service.ts","webpack:///./src/app/graphdatatypes/customizabledata.ts","webpack:///./src/app/graphdatatypes/graphdata.ts","webpack:///./src/app/graphdatatypes/labeled-series.ts","webpack:///./src/app/graphdatatypes/linegraphdata.ts","webpack:///./src/app/graphdatatypes/microbiographdata.ts","webpack:///./src/app/graphdatatypes/stepgraphdata.ts","webpack:///./src/app/graphtypes/axis.ts","webpack:///./src/app/graphtypes/customizable-graph/customizable-graph-annotation.ts","webpack:///./src/app/graphtypes/customizable-graph/customizable-graph.component.ts","webpack:///./src/app/graphtypes/graph.css","webpack:///./src/app/graphtypes/graph/graph.component.html","webpack:///./src/app/graphtypes/graph/graph.component.ts","webpack:///./src/app/graphtypes/linegraph/linegraph.component.ts","webpack:///./src/app/graphtypes/microbio-graph/microbio-graph.component.ts","webpack:///./src/app/graphtypes/scatterplot/scatterplot.component.ts","webpack:///./src/app/graphtypes/stepgraph/stepgraph.component.ts","webpack:///./src/app/graphtypes/tooltips/medication-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/microbio-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/observation-tooltips.ts","webpack:///./src/app/graphtypes/tooltips/tooltip.ts","webpack:///./src/app/help-dialog/help-dialog.component.css","webpack:///./src/app/help-dialog/help-dialog.component.html","webpack:///./src/app/help-dialog/help-dialog.component.ts","webpack:///./src/app/mock-fhir.service.ts","webpack:///./src/app/smart-on-fhir-client.ts","webpack:///./src/app/theme/bch_colors.ts","webpack:///./src/app/timeline-controller/timeline-controller.component.css","webpack:///./src/app/timeline-controller/timeline-controller.component.html","webpack:///./src/app/timeline-controller/timeline-controller.component.ts","webpack:///./src/app/timeline-toolbar/timeline-toolbar.component.html","webpack:///./src/app/timeline-toolbar/timeline-toolbar.component.ts","webpack:///./src/constants.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component} from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport 'fhirclient';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n// tslint:disable-next-line:max-line-length\nimport {MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatDatepickerModule, MatDialogModule, MatDividerModule, MatListModule, MatMenuModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatStepperModule, MatToolbarModule, MatTooltipModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {RouterModule} from '@angular/router';\nimport {DragulaModule} from 'ng2-dragula';\nimport {NgxDaterangepickerMd} from 'ngx-daterangepicker-material';\n\nimport {environment} from '../environments/environment';\n\nimport {AppComponent} from './app.component';\nimport {CardcontainerComponent} from './cardcontainer/cardcontainer.component';\nimport {CardComponent} from './cardtypes/card/card.component';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableTimelineDialogComponent} from './cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component';\nimport {CustomizableTimelineComponent} from './cardtypes/customizable-timeline/customizable-timeline.component';\nimport {MultiGraphCardComponent} from './cardtypes/multigraphcard/multigraphcard.component';\nimport {TextboxcardComponent} from './cardtypes/textboxcard/textboxcard.component';\nimport {ResourceCodeManager} from './clinicalconcepts/resource-code-manager';\nimport {DataSelectorElementComponent} from './data-selector-element/data-selector-element.component';\nimport {DataSelectorMenuComponent} from './data-selector-menu/data-selector-menu.component';\nimport {DeleteDialogComponent} from './delete-dialog/delete-dialog.component';\nimport {FhirHttpService} from './fhir-http.service';\nimport {FhirLaunchComponent} from './fhir-launch/fhir-launch.component';\nimport {FhirService} from './fhir.service';\nimport {CustomizableGraphComponent} from './graphtypes/customizable-graph/customizable-graph.component';\nimport {LineGraphComponent} from './graphtypes/linegraph/linegraph.component';\nimport {MicrobioGraphComponent} from './graphtypes/microbio-graph/microbio-graph.component';\nimport {ScatterplotComponent} from './graphtypes/scatterplot/scatterplot.component';\nimport {StepGraphComponent} from './graphtypes/stepgraph/stepgraph.component';\nimport {HelpDialogComponent} from './help-dialog/help-dialog.component';\nimport {MockFhirService} from './mock-fhir.service';\nimport {SMART_ON_FHIR_CLIENT} from './smart-on-fhir-client';\nimport {TimelineControllerComponent} from './timeline-controller/timeline-controller.component';\nimport {TimelineToolbarComponent} from './timeline-toolbar/timeline-toolbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FhirLaunchComponent,\n    CardcontainerComponent,\n    TextboxcardComponent,\n    LineGraphComponent,\n    ScatterplotComponent,\n    StepGraphComponent,\n    MultiGraphCardComponent,\n    TimelineControllerComponent,\n    CustomizableTimelineComponent,\n    CustomizableGraphComponent,\n    CustomizableTimelineDialogComponent,\n    MicrobioGraphComponent,\n    TimelineToolbarComponent,\n    DataSelectorElementComponent,\n    DataSelectorMenuComponent,\n    HelpDialogComponent,\n    CardComponent,\n    DeleteDialogComponent,\n  ],\n  imports: [\n    BrowserModule, MatCardModule, HttpClientModule, MatListModule,\n    MatDividerModule, MatIconModule, BrowserAnimationsModule, FormsModule,\n    ReactiveFormsModule, MatInputModule, MatProgressSpinnerModule,\n    MatButtonModule, MatAutocompleteModule, MatMenuModule, MatTooltipModule,\n    FlexLayoutModule.withConfig({useColumnBasisZero: false}), MatDialogModule,\n    MatStepperModule, MatToolbarModule, MatSnackBarModule, MatDatepickerModule,\n    NgxDaterangepickerMd.forRoot({}), MatButtonToggleModule,\n    MatNativeDateModule,\n    /* On their end, it's locked down so that the only acceptable redirect\n    URL is localhost:8000/. So, we have to do a different path for\n    authentication. */\n    RouterModule.forRoot([\n      {path: 'auth', component: FhirLaunchComponent},\n      {path: '', component: CardcontainerComponent}\n    ]),\n    DragulaModule.forRoot()\n  ],\n  providers: [\n    // This sets up a provider for the smart on fhir client defined by\n    // assets/fhir-client.min.js (defined as symbol `FHIR`) so that it can be\n    // injected into the service that uses it to allow for easier testing.\n    {provide: SMART_ON_FHIR_CLIENT, useValue: FHIR}, {\n      provide: FhirService,\n      useClass: environment.useMockServer ? MockFhirService : FhirHttpService\n    },\n    {provide: ResourceCodeManager, useClass: ResourceCodeManager}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    CustomizableTimelineDialogComponent, HelpDialogComponent,\n    DeleteDialogComponent\n  ]\n})\nexport class AppModule {\n}\n","module.exports = \".cardContainer {\\n  background-color: #002356; /* PRIMARY_COLOR */\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 15px;\\n  width: 100%;\\n  min-height: 100%;\\n  /* Disable selecting/highlighting on the page. */\\n  -webkit-touch-callout: none; /* iOS Safari */\\n  -webkit-user-select: none; /* Safari */\\n     -moz-user-select: none; /* Firefox */\\n      -ms-user-select: none; /* Internet Explorer/Edge */\\n          user-select: none; /* Chrome and Opera */\\n}\\n\\n.mat-toolbar {\\n  background-color: #00002d; /* PRIMARY_COLOR, dark variant */\\n}\\n\\n::ng-deep .gu-unselectable app-data-selector-menu { \\n  /* Hide the data selector menus while a card is being dragged. */\\n  opacity: 0 !important;\\n}\\n\\n.pinned {\\n  background-color: #002356; /* PRIMARY_COLOR */\\n  position: fixed;\\n  top: 0;\\n  width: 100%;\\n  z-index: 5;\\n}\\n\\n.makeGutters {\\n  padding-right: 100px;\\n  padding-left: 100px;\\n}\\n\\n::ng-deep .mat-toolbar-single-row {\\n  white-space: unset !important;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"toolbar\\\">\\n  <app-timeline-controller (changeDateRange)=\\\"changeDateRange($event)\\\"></app-timeline-controller>\\n  <!--Push the buttons to the right and left sides.-->\\n  <div fxFlex></div>\\n  <app-timeline-toolbar (saveSnapshot)=\\\"snapshot()\\\" (addTextbox)=\\\"addTextbox()\\\"></app-timeline-toolbar>\\n</mat-toolbar>\\n<div fxLayout=\\\"column\\\" class=\\\"cardContainer makeGutters\\\" fxLayoutAlign=\\\"start\\\" id=\\\"{{CARDHOLDER}}\\\">\\n  <app-data-selector-menu (addCard)=\\\"addConceptCard($event)\\\" (addTextbox)=\\\"addTextbox()\\\"\\n    (addCustomTimeline)=\\\"addCustomTimeline()\\\"></app-data-selector-menu>\\n  <div fxLayout=\\\"column\\\" dragula=\\\"graphcards\\\" id=\\\"{{CARDHOLDER}}\\\" class=\\\"draggable\\\">\\n    <div *ngFor=\\\"let element of displayedConcepts\\\" [attr.data-index]=\\\"element['id']\\\" class=\\\"displayedConcept\\\">\\n      <app-textboxcard *ngIf=\\\"element['concept'] ==='textbox'\\\" [id]=\\\"element['id']\\\" [noteString]=\\\"element['value']\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\"></app-textboxcard>\\n      <app-customizable-timeline *ngIf=\\\"element['concept']==='customTimeline'\\\" [id]=\\\"element['id']\\\"\\n        [dateRange]=\\\"dateRange\\\" [deletedData]=\\\"element['value']\\\" (updateEventLines)=\\\"updateEventLines($event)\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\">\\n      </app-customizable-timeline>\\n      <app-multigraphcard *ngIf=\\\"element['concept'] !=='textbox' && element['concept'] !== 'customTimeline'\\\"\\n        [resourceCodeGroups]=\\\"element['concept']\\\" [dateRange]=\\\"dateRange\\\" [eventlines]=\\\"eventlines\\\" [id]=\\\"element['id']\\\"\\n        (removeEvent)=\\\"removeDisplayedCard($event)\\\">\\n      </app-multigraphcard>\\n      <app-data-selector-menu (addCard)=\\\"addConceptCard($event, element['id'])\\\" (addTextbox)=\\\"addTextbox(element['id'])\\\"\\n        (addCustomTimeline)=\\\"addCustomTimeline(element['id'])\\\"></app-data-selector-menu>\\n    </div>\\n  </div>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, QueryList, ViewChildren} from '@angular/core';\nimport {MatDialog, MatDialogRef, MatSnackBar} from '@angular/material';\nimport {DateTime, Interval} from 'luxon';\nimport {DragulaService} from 'ng2-dragula';\nimport {Subscription} from 'rxjs';\nimport {v4 as uuid} from 'uuid';\n\nimport {CardComponent} from '../cardtypes/card/card.component';\nimport {ResourceCodeManager, ResourceCodesForCard} from '../clinicalconcepts/resource-code-manager';\nimport {DeleteDialogComponent} from '../delete-dialog/delete-dialog.component';\nimport {FhirService} from '../fhir.service';\nimport {CustomizableData} from '../graphdatatypes/customizabledata';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\n@Component({\n  selector: 'app-cardcontainer',\n  templateUrl: './cardcontainer.component.html',\n  styleUrls: ['./cardcontainer.component.css']\n})\nexport class CardcontainerComponent {\n  // Constants for dragging regions of this component.\n  // TODO(b/119251288): Extract out the constants to somewhere shared between\n  // the ts files and html files.\n  readonly CARDHOLDER = 'cardholder';\n  // How long to display the snack bar for.\n  private readonly DISPLAY_TIME = 6000;\n\n  @ViewChildren(CardComponent) containedCards!: QueryList<CardComponent>;\n\n  // The format of each object in the array is an object representing a line\n  // drawn on the chart, that has a value, text, and class field. The value\n  // field represents the x-position of the line to be drawn, while the class\n  // represents the class name, and the text represents the text displayed near\n  // the line.\n  eventlines: Array<{[key: string]: number | string}> = [];\n\n  // The concepts that are actually being displayed on the page.\n  // We keep track of unique ids for each displayed card, to allow removal on\n  // clicking the trashcan icon.\n\n  readonly displayedConcepts:\n      Array<{[key: string]: ResourceCodesForCard | string | CustomizableData}> =\n          [];\n\n  // The original concepts to duplicate, if necessary.\n  readonly originalConcepts: ResourceCodesForCard[];\n\n  // Hold an instance of this enum so that the HTML template can access it.\n  readonly chartType = ChartType;\n\n  // The time interval displayed.\n  dateRange: Interval;\n\n  // Holds a subscription to the observable sequence of events emitted by the\n  // Dragula Service.\n  private readonly subs = new Subscription();\n\n  // Holds the most recently removed cards from the container, mapping the index\n  // of the displayed card to the displayedConcept value.\n  private recentlyRemoved = new Map<\n      number,\n      {[key: string]: ResourceCodesForCard | string | CustomizableData}>();\n\n  // The reference for the Dialog opened.\n  private dialogRef: MatDialogRef<DeleteDialogComponent>;\n\n  // A map of custom timeline id to the event lines corresponding to that\n  // timeline.\n  private eventsForCustomTimelines =\n      new Map<string, Array<{[key: string]: number | string}>>();\n\n  // TODO(b/119251288): Extract out the constants to somewhere shared between\n  // the ts files and html files.\n  constructor(\n      dragulaService: DragulaService, private fhirService: FhirService,\n      resourceCodeManager: ResourceCodeManager, private snackBar: MatSnackBar,\n      private deleteDialog: MatDialog) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    /* Load in the concepts to display, flattening them all into a\n     * single-depth array. */\n    this.originalConcepts = Array.from(displayGroups.values())\n                                .reduce((acc, val) => acc.concat(val), []);\n    // Add a textbox at the top of the card list.\n    this.addTextbox();\n    // Add a custom timeline to the top of the card list.\n    this.addCustomTimeline();\n    for (const concept of this.originalConcepts) {\n      // We decide the original displayed concepts based on whether any\n      // ResourceCodeGroup in the ResourceCodeGroup array associated with one\n      // Card is marked as \"showByDefault\".\n      const showByDefault =\n          concept.resourceCodeGroups.some(x => x.showByDefault);\n      if (showByDefault) {\n        this.displayedConcepts.push({'id': uuid(), 'concept': concept});\n      }\n    }\n    this.setUpDrag(dragulaService);\n  }\n\n  // Ensures that the order of displayed concepts is updated as the user drags\n  // cards around.\n  private setUpDrag(dragulaService: DragulaService) {\n    this.subs.add(dragulaService.drop('graphcards').subscribe((value) => {\n      // These cases are dragging from within the card holder.\n      if (value.source.id === this.CARDHOLDER &&\n          value.target.id === this.CARDHOLDER) {\n        // Rearrange the order of this.displayedConcepts if graph/textbox\n        // cards are reordered. We do not use dragulaModel since we cannot use\n        // it for separate lists on the configuration panel.\n        let originalIndex = this.displayedConcepts.map(x => x.id).indexOf(\n            value.el.getAttribute('data-index'));\n        const siblingIndex = this.getSiblingIdx(value);\n        const elementDisplayed = this.displayedConcepts[originalIndex];\n        // Add the element to its new position.\n        this.displayedConcepts.splice(siblingIndex, 0, elementDisplayed);\n        // Adjust the original position if needed.\n        if (siblingIndex < originalIndex) {\n          originalIndex++;\n        }\n        this.displayedConcepts.splice(originalIndex, 1);\n      }\n    }));\n  }\n\n  /**\n   * Gets the index of the card below a dragged-and-dropped card's new place.\n   */\n  private getSiblingIdx(value): number {\n    let siblingIndex;\n    if (value.sibling === null) {\n      // Dragged to bottom of list\n      siblingIndex = this.displayedConcepts.length;\n    } else {\n      const siblingId = value.sibling.getAttribute('data-index');\n      siblingIndex = this.displayedConcepts.map(x => x.id).indexOf(siblingId);\n    }\n    return siblingIndex;\n  }\n\n  /**\n   * Adds a new annotation box to the card panel.\n   * @param id: The id of the card above the position of the new annotation box.\n   */\n  addTextbox(id?: string) {\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(index, 0, {id: uuid(), concept: 'textbox'});\n  }\n\n  /**\n   * Adds a new custom timeline to the card panel.\n   * @param id: The id of the card above the position of the new annotation box.\n   */\n  addCustomTimeline(id?: string) {\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(\n        index, 0, {id: uuid(), concept: 'customTimeline'});\n  }\n\n  // Listen for an event indicating that the date range has been changed on the\n  // UI, and update the date range.\n  changeDateRange($event) {\n    this.dateRange = $event;\n  }\n\n  // Saves a snapshot of the graph drawer HTML to the EHR using a FhirService.\n  snapshot() {\n    this.fhirService.saveStaticNote(\n        document.getElementsByClassName('cardContainer')[0].innerHTML,\n        DateTime.fromJSDate(new Date()).toISO());\n  }\n\n  // Listen for an event indicating that a \"delete\" button has been clicked on a\n  // card currently displayed, and update the displayed concepts\n  // accordingly after asking for confirmation of deletion.\n  private removeDisplayedCard($event) {\n    const index = this.displayedConcepts.map(x => x.id).indexOf($event.id);\n    const concept = this.displayedConcepts[index];\n    concept.value = $event.value;\n    this.dialogRef = this.deleteDialog.open(DeleteDialogComponent);\n    this.dialogRef.afterClosed().subscribe(result => {\n      // The user wishes to delete the card.\n      if (result) {\n        this.displayedConcepts.splice(index, 1);\n        this.recentlyRemoved.clear();\n        this.recentlyRemoved.set(index, concept);\n        this.openSnackBar();\n        if (this.eventsForCustomTimelines.get($event.id)) {\n          // We only remove the event lines for this CustomTimeline if the user\n          // confirms the deletion of the card.\n          this.updateEventLines({id: $event.id});\n        }\n      }\n    });\n  }\n\n  // Open a snack bar allowing for the user to potentially reverse the removal\n  // of cards from the page. Only one snack bar can be opened at a time.\n  private openSnackBar() {\n    const message =\n        this.recentlyRemoved.size > 1 ? 'Cards removed.' : 'Card removed.';\n    const snackBarRef = this.snackBar.open(message, 'Undo', {\n      duration:\n          this.DISPLAY_TIME,  // Wait 6 seconds before dismissing the snack bar.\n    });\n    // Undo the most recent deletion according to what is stored in\n    // recentlyRemoved.\n    snackBarRef.onAction().subscribe(() => {\n      for (const index of Array.from(this.recentlyRemoved.keys())\n               .sort((a, b) => a - b)) {\n        this.displayedConcepts.splice(\n            index, 0, this.recentlyRemoved.get(index));\n        if (this.displayedConcepts[index].concept === 'customTimeline') {\n          this.updateEventLines({\n            id: this.displayedConcepts[index].id,\n            data: this.displayedConcepts[index].value\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Listens for an event indicating that the user has selected to add the\n   * concept card from the top toolbar. The card is added at the top of the\n   * page, or, if the id of the closest card is specified, below the closest\n   * card.\n   * @param label The label of the new concept to add.\n   * @param id The id of the card below which to add the new concept.\n   */\n\n  addConceptCard(label: string, id?: string) {\n    const graphCardValue =\n        this.originalConcepts.find(obj => (obj.label === label));\n    // Insert the card at the top of the page\n    // Insert after the closest card rather than before the card.\n    const index =\n        id ? (this.displayedConcepts.map(x => x.id).indexOf(id) + 1) : 0;\n    this.displayedConcepts.splice(\n        index, 0, {id: uuid(), concept: graphCardValue});\n  }\n\n  /**\n   * Listens for an event indicating that the user has edited the points on a\n   * custom timeline, and updates the x-axis eventlines displayed on all other\n   * charts.\n   * @param $event The updated CustomizableData from which we calculate event\n   *     lines for each chart to display, along with the id of the updated.\n   *\n   */\n\n  updateEventLines($event) {\n    let times = [];\n    if ($event.data) {\n      times = Array.from($event.data.annotations.keys())\n                  .map(x => Number(x))\n                  .sort((a, b) => a - b);\n    }\n    // Remove the first point (with the earliest possible date) that was added\n    // in order to display the x-axis.\n    times.shift();\n    const eventlines = times.map(x => {\n      return {\n        value: x,\n        text: $event.data.annotations.get(x).title,\n        class: 'color' +\n            $event.data.annotations.get(x).color.hex().replace('#', '')\n      };\n    });\n    const index = this.displayedConcepts.map(x => x.id).indexOf($event.id);\n    this.eventsForCustomTimelines.set($event.id, eventlines);\n\n    // Consolidate all event lines from all custom timelines.\n    let allEvents = [];\n    for (const events of Array.from(this.eventsForCustomTimelines.values())) {\n      allEvents = allEvents.concat(events);\n    }\n    this.eventlines = allEvents;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {ResourceCodesForCard} from '../clinicalconcepts/resource-code-manager';\nimport {FhirService} from '../fhir.service';\nimport {Axis} from '../graphtypes/axis';\n\n/**\n * A Card represents the data associated with one card rendered. One Card\n * may include many graphs, each represented by one \"Axis\". A Card holds\n * whether or not to display the data by default, the grouping associated with\n * the charts, and the axes. Each Axis for this Card\n * could have a different graph type but must all belong to the same display\n * grouping.\n */\nexport class Card {\n  /**\n   * The DisplayConcept associated with the charts on this Card.\n   */\n  readonly displayConcept: DisplayGrouping;\n\n  /**\n   * The Axes associated with this Card.\n   */\n  readonly axes: Axis[] = [];\n\n  /**\n   * The date range associated with this Card.\n   */\n  readonly dateRange: Interval;\n\n  /**\n   * The constructor for this axis.\n   * @param fhirService The FhirService used to make the FHIR calls.\n   * @param resourceCodes The groups of resources to display on each Axis\n   *     for this Card.\n   * @param dateRange The date range for this Card.\n   * @throws Error if the ResourceCodeGroups have mixed display groupings, or\n   * the resource code groups are undefined\n   */\n  constructor(\n      fhirService: FhirService,\n      resourceCodes: ResourceCodesForCard,\n      dateRange: Interval,\n      sanitizer: DomSanitizer,\n  ) {\n    const resourceCodeGroups = resourceCodes.resourceCodeGroups;\n    if (!resourceCodeGroups) {\n      throw Error('Resource codes are undefined.');\n    }\n    if (resourceCodeGroups.length > 0) {\n      const allConcepts =\n          new Set(resourceCodeGroups.map(x => x.displayGrouping));\n      if (allConcepts.size !== 1) {\n        throw Error(\n            'The resource list in this set has mixed concepts: ' +\n            Array.from(allConcepts));\n      }\n      this.displayConcept = allConcepts.keys().next().value;\n    }\n\n    this.dateRange = dateRange;\n    for (const resourceGroup of resourceCodeGroups) {\n      const label = (resourceGroup.label !== resourceCodes.label) ?\n          resourceGroup.label :\n          undefined;\n      this.axes.push(\n          new Axis(fhirService, resourceGroup, dateRange, sanitizer, label));\n    }\n  }\n}\n","module.exports = \".mat-card {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n  margin-top:0px;\\n  margin-bottom:0px;\\n  margin-left: 35px; /* Leave space for the \\\"add card\\\" button. */\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  padding-right: 20px;\\n  padding-left: 0px;\\n  -webkit-transition: -webkit-box-shadow .1s;\\n  transition: -webkit-box-shadow .1s;\\n  transition: box-shadow .1s;\\n  transition: box-shadow .1s, -webkit-box-shadow .1s;\\n  background-color: rgb(248, 248, 248);\\n}\\n\\n::ng-deep .inEditMode .mat-card {\\n  background-color: rgb(226, 226, 226) !important;\\n}\\n\\n.mat-card:hover {\\n  background-color: rgb(240, 240, 240);\\n  -webkit-box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);\\n          box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);\\n}\\n\\n.colorbar {\\n  margin-right: 6px;\\n  min-width: 24px;\\n  border-top-left-radius: 4px;\\n  border-bottom-left-radius: 4px;\\n}\\n\\n.mat-icon {\\n  color: rgb(34, 44, 66);\\n  cursor: pointer;\\n  opacity: .3;\\n  -webkit-transition: opacity .3s;\\n  transition: opacity .3s;\\n}\\n\\n.removeCardButton {\\n  opacity: 0;\\n}\\n\\n.mat-card:hover .mat-icon {\\n  opacity: .8;\\n}\\n\\n.mat-card:hover .dragCardIcon.mat-icon {\\n  opacity: .4;\\n}\\n\\n.dragCardIcon {\\n  opacity: 0;\\n  margin-bottom: 15px;\\n}\\n\\n.labelColumn{\\n  padding: 3px;\\n}\\n\\n.label {\\n  max-width: 200px;\\n  min-width: 200px;\\n  word-wrap: break-word;\\n  font-family: 'Quicksand', sans-serif;\\n}\\n\\n::ng-deep .mat-input-element:disabled{\\n  color: rgb(0,0,0, .7) !important;\\n}\"","module.exports = \"<!-- This component is a card that holds a colored sidebar with icons indicating\\nfunctionality, then space for a label & legend, then space for other contents. -->\\n<mat-card fxFlex [attr.id]=\\\"id\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" (resized)=\\\"resize($event)\\\">\\n  <div fxFlex fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\" fxShrink='0' fxGrow='0' fxLayoutAlign=\\\"space-between center\\\"\\n    [style.background-color]=\\\"color\\\" class=\\\"colorbar\\\">\\n    <mat-icon *ngIf=\\\"isRemovable\\\" class=\\\"removeCardButton\\\" (click)=\\\"remove($event)\\\" matTooltip=\\\"Remove this card\\\">clear</mat-icon>\\n    <mat-icon *ngIf=\\\"isDraggable\\\" class=\\\"dragCardIcon\\\">\\n      drag_indicator\\n    </mat-icon>\\n    <!--Ensure that the dragger icon is always at the center of the color bar.-->\\n    <div style=\\\"margin-bottom: 12px\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"label\\\" fxFlex fxLayout=\\\"column\\\" fxFlexAlign=\\\"stretch\\\" fxGrow=\\\"0\\\" fxShrink=\\\"0\\\" class=\\\"labelColumn\\\">\\n    <div fxFlex class=\\\"mat-title label\\\">{{label}}</div>\\n    <!--Give the div that you want to appear here the class \\\"legends-block\\\".-->\\n    <ng-content select=\\\".legends-block\\\"></ng-content>\\n  </div>\\n  <!--Give the div that you want to appear here the class \\\"contents-block\\\".-->\\n  <ng-content select=\\\".contents-block\\\"></ng-content>\\n  <div *ngIf=\\\"!isEditable\\\" style=\\\"margin-right: 25px\\\"></div>\\n  <ng-container *ngIf=\\\"isEditable\\\">\\n    <mat-icon *ngIf=\\\"!inEditMode\\\" matTooltip=\\\"Click to edit this card\\\" (click)=\\\"edit($event)\\\" class=\\\"editCardIcon\\\">edit</mat-icon>\\n    <mat-icon *ngIf=\\\"inEditMode\\\" matTooltip=\\\"Click to save your work\\\" (click)=\\\"save($event)\\\">save</mat-icon>\\n  </ng-container>\\n</mat-card>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\nimport * as Color from 'color';\nimport {BOSTON_WARM_GRAY} from 'src/app/theme/bch_colors';\n\n/**\n * This is the base template for all the cards in this app. It will show a\n * colored bar on the left hand side with icons for actions, and then\n * optionally a label and legend, then the contents of the card.\n */\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent {\n  @Input() color: Color = BOSTON_WARM_GRAY;\n  @Input() id: string;\n  @Input() label: string;\n  @Input() isDraggable = true;\n  @Input() isEditable = false;\n  @Input() isRemovable = true;\n\n  @Output() renderEvent = new EventEmitter();\n  @Output() removeEvent = new EventEmitter();\n  @Output() editEvent = new EventEmitter();\n  @Output() saveEvent = new EventEmitter();\n\n  inEditMode = false;\n\n  // The events below need to get propogated up to the card container.\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    this.removeEvent.emit(this.id);\n  }\n\n  // Called when the card resizes.\n  resize($event) {\n    this.renderEvent.emit($event);\n  }\n\n  // Called when the user clicks on the edit button.\n  edit($event) {\n    this.inEditMode = true;\n    this.editEvent.emit($event);\n  }\n\n  // Called when the user hits the save button to exit out of edit mode.\n  save($event) {\n    this.inEditMode = false;\n    this.saveEvent.emit($event);\n  }\n}\n","module.exports = \".timelinePicker {\\n  width: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n\\n.timelinePicker .mat-form-field {\\n  width: 130px;\\n}\\n\\n.clock {\\n  margin-right: 20px;\\n  margin-top: 16px;\\n  display: inline-block;\\n}\\n\\n.timelineInputs {\\n  width: 100%;\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n}\\n\\n.inputTitle {\\n  width: 100%;\\n}\\n\\n.mat-radio-button {\\n  margin: 5px;\\n}\\n\\n.mat-button-toggle-group {\\n  height: 20px !important;\\n}\\n\\n.mat-button-toggle {\\n  width: 50px !important;\\n}\\n\\n.mat-card {\\n  min-width: 15px;\\n  min-height: 15px;\\n  padding: 0px;\\n}\\n\\n.inputDescription {\\n  width: 100%;\\n}\\n\\n.mat-dialog-actions {\\n  float: right;\\n}\\n\\ninput {\\n  height: 20px;\\n}\"","module.exports = \"<div class=\\\"timelinePicker\\\">\\n  <div class=\\\"clock\\\">\\n    <mat-icon>access_time</mat-icon>\\n  </div>\\n  <div class=\\\"timelineInputs\\\">\\n    <mat-form-field>\\n      <input matInput [matDatepicker]=\\\"datePicker\\\" placeholder=\\\"Date\\\" [formControl]=\\\"dateFormControl\\\"\\n        (click)=\\\"datePicker.open()\\\" required>\\n      <mat-error *ngIf=\\\"dateFormControl.invalid\\\">Invalid date</mat-error>\\n      <mat-datepicker #datePicker></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"time\\\" matInput [formControl]=\\\"timeFormControl\\\" placeholder=\\\"Time\\\" [matAutocomplete]=\\\"auto\\\" required>\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let time of listOfTimes\\\" [value]=\\\"time[24]\\\">\\n          {{time[12]}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-content>\\n  <mat-form-field class=\\\"inputTitle\\\">\\n    <input matInput [(ngModel)]=\\\"userTitle\\\" placeholder=\\\"Add title\\\" required id=\\\"dialogTitle\\\">\\n    <mat-error>Please enter a title.</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"inputDescription\\\">\\n    <textarea matInput [(ngModel)]=\\\"userDescription\\\" placeholder=\\\"Add description\\\" id=\\\"dialogDescription\\\"></textarea>\\n  </mat-form-field>\\n  <div class=\\\"colorPicker\\\">\\n    <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"selectedColor\\\" value=\\\"BOSTON_YELLOW\\\">\\n      <mat-button-toggle *ngFor=\\\"let color of listOfColors\\\" [value]=\\\"color\\\">\\n        <mat-card style.backgroundColor=\\\"{{color}}\\\"></mat-card>\\n      </mat-button-toggle>\\n    </mat-button-toggle-group>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onCancel()\\\" id=\\\"cancelButton\\\" class=\\\"cancelButton\\\">Cancel</button>\\n  <button [disabled]=\\\"findIncompleteFields()\\\" mat-raised-button (click)=\\\"onSave()\\\" color=\\\"primary\\\"\\n    id=\\\"saveButton\\\">Save</button>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Inject} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport * as Color from 'color';\nimport {DateTime} from 'luxon';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableGraphAnnotation} from 'src/app/graphtypes/customizable-graph/customizable-graph-annotation';\n// tslint:disable-next-line:max-line-length\nimport {BOSTON_BAY, BOSTON_GREEN, BOSTON_INDIGO, BOSTON_LAVENDER, BOSTON_PINK, BOSTON_PURPLE, BOSTON_YELLOW} from 'src/app/theme/bch_colors';\n\n@Component({\n  selector: 'app-customizable-timeline-dialog',\n  templateUrl: './customizable-timeline-dialog.component.html',\n  styleUrls: ['./customizable-timeline-dialog.component.css']\n})\n\n/**\n * A Dialog with a textarea input, used to set the description of points on the\n * CustomizableTimeline.\n */\n// TODO(b/121324544): Use existing libraries for the color and time picker.\nexport class CustomizableTimelineDialogComponent {\n  // The text input for this dialog box.\n  userTitle: string;\n\n  // The FormControl handling the Date selection for this dialog box.\n  dateFormControl: FormControl;\n\n  // The list of suggested times to display with the autocomplete.\n  listOfTimes = [];\n\n  // The list of colors the user will be able to choose from.\n  // These colors need to stay consistent with the colored styles in graph.css.\n  listOfColors = [\n    BOSTON_YELLOW, BOSTON_GREEN, BOSTON_INDIGO, BOSTON_BAY, BOSTON_PINK,\n    BOSTON_LAVENDER, BOSTON_PURPLE\n  ];\n\n  // The selected color in this dialog box.\n  selectedColor: string;\n\n  // The description input for this dialog box.\n  userDescription: string;\n\n  // The FormControl handling the time selection for this dialog box.\n  timeFormControl: FormControl;\n\n  // The date selected for this dialog box.\n  date: Date;\n\n  constructor(\n      public dialogRef: MatDialogRef<CustomizableTimelineDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.date = new Date(data.date);\n    this.dateFormControl = new FormControl(this.date);\n    const timeString = this.date.toLocaleTimeString(\n        [], {hour12: false, hour: '2-digit', minute: '2-digit'});\n    this.timeFormControl = new FormControl(timeString);\n    this.generateListOfTimes();\n    // Set the default selected color as yellow if unset, or find the BCH Color\n    // matching the selected color passed in.\n    this.selectedColor = data.color ?\n        this.listOfColors.find(c => c.hex() === data.color.hex()) :\n        BOSTON_YELLOW;\n    // Set the title if it is passed in.\n    if (data.title) {\n      this.userTitle = data.title;\n    }\n    // Set the description if it is passed in.\n    if (data.description) {\n      this.userDescription = data.description;\n    }\n  }\n\n  // Closes the dialog popup without saving the user input.\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  // Closes the dialog popup and saves user input.\n  onSave(): void {\n    this.dialogRef.close(new CustomizableGraphAnnotation(\n        DateTime.fromJSDate(this.getSelectedDate()),\n        this.userTitle,\n        this.userDescription,\n        Color.rgb(this.selectedColor),\n        ));\n  }\n\n  // Generates a list of times with 30-minute intervals, for the autocomplete\n  // time-picker.\n  private generateListOfTimes() {\n    const interval = 30;\n    const date = new Date();\n    date.setMinutes(0);\n    date.setHours(0);\n    for (let time = 0; time <= 24 * 60; time += interval) {\n      date.setHours(time / 60);\n      date.setMinutes(time % 60);\n      // We need the time to be in 12-hour format for the display, but 24-hour\n      // format for the actual value passed into the input of type \"time\".\n      this.listOfTimes.push({\n        12: date.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'}),\n        24: date.toLocaleTimeString(\n            [], {hour12: false, hour: '2-digit', minute: '2-digit'})\n      });\n    }\n  }\n\n  // Constructs a new Date based on user input.\n  private getSelectedDate(): Date {\n    const dateString =\n        new Date(this.dateFormControl.value).toLocaleDateString();\n    const date = new Date(dateString + ' ' + this.timeFormControl.value);\n    return date;\n  }\n\n  // Finds incomplete fields that are required and disables saving.\n  findIncompleteFields() {\n    return !this.userTitle || this.dateFormControl.hasError('required') ||\n        this.timeFormControl.hasError('required');\n  }\n}\n","module.exports = \"::ng-deep [class*=\\\"timeline\\\"] .c3-xgrid-focus {\\n  visibility: visible !important;\\n}\\n\\n::ng-deep .timeline .c3 {\\n  cursor: default !important;\\n}\\n\\n::ng-deep .inEditMode .timeline .c3 {\\n  cursor: pointer !important;\\n}\\n\\n/* Only display icons on flags in the CustomizableGraph if in edit mode. */\\n\\n::ng-deep app-customizable-graph.inEditMode .showIcon {\\n  visibility: visible !important;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-custom\\\"] {\\n  position: absolute;\\n  display: block;\\n  font-size: 11px;\\n  border-style: solid;\\n  padding: 3px;\\n  border-width: 1px;\\n  border-color: grey;\\n  border-radius: 3px;\\n  min-height: 25px;\\n  width: 160px;\\n  max-height: 100px;\\n  background-color: white;\\n  overflow: auto;\\n  color: white;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-whole\\\"] {\\n  position: absolute;\\n  display: block;\\n  min-height: 25px;\\n  width: 0px;\\n  max-height: 100px;\\n  border-left-style: solid;\\n  border-width: 1px;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-title-custom\\\"] {\\n  margin: 0px;\\n  font-size: small;\\n  text-align: center;\\n  max-width: 120px;\\n  display: inline-block;\\n  vertical-align: bottom;\\n  min-width: 120px;\\n  overflow: auto;\\n  margin-top: 5px;\\n  overflow-wrap: break-word;\\n}\\n\\n::ng-deep [class*=\\\"tooltip-details-custom\\\"] {\\n  display: none;\\n  overflow: auto;\\n  text-align: center;\\n  overflow-wrap: break-word;\\n  max-width: 120px;\\n}\\n\\n::ng-deep [id*=\\\"expand\\\"] {\\n  visibility: hidden;\\n  vertical-align: middle;\\n}\\n\\n::ng-deep [id*=\\\"delete\\\"] {\\n  visibility: hidden;\\n  vertical-align: middle;\\n}\\n\\n::ng-deep [id*=\\\"edit\\\"] {\\n  visibility: hidden;\\n  margin-top: 8px;\\n}\\n\"","module.exports = \"<app-card [attr.id]=\\\"id\\\" label=\\\"Custom Timeline\\\" [isDraggable]=\\\"false\\\" [isEditable]=\\\"true\\\" [isRemovable]=\\\"true\\\"\\n  color=\\\"transparent\\\" (renderEvent)=\\\"this.renderContainedGraph()\\\" (editEvent)=\\\"this.inEditMode = true\\\"\\n  (saveEvent)=\\\"this.inEditMode = false\\\" (removeEvent)=\\\"remove()\\\" [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n  <ng-container class=\\\"legends-block\\\">\\n    <div *ngIf=\\\"inEditMode\\\">\\n      Click on this graph to add a flag for anything you want to keep track of.\\n    </div>\\n  </ng-container>\\n  <div fxFlex=\\\"row\\\" class=\\\"contents-block\\\">\\n    <app-customizable-graph class=\\\"timeline\\\" [data]=\\\"this.data\\\" [dateRange]=\\\"this.dateRange\\\" [inEditMode]=\\\"inEditMode\\\"\\n      (pointsChanged)=\\\"pointsChanged($event)\\\" [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n    </app-customizable-graph>\\n  </div>\\n</app-card>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// tslint:disable-next-line:max-line-length\nimport {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Interval} from 'luxon';\nimport {FhirService} from 'src/app/fhir.service';\nimport {CustomizableData} from 'src/app/graphdatatypes/customizabledata';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {GraphComponent} from 'src/app/graphtypes/graph/graph.component';\n\n\n@Component({\n  selector: 'app-customizable-timeline',\n  templateUrl: './customizable-timeline.component.html',\n  styleUrls: ['./customizable-timeline.component.css']\n})\n\n/**\n * The customizable timeline lets the user plot any events they'd like to keep\n * track of as little flags along a timeline.\n */\nexport class CustomizableTimelineComponent implements OnChanges {\n  // The GraphComponent this card holds.\n  @ViewChild(GraphComponent) containedGraph!: GraphComponent<GraphData>;\n\n  // The unique ID for this displayed card.\n  @Input() id: string;\n\n  // Over which time interval the card should display data\n  @Input() dateRange: Interval;\n  //  Data stored before deletion of the card. This is separate from this.data\n  //  to avoid unnecessary re-rendering of the graph.\n  @Input() deletedData: any;\n\n  // An event indicating that the event lines displayed on all other charts need\n  // to be updated.\n  @Output()\n  updateEventLines =\n      new EventEmitter<{[key: string]: string | CustomizableData}>();\n\n  /** Propogate remove events up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  // The data for the graph contained.\n  data: CustomizableData;\n\n  // Whether or not this CustomizableTimeline is being edited.\n  inEditMode = false;\n\n  constructor(private fhirService: FhirService) {\n    this.data = CustomizableData.defaultEmptySeries();\n    this.renderContainedGraph();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.deletedData && changes.deletedData.currentValue) {\n      this.data = this.deletedData;\n    }\n  }\n\n  // Render the contained graph in the event of a resize.\n  renderContainedGraph() {\n    if (this.containedGraph && this.containedGraph.chart) {\n      this.inEditMode = false;\n      this.containedGraph.regenerateChart();\n    }\n  }\n\n  // Listens for an event indicating that the points on the CustomizableGraph\n  // have been changed, and emits an event with the modified eventlines\n  // displayed on all other charts.\n  pointsChanged($event) {\n    this.updateEventLines.emit({data: this.data, id: this.id});\n  }\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    this.removeEvent.emit({id: this.id, value: this.data});\n  }\n}\n","module.exports = \".legend {\\n  cursor: pointer;\\n}\\n\\n/* This is the color swatch for the legends.*/\\n\\n.legend span {\\n  border-style: solid !important;\\n  height: 7px;\\n  margin: 3px;\\n  vertical-align: center;\\n  width: 7px;\\n}\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, SimpleChanges, ViewChildren} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'color';\nimport {Interval} from 'luxon';\nimport {DisplayGrouping} from 'src/app/clinicalconcepts/display-grouping';\nimport {ResourceCodesForCard} from 'src/app/clinicalconcepts/resource-code-manager';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {LabeledSeries} from 'src/app/graphdatatypes/labeled-series';\n\nimport {FhirService} from '../../fhir.service';\nimport {ChartType, GraphComponent} from '../../graphtypes/graph/graph.component';\nimport * as Colors from '../../theme/bch_colors';\nimport {Card} from '../card';\n\n/**\n * This card holds a label, one or more graphs on one or more axes, and a\n * dragger handle.\n */\n@Component({\n  selector: 'app-multigraphcard',\n  styleUrls: ['../legendstyles.css'],\n  templateUrl: './multigraphcard.html',\n})\n\nexport class MultiGraphCardComponent implements OnInit, OnChanges {\n  // The GraphComponents this card holds.\n  @ViewChildren(GraphComponent)\n  containedGraphs!: QueryList<GraphComponent<GraphData>>;\n\n  @Input() id: string;\n\n  // Over which time interval the card should display data\n  @Input() dateRange: Interval;\n\n  // The ResourceCodeGroups displayed on this card.\n  @Input() resourceCodeGroups: ResourceCodesForCard;\n\n  // The format of each object in the array is an object representing a line\n  // drawn on the chart, that has a value, text, and class field. The value\n  // field represents the x-position of the line to be drawn, while the class\n  // represents the class name, and the text represents the text displayed near\n  // the line.\n  @Input() eventlines: Array<{[key: string]: number | string}>;\n\n  /** Propogate remove up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  // The label for this graphcard.\n  label: string;\n\n  /**\n   * The units text for this card. Blank if the axes have more than one unit.\n   */\n  unitsLabel = '';\n\n  // Holds the color corresponding to this card.\n  color: Color =\n      Colors.BOSTON_WARM_GRAY;  // Default color for a card component.\n\n  // The Card holding the Axes to display on this MultiGraphCard.\n  card: Card;\n\n  // Hold an instance of this enum so the HTML template can reference it.\n  ChartType: typeof ChartType = ChartType;\n\n  // Holds a timer for when the chart should be resized.\n  private resizeTimer;\n  private readonly RESIZE_WAIT = 250;\n\n  // Holds the display groups for the legend.\n  uniqueDisplayGroups = new Array<DisplayGrouping>();\n\n  readonly userEditable = false;\n\n  constructor(\n      private fhirService: FhirService, private sanitizer: DomSanitizer) {}\n\n  ngOnInit() {\n    this.initializeData();\n  }\n\n  private initializeData() {\n    this.card = new Card(\n        this.fhirService, this.resourceCodeGroups, this.dateRange,\n        this.sanitizer);\n    if (this.resourceCodeGroups) {\n      this.label = this.resourceCodeGroups.label;\n      this.color = this.resourceCodeGroups.displayGrouping.fill;\n      this.getLabelText().then(lblText => {\n        this.unitsLabel = lblText;\n      });\n      if (this.card.axes.length > 1) {\n        this.setRegions();\n      }\n    }\n  }\n\n  // Any time the data range changes, we need to re-request the data for the\n  // specified range.\n  ngOnChanges(changes: SimpleChanges) {\n    const dateRangeChange = changes['dateRange'];\n    if (dateRangeChange &&\n        dateRangeChange.previousValue !== dateRangeChange.currentValue) {\n      this.initializeData();\n    }\n  }\n\n  // This function is called upon resize to re-render all the contained graphs\n  // so they snap to the correct size.\n  renderContainedGraphs() {\n    const self = this;\n    const unique = new Set<DisplayGrouping>();\n    if (this.containedGraphs) {\n      // Wait until the resize is \"done\" to re-render each graph. This reduces\n      // choppy, computationally expensive re-renders as elements resize.\n      clearTimeout(this.resizeTimer);\n      this.resizeTimer = setTimeout(() => {\n        self.containedGraphs.forEach(graph => {\n          graph.regenerateChart();\n          Array.from(graph.displayGroupToSeries.keys()).forEach(group => {\n            unique.add(group);\n          });\n        });\n        this.uniqueDisplayGroups = Array.from(unique.keys());\n      }, this.RESIZE_WAIT);\n    }\n  }\n\n  /**\n   * Gets the label text for this card. If the axes have all matching units,\n   * it returns the units; otherwise it returns a blank string.\n   */\n  getLabelText(): Promise<string> {\n    return Promise.all(this.card.axes.map(axis => axis.getDataFromFhir()))\n        .then(dataArray => dataArray.map(data => data.series))\n        .then(seriesNestedArray => {\n          const flattened: LabeledSeries[] = [].concat(...seriesNestedArray);\n          return flattened.map(series => series.unit);\n        })\n        .then(allUnits => {\n          const units = new Set<string>(allUnits);\n          if (units.size === 1 && allUnits[0] !== undefined) {\n            return ' (' + allUnits[0] + ')';\n          } else {\n            this.updateAxisLabels();\n            return '';\n          }\n        });\n  }\n\n  /**\n   * If the axes on this card have different units, make sure that each\n   * axis displays its units on the y-axis, for clarity.\n   */\n  updateAxisLabels() {\n    return Promise.all(this.card.axes.map(axis => axis.getDataFromFhir()))\n        .then(() => {\n          for (const axis of this.card.axes) {\n            if (axis.data && axis.label && axis.data.series &&\n                axis.data.series.length > 0) {\n              axis.label += ' (' + axis.data.series[0].unit + ')';\n            }\n          }\n        });\n  }\n\n  /**\n   * Get all the regions for the axes on this card, and plot all the regions on\n   * every axis of the card.\n   */\n  setRegions() {\n    let allRegions = [];\n    Promise.all(this.card.axes.map(axis => axis.getDataFromFhir()))\n        .then(data => {\n          if (data.length > 1) {\n            for (const dataAxis of data) {\n              if (dataAxis.xRegions) {\n                allRegions = allRegions.concat(dataAxis.xRegions);\n              }\n            }\n          }\n        })\n        .then(x => {\n          return Promise\n              .all(this.card.axes.map(async function(axis) {\n                return {data: await axis.getDataFromFhir(), axis: axis};\n              }))\n              .then(d => {\n                d.forEach(data => {\n                  data.data.xRegions =\n                      allRegions.filter(region => (region.axis === 'x'));\n                  data.axis.data = data.data;\n                });\n                this.containedGraphs.forEach(graph => graph.regenerateChart());\n              });\n        });\n  }\n\n  focusOnDisplayGroup(displayGroup: DisplayGrouping) {\n    this.containedGraphs.forEach(graph => {\n      graph.focusOnDisplayGroup(displayGroup);\n    });\n  }\n\n  resetChart(displayGroup: DisplayGrouping) {\n    this.containedGraphs.forEach(graph => {\n      graph.resetChart(displayGroup);\n    });\n  }\n\n  // The events below need to get propogated up to the card container.\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    // We do not add a 'value' field because there is no internal value that\n    // needs to be restored when the user reverts a deletion.\n    this.removeEvent.emit({id: this.id});\n  }\n}\n","module.exports = \"<app-card [id]=\\\"id\\\" [color]=\\\"this.color.hsl().string()\\\" [label]=\\\"label + unitsLabel\\\"\\n  (onRender)=\\\"this.renderContainedGraphs()\\\" (removeEvent)=\\\"remove()\\\">\\n  <ng-container class=\\\"legends-block\\\">\\n    <ng-container *ngIf=\\\"uniqueDisplayGroups.length > 1\\\">\\n      <div fxLayout=\\\"row\\\" class=\\\"legend\\\" *ngFor=\\\"let displayGroup of uniqueDisplayGroups\\\"\\n        (mouseover)=\\\"focusOnDisplayGroup(displayGroup, $event)\\\" (mouseout)=\\\"resetChart(displayGroup, $event)\\\">\\n        <span [style.background-color]=\\\"displayGroup.fill.hsl().string()\\\"\\n          [style.border]=\\\"displayGroup.outline.hsl().string()\\\">\\n        </span>\\n        <div fxFlex class=\\\"mat-body\\\">{{displayGroup.label}}</div>\\n      </div>\\n    </ng-container>\\n  </ng-container>\\n  <div fxFlex fxLayout=\\\"column\\\" class=\\\"contents-block\\\">\\n    <div fxFlex *ngFor=\\\"let axis of card.axes\\\" fxShrink=\\\"0\\\" fxGrow=\\\"0\\\">\\n      <mat-spinner *ngIf=\\\"!axis.isResolved\\\" [diameter]=\\\"30\\\"></mat-spinner>\\n      <div *ngIf=\\\"axis.isResolved && axis.errorMessage\\\">\\n        {{axis.errorMessage}}\\n      </div>\\n      <ng-container *ngIf=\\\"axis.isResolved && !axis.errorMessage\\\" [ngSwitch]=\\\"axis.chartType\\\">\\n        <app-linegraph *ngSwitchCase=\\\"ChartType.LINE\\\" [data]=\\\"axis.data\\\" [dateRange]=\\\"this.dateRange\\\"\\n          [eventlines]=\\\"this.eventlines\\\" [axisLabel]=\\\"axis.label\\\"></app-linegraph>\\n        <app-scatterplot *ngSwitchCase=\\\"ChartType.SCATTER\\\" [data]=\\\"axis.data\\\" [dateRange]=\\\"this.dateRange\\\"\\n          [eventlines]=\\\"this.eventlines\\\" [axisLabel]=\\\"axis.label\\\"></app-scatterplot>\\n        <app-stepgraph class=\\\"stepgraph\\\" *ngSwitchCase=\\\"ChartType.STEP\\\" [data]=\\\"axis.data\\\" [dateRange]=\\\"this.dateRange\\\"\\n          [eventlines]=\\\"this.eventlines\\\" [axisLabel]=\\\"axis.label\\\">\\n        </app-stepgraph>\\n        <app-microbio-graph *ngSwitchCase=\\\"ChartType.MICROBIO\\\" [data]=\\\"axis.data\\\" [dateRange]=\\\"this.dateRange\\\"\\n          [eventlines]=\\\"this.eventlines\\\" [axisLabel]=\\\"axis.label\\\"></app-microbio-graph>\\n      </ng-container>\\n    </div>\\n  </div>\\n</app-card>\\n\"","module.exports = \"<app-card [id]=\\\"id\\\" [isEditable]=\\\"true\\\" (removeEvent)=\\\"remove()\\\" (editEvent)=\\\"edit()\\\" (saveEvent)=\\\"save()\\\"\\n  [ngClass]=\\\"{'inEditMode': inEditMode}\\\">\\n  <ng-container class=\\\"contents-block\\\">\\n    <mat-form-field style=\\\"width: 95%;\\\">\\n      <textarea #textArea matInput matTextareaAutosize placeholder=\\\"Add annotation here.\\\" [disabled]=\\\"!inEditMode\\\"\\n        (change)=\\\"updateValue()\\\" [(ngModel)]=\\\"noteString\\\">\\n    </textarea>\\n      <mat-hint> {{getHintText()}} </mat-hint>\\n    </mat-form-field>\\n  </ng-container>\\n</app-card>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, ElementRef, EventEmitter, Input, Output, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-textboxcard',\n  templateUrl: './textboxcard.component.html',\n})\n\n/**\n * A Material Card that displays a label, a textbox, and a draggable handle\n * in a row.\n */\nexport class TextboxcardComponent {\n  @ViewChild('textArea') textAreaElement: ElementRef;\n  @Input() id: string;\n\n  /** Propogate remove events up to the card container.  */\n  @Output() removeEvent = new EventEmitter();\n\n  // Holds the text typed in the input field of the textbox.\n  @Input() noteString: string;\n\n  inEditMode = false;\n\n  updateValue() {\n    this.textAreaElement.nativeElement.innerHTML = this.noteString;\n  }\n\n  // The events below need to get propogated up to the card container.\n\n  // Called when the user clicks the trashcan button on the card.\n  remove() {\n    // We pass a 'value' field with the contents of the textbox so that, in case\n    // of restoration of a deleted textbox, the previous value can be displayed.\n    this.removeEvent.emit({id: this.id, value: this.noteString});\n  }\n\n  edit() {\n    this.inEditMode = true;\n  }\n\n  save() {\n    this.inEditMode = false;\n  }\n\n  getHintText() {\n    if (this.inEditMode) {\n      return 'Click the save button to save annotation';\n    } else {\n      return 'Click the edit button to modify annotation';\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {DiagnosticReport} from '../fhir-data-classes/diagnostic-report';\n\nimport {CachedResourceCodeGroup, ResourceCode} from './resource-code-group';\n\n/**\n * Holds BCHMicrobioCode codes. BCH provides a custom mapping for their\n * microbiology data since retrieving it is not yet supported in the Cerner\n * FHIR API implementation.\n */\nexport class BCHMicrobioCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://cerner.com/bch_mapping/';\n\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n}\n\n/**\n * Represents one or more LOINC codes that should be displayed together. In the\n * case of multiple LOINC codes in a group, you should provide a label for that\n * group.\n */\nexport class BCHMicrobioCodeGroup extends\n    CachedResourceCodeGroup<DiagnosticReport> {\n  /**\n   * Gets a list of DiagnosticReports corresponding to this code group. Each\n   * item in the list has the same specimen type as the label of this group, and\n   * each report's list of results has a code that is in this group's list of\n   * codes.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<DiagnosticReport[]> {\n    return this.fhirService.getDiagnosticReports(this, dateRange)\n        .then(result => {\n          return result;\n        });\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   * @override\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return this.fhirService.diagnosticReportsPresentWithCodes(\n        this, APP_TIMESPAN);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\nimport * as BCHColors from '../theme/bch_colors';\n\n\nexport const ALL_DISPLAY_GROUPS_MAP = new Map<string, DisplayGrouping>();\n\n/**\n * Represents the category that a certain chart's data might fall into, for\n * example a MedicationConcept such as \"Antibiotic\" or a ClinicalConcept such as\n * \"Lab result\"\n */\nexport class DisplayGrouping {\n  static colorIdx = 0;\n  fill: Color;\n  outline: Color;\n\n  constructor(readonly label: string, color?: Color, outline?: Color) {\n    if (ALL_DISPLAY_GROUPS_MAP.has(label)) {\n      return ALL_DISPLAY_GROUPS_MAP.get(label);\n    }\n\n    let tempColor: Color = color;\n    if (color === undefined) {\n      tempColor = BCHColors.getDataColors()[DisplayGrouping.colorIdx];\n      DisplayGrouping.colorIdx =\n          (DisplayGrouping.colorIdx + 1) % BCHColors.getDataColors().length;\n    }\n    this.fill = tempColor;\n    this.outline = outline ? outline : tempColor;\n    ALL_DISPLAY_GROUPS_MAP.set(label, this);\n  }\n}\n\n\nexport const labResult =\n    new DisplayGrouping('Lab Results', BCHColors.MATERIAL_GREEN);\nexport const vitalSign =\n    new DisplayGrouping('Vital Signs', BCHColors.MATERIAL_YELLOW);\nexport const culture =\n    new DisplayGrouping('Cultures', BCHColors.BOSTON_WARM_GRAY);\nexport const med =\n    new DisplayGrouping('Vancomycin and Gentamicin', BCHColors.MATERIAL_TEAL);\nexport const document = new DisplayGrouping('Document', BCHColors.BOSTON_BAY);\nexport const microbio =\n    new DisplayGrouping('Microbiology', BCHColors.MATERIAL_ORANGE);\n// We declare more DisplayGroupings related to Microbiology results that are\n// used to classify points on the Microbiology chart.\nexport const posPrelimMB = new DisplayGrouping(\n    'Check Result Preliminary', Color('#e4e2e2'), BCHColors.BOSTON_YELLOW);\nexport const negPrelimMB = new DisplayGrouping(\n    'Negative Preliminary', Color('#e4e2e2'), BCHColors.BOSTON_BLUE);\nexport const posFinalMB =\n    new DisplayGrouping('Check Result Final', BCHColors.BOSTON_YELLOW);\nexport const negFinalMB =\n    new DisplayGrouping('Negative Final', BCHColors.BOSTON_BLUE);\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {AnnotatedObservation} from '../fhir-data-classes/annotated-observation';\nimport {Observation} from '../fhir-data-classes/observation';\nimport {ObservationSet} from '../fhir-data-classes/observation-set';\nimport {FhirService} from '../fhir.service';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {DisplayGrouping} from './display-grouping';\nimport {ResourceCode} from './resource-code-group';\nimport {CachedResourceCodeGroup} from './resource-code-group';\n\n/**\n * Holds LOINC codes.\n */\nexport class LOINCCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://loinc.org';\n\n  dataAvailableInAppTimeScope(fhirService: FhirService): Promise<boolean> {\n    return fhirService.observationsPresentWithCode(this, APP_TIMESPAN);\n  }\n}\n\n/**\n * Represents one or more LOINC codes that should be displayed together. In the\n * case of multiple LOINC codes in a group, you should provide a label for that\n * group.\n */\nexport class LOINCCodeGroup extends CachedResourceCodeGroup<ObservationSet> {\n  constructor(\n      /** FHIR service for retrieving data */\n      readonly fhirService: FhirService,\n      /** The label for this resource code group. */\n      readonly label: string,\n      /** The resource codes to display on this Axis. */\n      readonly resourceCodes: ResourceCode[],\n      /** The display grouping for this resource code group. */\n      readonly displayGrouping: DisplayGrouping,\n      /** The chart type for this Axis. */\n      readonly chartType: ChartType,\n      /** Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: [number, number],\n      /**\n       * Whether or not to force the axis bounds, even if a smaller range\n       * containing all the data can be calculated.\n       */\n      readonly forceDisplayBounds = false,\n      /**\n       * The (optional) function that will make an observation into an\n       * AnnotatedObservation so that the graph can show the appropriate\n       * tooltip.\n       */\n      readonly makeAnnotated?:\n          (observation: Observation,\n           dateRange: Interval) => Promise<AnnotatedObservation>) {\n    super(\n        fhirService, label, resourceCodes, displayGrouping, chartType,\n        displayBounds, forceDisplayBounds);\n\n    // If there's only one resource code in the group, just use its display\n    // bounds as the axis bounds.\n    if (!displayBounds && resourceCodes.length === 1) {\n      this.displayBounds = resourceCodes[0].displayBounds;\n    }\n  }\n\n  /**\n   * Gets one ObservationSet for each LOINCCode in this group, and returns\n   * a list of those ObservationSets.\n   * If an Observation contains \"inner components\", this returns separate\n   * ObservationSets for those LOINCCodes, provided that they are mapped.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<ObservationSet[]> {\n    let maxPrecision = 0;\n    return this.fhirService.getObservationsForCodeGroup(this, dateRange)\n        .then(\n            observationDoubleArray => {\n              // Unnest the inner and outer observations into one flattened\n              // array per concept group.\n              return observationDoubleArray.map(\n                  obsSingleArray =>\n                      Array.from(obsSingleArray)\n                          .reduce((acc: Observation[], observation) => {\n                            // The outer component may not have a\n                            // value or result.\n                            if (observation.value || observation.result ||\n                                observation.interpretation) {\n                              acc.push(observation);\n                            }\n                            // Add separate ObservationLists for\n                            // each inner component.\n                            if (observation.innerComponents.length > 0) {\n                              for (const innerComponent of\n                                       observation.innerComponents) {\n                                acc.push(innerComponent);\n                              }\n                            }\n                            return acc;\n                          }, []));\n            },\n            rejection => {\n              // If there is any error with constructing an Observation for any\n              // code in this code group, throw the error.\n              throw rejection;\n            })\n        .then(flattened => {\n          const mapObs =\n              new Map<string, Array<Promise<AnnotatedObservation>>>();\n          flattened.forEach(conceptList => {\n            for (const observation of conceptList) {\n              // From this point on, each observation should have a value,\n              // result, or interpretation. All observations that just had\n              // innerComponents have been flattened out.\n              let obsList = mapObs.get(observation.label);\n              if (!obsList) {\n                obsList = new Array<Promise<AnnotatedObservation>>();\n              }\n              if (observation.precision > maxPrecision) {\n                maxPrecision = observation.precision;\n              }\n              if (this.makeAnnotated) {\n                obsList.push(this.makeAnnotated(observation, dateRange));\n              } else {\n                obsList.push(\n                    Promise.resolve(new AnnotatedObservation(observation)));\n              }\n              mapObs.set(observation.label, obsList);\n            }\n          });\n          this.precision = maxPrecision;\n          return Array.from(mapObs.values());\n        })\n        .then(\n            doubleAnnotationArray => doubleAnnotationArray.map(\n                singleAnnotationArray =>\n                    Promise.all(singleAnnotationArray)\n                        .then(\n                            resolvedAnnotations =>\n                                new ObservationSet(resolvedAnnotations))))\n        .then(observationSetArray => Promise.all(observationSetArray));\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {FhirService} from '../fhir.service';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {DisplayGrouping} from './display-grouping';\n\n/**\n * A code specifying the medication or observation type as well as the specific\n * medication or observation.\n */\nexport abstract class ResourceCode {\n  /**\n   * The string that holds the FHIR address for the coding system. Every\n   * extending class should override this constant, although there is no way\n   * we can syntactically enforce this in Typescript.\n   */\n  static readonly CODING_STRING;\n\n  private static readonly CODE_STRING_TO_CODE:\n      {[code: string]: ResourceCode} = {};\n\n  static fromCodeString(code: string): ResourceCode {\n    return ResourceCode.CODE_STRING_TO_CODE[code];\n  }\n\n  constructor(\n      readonly codeString: string, readonly displayGrouping: DisplayGrouping,\n      readonly label: string, readonly showByDefault = false,\n      /* Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: [number, number],\n      /* Whether or not to force the axis bounds, even if a smaller range\n         containing all the data can be calculated. */\n      readonly forceDisplayBounds = false) {\n    ResourceCode.CODE_STRING_TO_CODE[codeString] = this;\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   */\n  abstract dataAvailableInAppTimeScope(fhirService: FhirService):\n      Promise<boolean>;\n}\n\n/**\n * A class that holds a group of resource codes that should be displayed on\n * the same Axis together.\n */\nexport class ResourceCodeGroup {\n  /* Whether or not to show this ResourceCodeGroup by default. This is true\n   * when any ResourceCode in the group should be shown as default.*/\n  readonly showByDefault: boolean;\n\n  // The number of decimal places to show for any value associated with this\n  // resource group. The default is 0, to minimize errors caused by unnecessary\n  // trailing zeros.\n  precision = 0;\n\n  constructor(\n      readonly fhirService: FhirService,\n      /** The label for this resource code group. */\n      readonly label: string,\n      /** The resource codes to display on this Axis. */\n      readonly resourceCodes: ResourceCode[],\n      /** The display grouping for this resource code group. */\n      readonly displayGrouping: DisplayGrouping,\n      /** The chart type for this Axis. */\n      readonly chartType: ChartType,\n      /** Absolute axis bounds for the graph displaying this ResourceCode. */\n      readonly displayBounds?: number[],\n      /**\n       * Whether or not to force the axis bounds, even if a smaller range\n       * containing all the data can be calculated.\n       */\n      readonly forceDisplayBounds = false) {\n    this.showByDefault = this.resourceCodes.some(code => code.showByDefault);\n  }\n\n  /**\n   * Returns whether there is any data available for this ResourceCode within\n   * the fixed timescope of this app.\n   */\n  dataAvailableInAppTimeScope(): Promise<boolean> {\n    return Promise\n        .all(this.resourceCodes.map(\n            rc => rc.dataAvailableInAppTimeScope(this.fhirService)))\n        .then(bools => bools.reduce((result, next) => result = result || next));\n  }\n}\n\n/**\n * CachedResourceCodeGroups cache their retrieved data in a dictionary keyed\n * by time interval.\n * @param T The type of data to be cached.\n */\nexport abstract class CachedResourceCodeGroup<T> extends ResourceCodeGroup {\n  private dataCache = new Map<Interval, T[]>();\n\n  /**\n   * Looks in the cache to see if data for this time interval exists. If not,\n   * calls the implementing class's getResourceFromFhir function and caches\n   * its data, then returns the data for the given time interval.\n   */\n  getResourceSet(dateRange: Interval): Promise<T[]> {\n    if (this.dataCache.has(dateRange)) {\n      return Promise.resolve(this.dataCache.get(dateRange));\n    } else {\n      return this.getResourceFromFhir(dateRange).then(\n          res => {\n            this.dataCache.set(dateRange, res);\n            return Promise.resolve(this.dataCache.get(dateRange));\n          },\n          rejection => {\n            // If there is any error with getting the resources for this\n            // ResourceCodeGroup, throw an error.\n            throw rejection;\n          });\n    }\n  }\n\n  /**\n   * This function should make the FHIR calls to get promises for the\n   * resources corresponding to this resource code group.\n   */\n  abstract getResourceFromFhir(dateRange: Interval): Promise<T[]>;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\nimport {Interval} from 'luxon';\n\nimport {LOINCCodeGroup} from '../clinicalconcepts/loinc-code';\nimport {AnnotatedObservation} from '../fhir-data-classes/annotated-observation';\nimport {Observation} from '../fhir-data-classes/observation';\nimport {FhirService} from '../fhir.service';\nimport {ChartType} from '../graphtypes/graph/graph.component';\n\nimport {BCHMicrobioCode, BCHMicrobioCodeGroup} from './bch-microbio-code';\nimport {DisplayGrouping, document, labResult, med, microbio, vitalSign} from './display-grouping';\nimport {LOINCCode} from './loinc-code';\nimport {ResourceCodeGroup} from './resource-code-group';\nimport {RXNORM_CODES, RxNormCode} from './rx-norm';\nimport {RxNormCodeGroup} from './rx-norm-group';\n\n// We declare a new LOINCCode referencing a DocumentReference, but do not\n// include it in the groupings below because it is not graphed/displayed in the\n// configuration sidebar.\nexport const documentReferenceLoinc =\n    new LOINCCode('68608-9', document, 'Summary', true);\n\nconst ovaAndParasiteExam = new BCHMicrobioCode(\n    'OVAANDPARASITEEXAM', microbio, 'Ovo and Parasite Exam', false);\n\nconst salmonella = new BCHMicrobioCode(\n    'SALMONELLAANDSHIGELLACULTURE', microbio, 'Salmonella and Shigella Culture',\n    false);\n\nexport const diastolicBP = new LOINCCode(\n    '8462-4', vitalSign, 'Diastolic Blood Pressure', true, [25, 150]);\nexport const systolicBP = new LOINCCode(\n    '8480-6', vitalSign, 'Systolic Blood Pressure', true, [30, 250]);\n\nexport class ResourceCodesForCard {\n  // Each ResourceCodeGroup represents data series on one axis. The type of\n  // ResourceCodeGroups can be mixed here, hence the vague typing.\n  readonly resourceCodeGroups: ResourceCodeGroup[];\n\n  // The label for the card.\n  readonly label: string;\n\n  // The display grouping for the card.\n  readonly displayGrouping: DisplayGrouping;\n\n  // Whether there is data to display for any of the resource code groups.\n  dataAvailable: boolean;\n\n  constructor(\n      resourceCodeGroups: ResourceCodeGroup[], label: string,\n      displayGrouping: DisplayGrouping) {\n    // Throw an error if the DisplayGroupings don't match each other or the\n    // provided DisplayGrouping for the card.\n    if (!resourceCodeGroups.every(x => x.displayGrouping === displayGrouping)) {\n      throw Error(\n          'All ResourceCodeGroups in the same card must ' +\n          'have the same DisplayGrouping');\n    }\n    this.resourceCodeGroups = resourceCodeGroups;\n    this.label = label;\n    this.displayGrouping = displayGrouping;\n    Promise\n        .all(this.resourceCodeGroups.map(\n            rsc => rsc.dataAvailableInAppTimeScope()))\n        .then(rsc => {\n          const flattened: boolean[] = [].concat.apply([], rsc);\n          this.dataAvailable =\n              flattened.reduce((prev, curr) => prev || curr, false);\n        });\n  }\n}\n\n/**\n * ResourceCodeManager is the centralized class where other components can\n * look to find an exhaustive listing of all the resource code groups that the\n * application may display.\n * TODO(b/119185198): Eventually RxNorms should be listed here, too.\n */\n@Injectable()\nexport class ResourceCodeManager {\n  private static resourceCodeGroups: ResourceCodesForCard[];\n  private static displayGroupMapping:\n      Map<DisplayGrouping, ResourceCodesForCard[]>;\n\n  private static readonly labLoincs = [\n    // Pull all the defaults to the top.\n    new LOINCCode(\n        '1988-5', labResult, 'C-Reactive Protein', true, [0, 100], true),\n    new LOINCCode('4537-7', labResult, 'ESR', true, [0, 200]),\n    new LOINCCode('3094-0', labResult, 'BUN', true),\n    new LOINCCode('2160-0', labResult, 'Creatinine', true),\n    new LOINCCode('1742-6', labResult, 'ALT', true),\n    new LOINCCode('1920-8', labResult, 'AST', true),\n    new LOINCCode('6768-6', labResult, 'Alkaline Phosphatase', true),\n    new LOINCCode('1968-7', labResult, 'Bilirubin, Direct', true),\n    new LOINCCode('1975-2', labResult, 'Bilirubin, Total', true),\n    new LOINCCode('3084-1', labResult, 'Uric acid', false)\n  ];\n\n  private static readonly vitalLoincs = [\n    new LOINCCode('8310-5', vitalSign, 'Body temperature', true, [35, 41]),\n    new LOINCCode('8867-4', vitalSign, 'Heart Rate', true, [20, 300]),\n    new LOINCCode('9279-1', vitalSign, 'Respiratory Rate', true, [6, 100]),\n    new LOINCCode('55284-4', vitalSign, 'Blood pressure', true, [25, 250]),\n    new LOINCCode(\n        '59408-5', vitalSign, 'Oxygen Saturation', true, [5, 100], true)\n  ];\n\n  private static readonly gentMonitoring = [\n    new LOINCCode('35668-3', labResult, 'Gent Level'),\n    new LOINCCode('3663-2', labResult, 'Gent Pk'),\n    new LOINCCode('31092-0', labResult, 'Gent Tr')\n    // TODO: add Gentamicin, Peak/Post Q24H\n  ];\n\n  private static readonly vancMonitoring = [\n    new LOINCCode('20578-1', labResult, 'Vanc Level', true),\n    new LOINCCode('4092-3', labResult, 'Vanc Tr', true),\n    // TODO: add Vanc Peak\n  ];\n\n\n  private static readonly urineGroup = [\n    new LOINCCode('5769-5', labResult, 'Bacteria, Urinalysis'),\n    new LOINCCode('50551-1', labResult, 'Bilirubin, Urinalysis'),\n    new LOINCCode('5794-3', labResult, 'Blood, Urinalysis'),\n    new LOINCCode('21033-6', labResult, 'Budding Yeast, Urinalysis'),\n    new LOINCCode('25157-9', labResult, 'Epithelial Cast, Urinalysis'),\n    new LOINCCode('50558-6', labResult, 'Nitrite, Urinalysis'),\n    // TODO: add Protein, Urinalysis\n    new LOINCCode('58449-0', labResult, 'Red Blood Cell Clump, Urinalysis'),\n    new LOINCCode('13945-1', labResult, 'Red Cells, Urinalysis'),\n    // TODO: add Squamous Epithelial, Urinalysis\n    new LOINCCode('50563-6', labResult, 'Urobilinogen, Urinalysis'),\n    new LOINCCode('5799-2', labResult, 'WBC Enzyme, Urinalysis'),\n    new LOINCCode('33825-1', labResult, 'WBC Clump, Urinalysis'),\n    // TODO: add White Cells, Urinalysis\n    // TODO: add yeast, Urinalysis\n  ];\n\n  // TODO(b/117431412): Figure out which microbio concepts to display.\n  private static stoolGroup = [\n    new BCHMicrobioCode(\n        'OVAANDPARASITEEXAM', microbio, 'Ovo and Parasite Exam', true),\n    new BCHMicrobioCode(\n        'SALMONELLAANDSHIGELLACULTURE', microbio,\n        'Salmonella and Shigella Culture', true)\n  ];\n\n  private static npSwabGroup = [\n    new BCHMicrobioCode(\n        'INFLUENZAABRSVPCRWASUBTYPEQUAL', microbio,\n        'nfluenza A/B, RSV PCR w/A Subtype, QuaL', true),\n    new BCHMicrobioCode(\n        'ADENOVIRUSPCRRESPQUAL', microbio, 'Adenovirus PCR, Resp, QuaL', true),\n    new BCHMicrobioCode(\n        'VIRALDFARESPIRATORY', microbio, 'Viral DFA Respiratory', true)\n  ];\n\n  private static typeToPairs: Array<[DisplayGrouping, LOINCCode[]]> = [\n    [vitalSign, ResourceCodeManager.vitalLoincs],\n    [labResult, ResourceCodeManager.labLoincs],\n  ];\n\n  constructor(private fhirService: FhirService) {\n    if (!ResourceCodeManager.resourceCodeGroups) {\n      const codeGroups: ResourceCodesForCard[] = [];\n      // All the labs and vitals are linecharts and displayed on\n      // independent axes.\n      for (const [conceptGroup, codePairs] of ResourceCodeManager.typeToPairs) {\n        for (const loinc of codePairs) {\n          codeGroups.push(new ResourceCodesForCard(\n              [new LOINCCodeGroup(\n                  this.fhirService, loinc.label, new Array(loinc), conceptGroup,\n                  ChartType.LINE, loinc.displayBounds,\n                  loinc.forceDisplayBounds)],\n              loinc.label, conceptGroup));\n        }\n      }\n\n      const cbc = [\n        new LOINCCodeGroup(\n            this.fhirService, 'Hematocrit',\n            [new LOINCCode('4544-3', labResult, 'Hematocrit', false, [10, 70])],\n            labResult, ChartType.LINE, [10, 70]),\n        new LOINCCodeGroup(\n            this.fhirService, 'Hemoglobin',\n            [new LOINCCode('718-7', labResult, 'Hemoglobin', false, [0.5, 30])],\n            labResult, ChartType.LINE, [0.5, 30]),\n        // TODO: add Platelet\n        new LOINCCodeGroup(\n            this.fhirService, 'WBC',\n            [new LOINCCode('26464-8', labResult, 'WBC', false)], labResult,\n            ChartType.LINE),\n      ];\n      codeGroups.push(new ResourceCodesForCard(cbc, 'CBC', labResult));\n\n      const cbcWBC = [\n        new LOINCCodeGroup(\n            this.fhirService, 'Neutrophil/Band',\n            [new LOINCCode(\n                '35332-6', labResult, 'Neutrophil/Band', true, [0, 100], true)],\n            labResult, ChartType.LINE, [0, 100], true),\n        // TODO: add Immature Granulocytes\n        // TODO: add Lymphocyte\n        new LOINCCodeGroup(\n            this.fhirService, 'Monocyte',\n            [new LOINCCode(\n                '5905-5', labResult, 'Monocyte', false, [0, 100], true)],\n            labResult, ChartType.LINE, [0, 100], true),\n        new LOINCCodeGroup(\n            this.fhirService, 'Eosinophil',\n            [new LOINCCode(\n                '713-8', labResult, 'Eosinophil', false, [0, 100], true)],\n            labResult, ChartType.LINE, [0, 100], true),\n        new LOINCCodeGroup(\n            this.fhirService, 'Basophil',\n            [new LOINCCode(\n                '706-2', labResult, 'Basophil', false, [0, 100], true)],\n            labResult, ChartType.LINE, [0, 100], true),\n\n      ];\n      codeGroups.push(\n          new ResourceCodesForCard(cbcWBC, 'CBC White Blood Cell', labResult));\n\n      // TODO(b/118874488): Allow for configuration of RxNormCodeGroups.\n      const medsSummaryGroup = RXNORM_CODES;\n      codeGroups.push(new ResourceCodesForCard(\n          [new RxNormCodeGroup(\n              this.fhirService, 'Vancomycin & Gentamicin Summary',\n              medsSummaryGroup, med, ChartType.STEP)],\n          'Vancomycin & Gentamicin Summary', med));\n\n      // Drug monitoring should be a scatterplot, and the related concepts\n      // should be displayed on the same axes.\n      const vancRxNorm = new RxNormCodeGroup(\n          this.fhirService, 'Vancomycin', [RxNormCode.fromCodeString('11124')],\n          med, ChartType.SCATTER);\n\n      // Drug monitoring should be a scatterplot, and the related concepts\n      // should be displayed on the same axes.\n      codeGroups.push(new ResourceCodesForCard(\n          [\n            vancRxNorm,\n            new LOINCCodeGroup(\n                this.fhirService, 'Vancomycin Monitoring',\n                ResourceCodeManager.vancMonitoring, med, ChartType.SCATTER,\n                undefined,  // no meaningful y-axis ranges\n                false,\n                (observation: Observation, dateRange: Interval):\n                    Promise<AnnotatedObservation> => {\n                      return vancRxNorm.getResourceSet(dateRange)\n                          .then(rxNorms => {\n                            // We know that we're only pushing in one RxNorm\n                            // so it's safe to grab the first (and only) one in\n                            // the list.\n                            return rxNorms[0].orders;\n                          })\n                          .then(orderSet => {\n                            return AnnotatedObservation.forMedicationMonitoring(\n                                observation, orderSet);\n                          });\n                    })\n          ],\n          'Vancomycin', med));\n\n      codeGroups.push(new ResourceCodesForCard(\n          [\n            new RxNormCodeGroup(\n                this.fhirService, 'Medication Administrations',\n                [RxNormCode.fromCodeString('1596450')], med, ChartType.SCATTER),\n            new LOINCCodeGroup(\n                this.fhirService, 'Monitoring',\n                ResourceCodeManager.gentMonitoring, med, ChartType.SCATTER)\n          ],\n          'Gentamicin', med));\n\n\n      codeGroups.push(new ResourceCodesForCard(\n          [new LOINCCodeGroup(\n              this.fhirService, 'Urinalysis', ResourceCodeManager.urineGroup,\n              labResult, ChartType.SCATTER)],\n          'Urinalysis', labResult));\n\n      codeGroups.push(new ResourceCodesForCard(\n          [new BCHMicrobioCodeGroup(\n              this.fhirService, 'Stool', ResourceCodeManager.stoolGroup,\n              microbio, ChartType.MICROBIO)],\n          'Stool', microbio));\n\n      codeGroups.push(new ResourceCodesForCard(\n          [new BCHMicrobioCodeGroup(\n              this.fhirService, 'NP Swab', ResourceCodeManager.npSwabGroup,\n              microbio, ChartType.MICROBIO)],\n          'NP Swab', microbio));\n      ResourceCodeManager.resourceCodeGroups = codeGroups;\n    }\n\n    if (!ResourceCodeManager.displayGroupMapping) {\n      const mapping = new Map<DisplayGrouping, ResourceCodesForCard[]>();\n      for (const group of this.getResourceCodeGroups()) {\n        if (mapping.has(group.displayGrouping)) {\n          mapping.get(group.displayGrouping).push(group);\n        } else {\n          mapping.set(group.displayGrouping, [group]);\n        }\n      }\n      ResourceCodeManager.displayGroupMapping = mapping;\n    }\n  }\n\n  /**\n   * Returns the ResourceCodeGroups to be displayed. If the maps have already\n   * been constructed, returns the static variable holding the information.\n   * If not, constructs the maps and saves them into the static class variable,\n   * then returns.\n   */\n  getResourceCodeGroups(): ResourceCodesForCard[] {\n    return ResourceCodeManager.resourceCodeGroups;\n  }\n\n  /**\n   * Returns a map where the key is a clinical concept group and the value is\n   * a list of LOINC code groups belonging to the clinical concept group.\n   */\n  getDisplayGroupMapping(): Map<DisplayGrouping, ResourceCodesForCard[]> {\n    return ResourceCodeManager.displayGroupMapping;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Interval} from 'luxon';\nimport {CachedResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {MedicationAdministration} from '../fhir-data-classes/medication-administration';\nimport {MedicationOrder, MedicationOrderSet} from '../fhir-data-classes/medication-order';\n\nimport {RxNormCode} from './rx-norm';\n\n/**\n * Represents one or more RxNorm codes that should be displayed together. In the\n * case of multiple RxNorm codes in a group, you should provide a label for that\n * group.\n */\nexport class RxNormCodeGroup extends CachedResourceCodeGroup<RxNormCode> {\n  /**\n   * Fills out the order and administration information for each for each\n   * RxNormCode in this group, and returns a list of the populated RxNormCodes.\n   * This is a roundabout process because the Cerner implementation of the\n   * FHIR standard doesn't allow for searching MedicationOrders by RxNorm code,\n   * so we have to search for MedicationAdministrations by RxNorm code and work\n   * up from there.\n   */\n  getResourceFromFhir(dateRange: Interval): Promise<RxNormCode[]> {\n    return this.fhirService\n        .getMedicationAdministrationsWithCodes(this, dateRange)\n        .then(\n            medAdmins => {\n              const groupedByOrder =\n                  this.groupAdministrationsByOrderId(medAdmins);\n              return this.getMedicationOrdersAndMapToMed(groupedByOrder);\n            },\n            rejection => {\n              // If there are any errors constructing MedicationAdministrations\n              // or MedicationOrders for this RxNormCode[], throw the error.\n              throw rejection;\n            });\n  }\n\n  /**\n   * Takes a list of lists of MedicationAdministrations and groups them by their\n   * order IDs. Each list represents a set of MedicationAdministrations for a\n   * specific RxNorm, but they're not arranged by order. For example:\n   *\n   * [[admin1_rxnorm1_orderA, admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  [admin1_rxnorm3_orderD]]\n   *\n   * would yield:\n   *\n   * {orderA: [admin1_rxnorm1_orderA],\n   *  orderB: [admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  orderC: [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  orderD: [admin1_rxnorm3_orderD]\n   * }\n   * @param medAdmins A list of lists of MedicationAdministrations. See above.\n   * @returns A map of order IDs to a list of corresponding\n   *     MedicationAdministrations.\n   */\n  private groupAdministrationsByOrderId(medAdmins:\n                                            MedicationAdministration[][]):\n      Map<string, MedicationAdministration[]> {\n    let groupedByOrder = new Map<string, MedicationAdministration[]>();\n    for (const medAdminForDrug of medAdmins) {\n      // Group medication administrations by medication order.\n      groupedByOrder = medAdminForDrug.reduce(\n          (groups: Map<string, MedicationAdministration[]>,\n           medAdmin: MedicationAdministration) => {\n            // Append this administration to whatever order list it belongs to.\n            const orderId: string = medAdmin.medicationOrderId;\n            if (!groups.has(orderId)) {\n              groups.set(orderId, new Array<MedicationAdministration>());\n            }\n            groups.set(orderId, groups.get(orderId).concat(medAdmin));\n            return groups;\n          },\n          // Use whatever existed in groupedByOrder prior to this iteration as\n          // the basis for the reducer to add to.\n          groupedByOrder);\n    }\n    return groupedByOrder;\n  }\n\n  /**\n   * Transforms a map with keys of MedicationOrder IDs and values of\n   * MedicationAdministrations to a list of RxNormCodes, with the RxNormCodes\n   * containing their corresponding MedicationOrders, and the medicationOrders\n   * containing their corresponding MedicationAdministrations. For example:\n   *\n   * {orderA: [admin1_rxnorm1_orderA],\n   *  orderB: [admin2_rxnorm1_orderB, admin3_rxnorm1_orderB],\n   *  orderC: [admin1_rxnorm2_orderC, admin2_rxnorm2_orderC],\n   *  orderD: [admin1_rxnorm3_orderD]\n   * }\n   *\n   * would yield:\n   *\n   *  [RxNorm1 = {orders:\n   *     [OrderA {administrationsForOrder: [admin1_rxnorm1_orderA]},\n   *      OrderB {administrationsForOrder: [admin2_rxnorm1_orderB,\n   *                                        admin3_rxnorm1_orderB]}]}\n   *   RxNorm2 = {orders:\n   *      [OrderC {administrationsForOrder: [admin1_rxnorm2_orderC,\n   *                                         admin2_rxnorm2_orderC]}]}\n   *   RxNorm3 = {orders:\n   *      [OrderD {administrationsForOrder: [admin1_rxnorm3_orderD]}]}\n   *\n   * @param groupedByOrder A map with keys of MedicationOrder IDs and values of\n   *     MedicationAdministrations for those MedicationOrders.\n   * @returns A list of RxNormCodes with orders populated\n   * @throws Error if the incoming parameter has medication administrations that\n   *     did not come from the same order for the same med\n   */\n  private getMedicationOrdersAndMapToMed(\n      groupedByOrder: Map<string, MedicationAdministration[]>):\n      Promise<RxNormCode[]> {\n    const groupedByMed = new Map<RxNormCode, MedicationOrder[]>();\n    const allPromises = Array.from(groupedByOrder.keys()).map(orderId => {\n      return this.fhirService.getMedicationOrderWithId(orderId)\n          .then(\n              order => {\n                // We only have the MedicationAdministrations from within the\n                // specified time window, so we have to search again for all the\n                // MedicationAdministrations present for this order and assign\n                // them to the order.\n                return order.setMedicationAdministrations(this.fhirService);\n              },\n              rejection => {\n                // If there are any errors constructing MedicationOrders for\n                // this RxNormCode[], throw the error.\n                throw rejection;\n              })\n          .then(\n              (order: MedicationOrder) => {\n                // Verify all the administrations have the same RxNormCode and\n                // same Order ID.\n                const rxNormCodeSet = new Set(\n                    Array.from(groupedByOrder.get(order.orderId).values())\n                        .map(admin => admin.rxNormCode));\n                if (rxNormCodeSet.size !== 1) {\n                  throw Error(\n                      'Administrations for order ' + order.orderId +\n                      ' are for multiple RxNorms: ' +\n                      Array.from(rxNormCodeSet.values()));\n                }\n\n                const orderSet = new Set(\n                    Array.from(groupedByOrder.get(order.orderId).values())\n                        .map(admin => admin.medicationOrderId));\n                if (rxNormCodeSet.size !== 1) {\n                  throw Error(\n                      'Administrations for order ' + order.orderId +\n                      ' report multiple order IDs: ' + Array.from(orderSet));\n                }\n\n                // Add the order to the map for the RxNorm code.\n                const rxCode = rxNormCodeSet.values().next().value;\n                if (groupedByMed.has(rxCode)) {\n                  groupedByMed.set(\n                      rxCode, groupedByMed.get(rxCode).concat(order));\n                } else {\n                  groupedByMed.set(rxCode, new Array(order));\n                }\n              },\n              rejection => {\n                // If there are any errors constructing MedicationOrders for\n                // this RxNormCode[], throw the error.\n                throw rejection;\n              });\n    });\n    // Resolve all the promises and set the corresponding orders for each\n    // RxNorm.\n    return Promise.all(allPromises)\n        .then(\n            _ => {\n              Array.from(groupedByMed.entries()).forEach(medEntry => {\n                const rxNorm = medEntry[0];\n                const medOrders = medEntry[1];\n                rxNorm.orders = new MedicationOrderSet(medOrders);\n              });\n              // Return all the populated RxNorms.\n              return Array.from(groupedByMed.keys());\n            },\n            rejection => {\n              // If any promise is rejected, throw the same rejection.\n              throw rejection;\n            });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {ResourceCode} from '../clinicalconcepts/resource-code-group';\nimport {MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {FhirService} from '../fhir.service';\nimport * as BCHColors from '../theme/bch_colors';\n\nimport {DisplayGrouping} from './display-grouping';\n\nexport class MedicationConceptGroup extends DisplayGrouping {}\n\nexport const ANTIVIRAL =\n    new MedicationConceptGroup('Antiviral', BCHColors.BOSTON_PURPLE);\nexport const ANTIBIOTIC =\n    new MedicationConceptGroup('Antibiotic', BCHColors.BOSTON_INDIGO);\nexport const ANTIFUNGAL =\n    new MedicationConceptGroup('Antifungal', BCHColors.BOSTON_YELLOW);\n\nexport const MEDICATION_GROUPS = [ANTIVIRAL, ANTIBIOTIC, ANTIFUNGAL];\n\n/**\n * Holds RXNorm codes and orders corresponding to them.\n */\nexport class RxNormCode extends ResourceCode {\n  static readonly CODING_STRING = 'http://www.nlm.nih.gov/research/umls/rxnorm';\n\n  /* Contains a set of medication orders for this RxNorm code. */\n  orders: MedicationOrderSet;\n\n  dataAvailableInAppTimeScope(fhirService: FhirService): Promise<boolean> {\n    return fhirService.medicationsPresentWithCode(this, APP_TIMESPAN);\n  }\n}\n\nexport const RXNORM_CODES = [\n  // Parenteral antibiotics\n  new RxNormCode('11124', ANTIBIOTIC, 'Vancomycin', true),\n  new RxNormCode('1596450', ANTIBIOTIC, 'Gentamicin')\n];\n","module.exports = \".configurationCard {\\n  background-color: transparent;\\n  border-left-style: solid;\\n  border-left-width: 5px;\\n  height: 40px !important;\\n  padding: 3px;\\n}\\n\\n\\n.disableDragging {\\n  color: gray;\\n  cursor: not-allowed;\\n  padding-top: 4px;\\n}\\n\\n\\n.listItem {\\n  display: inline-block;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  padding-left: 5px !important;\\n}\\n\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 0px !important;\\n}\\n\\n\\n.label {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  line-height: 15px;\\n}\\n\\n\\n.tinytext {\\n  font-size: 12px;\\n  line-height: 15px;\\n}\\n\"","module.exports = \"<div class=\\\"configurationCard {{resourceCodesForCard.dataAvailable ? 'enableDragging': 'disableDragging'}}\\\"\\n  [style.border-left-color]=\\\"resourceCodesForCard.dataAvailable ? conceptGroupKey.fill.hsl().string(): 'rgb(197, 185, 172)'\\\">\\n  <!-- BOSTON_WARM_GRAY -->\\n  <mat-list-item>\\n    <div class=\\\"listItem\\\">\\n      <div style=\\\"display:inline-block; vertical-align: middle;\\\">\\n        <div class=\\\"label\\\">\\n          {{resourceCodesForCard.label}}\\n        </div>\\n        <div class=\\\"tinytext\\\" *ngIf=\\\"!resourceCodesForCard.dataAvailable\\\">\\n          No data between\\n          {{appTimeIntervalString}}\\n        </div>\\n      </div>\\n    </div>\\n  </mat-list-item>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, Input} from '@angular/core';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodesForCard} from '../clinicalconcepts/resource-code-manager';\n\n@Component({\n  selector: 'app-data-selector-element',\n  templateUrl: './data-selector-element.component.html',\n  styleUrls: ['./data-selector-element.component.css']\n})\n\n// This class represents one element in a list or menu of ResourceCodesForCards\n// that can be added to the main CardContainer.\nexport class DataSelectorElementComponent {\n  // The ResourceCodes for the card represented by this DataSelectorElement.\n  @Input() resourceCodesForCard: ResourceCodesForCard;\n  // The DisplayGrouping for the card represented by this DataSelectorElement.\n  @Input() conceptGroupKey: DisplayGrouping;\n  // Hold an instance of the app time interval so we can display it in the HTML\n  readonly appTimeIntervalString = APP_TIMESPAN.start.toFormat('MM/dd/yyyy') +\n      ' and ' + APP_TIMESPAN.end.toFormat('MM/dd/yyyy');\n}\n","module.exports = \".addCardInline {\\n  color: rgb(248, 248, 248);\\n  display: inline-block;\\n  opacity: 0.15;\\n  -webkit-transition: opacity 0.3s;\\n  transition: opacity 0.3s;\\n  /* Needed so that there's not enough space between the cards to hold the icon,\\n  just enough to hold the line placeholder.*/\\n  margin-bottom:-14px;\\n  margin-top:-14px;\\n}\\n\\nspan {\\n  border: 2px dashed rgb(248, 248, 248);\\n  /* Only outline the bottom instead of all four sides.*/\\n  border-style: none none dotted;\\n  display: inline-block;\\n\\n}\\n\\n.addCardInline:hover {\\n  opacity: 1;\\n}\\n\\n.conceptSelector {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n  min-width: 200px;\\n}\\n\\n.mainConceptSelector {\\n  border-left-style: solid;\\n  border-left-width: 5px;\\n}\\n\\n::ng-deep .mat-menu-item  {\\n  line-height: 20px !important;\\n}\\n\\n::ng-deep .mat-list-item-content {\\n  margin-top: 8px;\\n}\\n\\n::ng-deep .mat-autocomplete-panel .mat-list-item-content {\\n  margin-top: -8px; /* Styling for autocomplete menu items needs to be different.*/\\n}\\n\\n::ng-deep .mat-option {\\n  height: -webkit-fit-content !important;\\n  height: -moz-fit-content !important;\\n  height: fit-content !important;\\n  overflow: visible !important;\\n  padding: 0px !important;\\n}\\n\\n.conceptForm {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n::ng-deep .autoMenu.mat-menu-panel {\\n  min-width: 300px;\\n}\\n\\n.conceptFormField {\\n  width: 100%;\\n}\\n\"","module.exports = \"<div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"addCardInline\\\">\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"masterMenu\\\" matTooltip=\\\"Add card here\\\">\\n    <mat-icon class=\\\"toolbarButton\\\">add_circle</mat-icon>\\n  </button>\\n  <span fxFlex>\\n  </span>\\n</div>\\n<mat-menu #masterMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <ng-template matMenuContent>\\n    <button mat-menu-item (click)=\\\"textbox()\\\">\\n      <mat-icon>add_comment</mat-icon>\\n      <span>Add Blank Annotation</span>\\n    </button>\\n    <button mat-menu-item (click)=\\\"customTimeline()\\\">\\n      <mat-icon>show_chart</mat-icon>\\n      <span>Add Custom Timeline</span>\\n    </button>\\n    <mat-divider></mat-divider>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"conceptSelectorMenu\\\">\\n      <mat-icon>add_to_photos</mat-icon>\\n      <span>Add Chart</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n<mat-menu #conceptSelectorMenu=\\\"matMenu\\\" [style.padding]=\\\"0\\\">\\n  <ng-template matMenuContent>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"menu\\\">\\n      Search for a concept\\n    </button>\\n    <mat-divider></mat-divider>\\n    <mat-menu #menu=\\\"matMenu\\\" (closed)=\\\"autocompleteTrigger.closePanel()\\\" class=\\\"autoMenu\\\">\\n      <!-- Autocomplete search bar -->\\n      <form class=\\\"conceptForm\\\">\\n        <mat-form-field class=\\\"conceptFormField\\\">\\n          <input matInput placeholder=\\\"Search for a concept\\\" aria-label=\\\"Search for a concept\\\" [matAutocomplete]=\\\"auto\\\"\\n            [formControl]=\\\"conceptCtrl\\\" (click)=\\\"$event.stopPropagation()\\\">\\n          <!-- $event.stopPropagation is to not close main menu when clicking inside the input field -->\\n          <mat-icon matPrefix>search</mat-icon>\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectOption($event)\\\">\\n            <mat-option *ngFor=\\\"let concept of filteredConcepts | async\\\" [value]=\\\"concept.label\\\">\\n              <app-data-selector-element [resourceCodesForCard]=\\\"concept\\\" [conceptGroupKey]=\\\"concept.displayGrouping\\\"></app-data-selector-element>\\n              <mat-divider></mat-divider>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </form>\\n    </mat-menu>\\n    <ng-container *ngFor=\\\"let entry of displayGroupings\\\">\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"subConceptSelectorMenu\\\" class=\\\"mainConceptSelector\\\"\\n        [style.border-left-color]=\\\"entry[0].fill.hsl().string()\\\">\\n        {{entry[0].label}}\\n      </button>\\n      <mat-divider></mat-divider>\\n      <mat-menu #subConceptSelectorMenu=\\\"matMenu\\\">\\n        <ng-template matMenuContent>\\n          <button *ngFor=\\\"let resourceCodesForCard of entry[1]\\\" (click)=\\\"addConceptCard(resourceCodesForCard.label)\\\"\\n            class=\\\"conceptSelector\\\" mat-menu-item>\\n            <app-data-selector-element [resourceCodesForCard]=\\\"resourceCodesForCard\\\" [conceptGroupKey]=\\\"entry[0]\\\"></app-data-selector-element>\\n            <mat-divider></mat-divider>\\n          </button>\\n        </ng-template>\\n      </mat-menu>\\n    </ng-container>\\n  </ng-template>\\n</mat-menu>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteTrigger, MatMenuTrigger} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeManager, ResourceCodesForCard} from '../clinicalconcepts/resource-code-manager';\n\n@Component({\n  selector: 'app-data-selector-menu',\n  templateUrl: './data-selector-menu.component.html',\n  styleUrls: ['./data-selector-menu.component.css']\n})\n\n/**\n * Shows a button with expanding menus for selecting data elements to display.\n */\nexport class DataSelectorMenuComponent implements OnInit {\n  // The trigger for the main menu displayed.\n  @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\n  // The trigger for the autocomplete panel displayed.\n  @ViewChild(MatAutocompleteTrigger)\n  autocompleteTrigger: MatAutocompleteTrigger;\n\n  // An array of DisplayGroupings and ResourceCodesForCard that belong to that\n  // grouping.\n  readonly displayGroupings: Array<[DisplayGrouping, ResourceCodesForCard[]]>;\n\n  // An event that is emitted when the user requests to add a new card.\n  @Output() addCard = new EventEmitter<string>();\n  // An event that is emitted when the user requests to add a textbox.\n  @Output() addTextbox = new EventEmitter<null>();\n  // An event that is emitted when the user requests to add a custom timeline.\n  @Output() addCustomTimeline = new EventEmitter<null>();\n\n  // All ResourceCodesForCard that correspond to cards displayed on the page.\n  readonly allConcepts: Array<ResourceCodesForCard>;\n\n  // The FormControl used to monitor changes in the user input of the\n  // autocomplete field.\n  readonly conceptCtrl = new FormControl();\n  filteredConcepts: Observable<ResourceCodesForCard[]>;\n  constructor(private resourceCodeManager: ResourceCodeManager) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    const temp = Array.from(displayGroups.values());\n    this.allConcepts = [].concat.apply([], temp);\n    this.displayGroupings = Array.from(displayGroups.entries());\n  }\n\n  ngOnInit() {\n    // Watch for changes to the user input on the autocomplete panel.\n    this.filteredConcepts = this.conceptCtrl.valueChanges.pipe(\n        startWith(''),  // The autocomplete input starts with nothing typed in.\n        map(concept =>\n                concept ? this.filter(concept) : this.allConcepts.slice()));\n  }\n\n  // Listens for an event indicating that the user has selected to add the\n  // concept card from the top toolbar. The label for the card is sent as an\n  // event to CardContainer.\n  private addConceptCard(label: string) {\n    this.addCard.emit(label);\n  }\n\n  // Emits an event indicating to CardContainer to add a blank textbox at the\n  // top of the page.\n  private textbox() {\n    this.addTextbox.emit();\n  }\n\n  private customTimeline() {\n    this.addCustomTimeline.emit();\n  }\n\n  // Filter the concepts shown on the autocomplete menu.\n  filter(concept): ResourceCodesForCard[] {\n    return this.allConcepts.filter(\n        option =>\n            option.label.toLowerCase().indexOf(concept.toLowerCase()) === 0);\n  }\n\n  // We close the menu after an option is selected by autocomplete.\n  private closeMenus() {\n    this.menuTrigger.closeMenu();\n    this.autocompleteTrigger.closePanel();\n  }\n\n  // Listen for the event indicating that an option has been selected in the\n  // autocomplete menu.\n  private selectOption($event) {\n    this.addConceptCard($event.option.value);\n    this.closeMenus();\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Duration, Interval} from 'luxon';\n/**\n * For the given date range, returns a DateTime for each day in the time\n * range (converting to local time first) as a list in chronological\n * order. All data points in dateRange will be enclosed by the days listed in\n * the returned array. If specified, additional DateTimes will be included at\n * the 12-hour mark of each day in the interval.\n * @param dateRange The date range to get tick marks for.\n * @param twelveHour Whether or not to include DateTimes at the 12-hour mark of\n *     each day.\n *\n * @returns A list of the days in chronological order within the time range.\n */\nexport function getTickMarksForXAxis(\n    dateRange: Interval, twelveHour: boolean): DateTime[] {\n  const days: DateTime[] = [];\n  // The dateRange could be stored in UTC, so convert it back to local\n  // time.\n  const intervalLocal = Interval.fromDateTimes(\n      dateRange.start.toLocal(), dateRange.end.toLocal());\n  const startDate: DateTime = intervalLocal.start.startOf('day');\n  const dayCount =\n      Duration.fromMillis(intervalLocal.end.toMillis() - startDate.toMillis())\n          .as('days');\n\n  for (let i = 0; i <= dayCount; i++) {\n    days.push(startDate.plus({days: i}));\n    if (twelveHour) {\n      days.push(startDate.plus({days: i, hours: 12}));\n    }\n  }\n\n  return days;\n}\n\n/**\n * Returns a DateTime for each day contained in any of the intervals in the\n * passed-in interval set. If the interval set contains day-boundaries, it will\n * add an extra day to be sure to encompass the full day, like\n * getTickMarksForXAxis. The days returned will be in an array in time order.\n *\n * @param intervals The intervals to list all the days for.\n */\nexport function getDaysForIntervalSet(intervals: Interval[]): DateTime[] {\n  const days: DateTime[] = [];\n  const allIntervals = Interval.merge(intervals);\n  for (const interval of allIntervals) {\n    getTickMarksForXAxis(interval, false).forEach(x => days.push(x.toUTC()));\n  }\n  return days.sort();\n}\n","module.exports = \"<h1 mat-dialog-title>Do you want to remove this card?</h1>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onExit()\\\">No</button>\\n  <button mat-button (click)=\\\"onConfirm()\\\" cdkFocusInitial>Yes, remove this card</button>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['../cardcontainer/cardcontainer.component.css']\n})\n\n/**\n * Shows a dialog asking the user to confirm whether or not they wish to delete\n * the card.\n */\nexport class DeleteDialogComponent {\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>) {}\n\n  // The user does not wish to delete the card.\n  onExit() {\n    this.dialogRef.close();\n  }\n\n  // The user wishes to delete the card.\n  onConfirm() {\n    this.dialogRef.close({\n      delete: true,\n    });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Duration, Interval} from 'luxon';\n\nimport {LabeledClass} from '../fhir-resource-set';\n\nimport {MedicationOrder, MedicationOrderSet} from './medication-order';\nimport {Observation} from './observation';\n\n/**\n * An Observation with additional information to display in its tooltip.\n */\nexport class AnnotatedObservation extends LabeledClass {\n  constructor(\n      readonly observation: Observation,\n      /**\n       * The items in this list are [label, value] pairs to be displayed in\n       * a tooltip.\n       * This array should be treated as immutable.\n       * TODO(b/126219092): Pull in a library to enforce immutability.\n       */\n      readonly annotationValues = new Array<[string, string]>()) {\n    super(observation.label);\n  }\n\n  /**\n   * Makes an AnnotatedObservation for medication monitoring.\n   * The annotations read out how long it's been since the prior medication\n   * dose, and how long it was until the next medication dose was given.\n   * @param observation The monitoring observation to annotate\n   * @param medicationOrderSet The medication orders containing the doses of the\n   *     corresponding medication\n   * @throws Error if there are two medication orders in MedicationOrderSet\n   *     that contain the timestamp of the observation\n   */\n  static forMedicationMonitoring(\n      observation: Observation,\n      medicationOrderSet: MedicationOrderSet): AnnotatedObservation {\n    // Look in the medication order set's administrations and find the ones\n    // closest in time to this observation.\n    let doseCountBefore: number;\n    let doseCountAfter: number;\n    let timeSinceLast: Duration;\n    let timeBeforeNext: Duration;\n\n    const annotations = new Array<[string, string]>();\n    // Find the medication order set that coincides in time with this\n    // administration (if any).\n    let containingMedicationOrder: MedicationOrder;\n    for (const order of medicationOrderSet.resourceList) {\n      if (Interval\n              .fromDateTimes(\n                  order.firstAdministration.timestamp,\n                  order.lastAdmininistration.timestamp)\n              .contains(observation.timestamp)) {\n        if (containingMedicationOrder) {\n          throw Error('Two medication orders contain this monitoring point.');\n        }\n        containingMedicationOrder = order;\n      }\n    }\n\n    if (containingMedicationOrder) {\n      // Find the spot in the array of administrations where the monitoring\n      // would fall, timewise.\n      const sortedAdmins =\n          containingMedicationOrder.administrationsForOrder.resourceList.sort(\n              (a, b) => a.medAdministration.timestamp.toMillis() -\n                  b.medAdministration.timestamp.toMillis());\n\n      let idx = 0;\n      while (idx < sortedAdmins.length &&\n             sortedAdmins[idx].medAdministration.timestamp <\n                 observation.timestamp) {\n        idx++;\n      }\n\n      // It's guaranteed that there's a dose before the monitoring point and a\n      // dose after the monitoring point since we check to make sure\n      // the observation is between the first and last administrations.\n      // Here we look up those dose numbers and the time difference between\n      // the doses and the monitoring point.\n      const doseBeforeObs = sortedAdmins[idx - 1];\n      const doseAfterObs = sortedAdmins[idx];\n\n      doseCountBefore = doseBeforeObs.doseInOrder;\n      timeSinceLast =\n          observation.timestamp.diff(doseBeforeObs.medAdministration.timestamp);\n\n      doseCountAfter = doseAfterObs.doseInOrder;\n      timeBeforeNext =\n          doseAfterObs.medAdministration.timestamp.diff(observation.timestamp);\n\n      annotations.push([\n        'Time since dose #' + doseCountBefore, timeSinceLast.toFormat('h:mm')\n      ]);\n\n      annotations.push([\n        'Time before dose #' + doseCountAfter, timeBeforeNext.toFormat('h:mm')\n      ]);\n    }\n\n    return new AnnotatedObservation(observation, annotations);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\n\nimport {FhirResourceType} from '../../constants';\n\nimport {Observation} from './observation';\nimport {Specimen} from './specimen';\n\n/**\n * FHIR element for DiagnosticReportStatus, from the DSTU2 version of the\n * standard.\n * https://www.hl7.org/fhir/valueset-diagnostic-report-status.html\n */\nexport enum DiagnosticReportStatus {\n  Registered = 'Registered',\n  Partial = 'Partial',\n  Preliminary = 'Preliminary',\n  Final = 'Final',\n  Amended = 'Amended',\n  Corrected = 'Corrected',\n  Appended = 'Appended',\n  Cancelled = 'Cancelled',\n  EnteredInError = 'Enteredinerror',\n  Unknown = 'Unknown'\n}\n\nconst statusToEnumMap = new Map<string, DiagnosticReportStatus>([\n  ['registered', DiagnosticReportStatus.Registered],\n  ['partial', DiagnosticReportStatus.Partial],\n  ['preliminary', DiagnosticReportStatus.Preliminary],\n  ['final', DiagnosticReportStatus.Final],\n  ['amended', DiagnosticReportStatus.Amended],\n  ['corrected', DiagnosticReportStatus.Corrected],\n  ['appended', DiagnosticReportStatus.Appended],\n  ['cancelled', DiagnosticReportStatus.Cancelled],\n  ['entered-in-error', DiagnosticReportStatus.EnteredInError],\n  ['unknown', DiagnosticReportStatus.Unknown],\n]);\n\n/**\n * FHIR resource for DiagnosticReport, from the DSTU2 version of the standard.\n * https://www.hl7.org/fhir/DSTU2/diagnosticreport.html\n *\n * The parsing for this class is heavily influenced by the custom API BCH\n * built to return DiagnosticReports for microbiology data. In particular, we\n * only parse out specimens and results from the \"contained\" portion of the\n * resource instead of supporting retrieval by reference since the Cerner\n * implementation of the FHIR standard won't allow microbiology retrieval.\n */\nexport class DiagnosticReport {\n  readonly id: string;\n\n  /** Specimens this report is based on */\n  readonly specimens = new Array<Specimen>();\n\n  /** Results in the form of observations */\n  readonly results = new Array<Observation>();\n\n  /** Status for this test */\n  readonly status: DiagnosticReportStatus;\n\n  constructor(json: any) {\n    if (json.id) {\n      this.id = json.id;\n    }\n\n    // Contained resources may be either specimens or observations.\n    const contained = json.contained;\n    for (const rsc of contained) {\n      if (rsc.resourceType === FhirResourceType.Specimen) {\n        this.specimens.push(new Specimen(rsc));\n      } else if (rsc.resourceType === FhirResourceType.Observation) {\n        this.results.push(new Observation(rsc));\n      }\n      // Silently ignore all other contained resource types.\n    }\n\n    if (!json.status) {\n      throw Error(\n          'The report needs a status to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    this.status = statusToEnumMap.get(json.status);\n  }\n}\n\n/**\n * A diagnostic report with the timestamp for a specific culture type extended.\n */\nexport class AnnotatedDiagnosticReport {\n  readonly timestamp: DateTime;\n  readonly report: DiagnosticReport;\n\n  constructor(report: DiagnosticReport, cultureType: string) {\n    // Get the timestamp from the collection time of the specimen.\n    const specimen = report.specimens.find(s => (s.type === cultureType));\n    if (specimen) {\n      this.timestamp = specimen.collectedDateTime ?\n          specimen.collectedDateTime :\n          (specimen.collectedPeriod ? specimen.collectedPeriod.start :\n                                      undefined);\n    }\n    this.report = report;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/** * This object represents relevant components of dosage information, provided\n * in MedicationOrders and MedicationAdministrations.\n */\nexport class Dosage {\n  readonly quantity: number;\n  readonly unit: string;\n  readonly route: string;\n  readonly text: string;\n\n  constructor(json: any) {\n    if (json.dosage) {\n      if (json.dosage.quantity) {\n        this.quantity = json.dosage.quantity.value;\n        this.unit = json.dosage.quantity.unit;\n      }\n      if (json.dosage.route) {\n        this.route = json.dosage.route.text;\n      }\n      /*\n       * The text for the dosage usually contains information about the rate of\n       * administration, however the format across different\n       * MedicationAdministrations is not consistent. Ex: \"500 mg IV q6hr\" vs\n       * \"250 mg = 1 caps Oral Once\"\n       */\n      this.text = json.dosage.text;\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n/**\n * This object represents basic information about an Encounter: what its\n * reason and type were, when it happened, and its ID.\n */\nexport class Encounter {\n  readonly encounterId: string;\n  readonly period: Interval;\n  readonly reason: string;\n  readonly type: string;\n\n  constructor(private json: any) {\n    this.encounterId = json.identifier;\n    try {\n      this.period = Interval.fromDateTimes(\n          DateTime.fromISO(json.period.start),\n          json.period.end ? DateTime.fromISO(json.period.end) : DateTime.utc());\n    } catch {\n      throw Error(\n          'An encounter must have a start date. JSON: ' + JSON.stringify(json));\n    }\n    this.type = json.type;\n    this.reason = json.reason;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {FhirResourceSet, LabeledClass} from '../fhir-resource-set';\n\nimport {Dosage} from './dosage';\nimport {ContainedMedication} from './medication';\n\n\n/**\n * This object represents a FHIR MedicationAdministration. It does not contain\n * all the information in a standard MedicationAdministration (see\n * https://www.hl7.org/fhir/DSTU2/medicationadministration.html) but instead\n * stores only the information we're interested in seeing.\n */\nexport class MedicationAdministration extends LabeledClass {\n  readonly MED_RESOURCE_TYPE = 'Medication';\n  readonly rxNormCode: RxNormCode;\n  readonly timestamp: DateTime;\n  readonly wasNotGiven: boolean;\n  readonly dosage: Dosage;\n  readonly medicationOrderId: string;\n  readonly containedMedications: ContainedMedication[] = [];\n  /**\n   * Makes an MedicationAdministration out of a JSON object that represents a\n   * a FHIR MedicationAdministration.\n   * https://www.hl7.org/fhir/DSTU2/medicationadministration.html\n   * @param json A JSON object that represents a FHIR MedicationAdministration.\n   */\n  constructor(private json: any) {\n    super(\n        json.medicationReference ? json.medicationReference.display :\n                                   json.medicationCodeableConcept ?\n                                   json.medicationCodeableConcept.text :\n                                   null);\n    if (json.medicationCodeableConcept) {\n      if (json.medicationCodeableConcept.coding) {\n        this.rxNormCode =\n            (json.medicationCodeableConcept.coding\n                 .map(\n                     // Map the codes to a boolean that is true only if the\n                     // encoding is an RxNorm encoding, and the RxNorm code\n                     // appears in our RxNormCode list that we care about.\n                     (coding) => (!coding.system ||\n                                  coding.system.indexOf(\n                                      RxNormCode.CODING_STRING) !== -1) &&\n                         RxNormCode.fromCodeString(coding.code))\n                 // Filter out any codes that are not RxNorm codes.\n                 .filter((code) => !!code))[0];\n      }\n    }\n\n    // TODO(b/111990521): If there are hours and minutes then we can guarantee\n    // timezone is specified, but if not, then the timezone might not be\n    // specified! I'm not sure how to best handle that.\n    // https://www.hl7.org/fhir/DSTU2/datatypes.html#dateTime\n    this.timestamp = json.effectiveTimeDateTime ?\n        DateTime.fromISO(json.effectiveTimeDateTime).toUTC() :\n        (json.effectiveTimePeriod ?\n             DateTime.fromISO(json.effectiveTimePeriod.start).toUTC() :\n             null);\n\n    this.dosage = new Dosage(json);\n    this.wasNotGiven = json.wasNotGiven;\n    this.medicationOrderId =\n        json.prescription ? json.prescription.reference : null;\n\n    if (json.contained && json.contained.length > 0) {\n      // We first find the element that lists the \"ingredients\" of this\n      // MedicationAdministration with each corresponding dosage and reference\n      // id. This element of \"contained\" will have the same id as the overall\n      // MedicationAdministration's medicationReference number.\n      const referenceId =\n          json.medicationReference ? json.medicationReference.reference : null;\n\n      const ingredientReferences = new Map<string, any>();\n      if (referenceId) {\n        const index = json.contained.findIndex(\n            el =>\n                (el.resourceType === this.MED_RESOURCE_TYPE && el.product &&\n                 el.id === referenceId.replace('#', '')));\n        const listOfIngredients = json.contained[index];\n        if (listOfIngredients && listOfIngredients.product.ingredient) {\n          for (const el of listOfIngredients.product.ingredient) {\n            if (el.item && el.amount) {\n              ingredientReferences.set(el.item.reference.replace('#', ''), el);\n            }\n          }\n        }\n        // Remove the element similar to a \"list of ingredients\" from contained.\n        if (index > -1) {\n          json.contained.splice(index, 1);\n        }\n      }\n      if (ingredientReferences.size > 0 && json.contained.length > 1) {\n        // We map the Medications in the list of ingredients to JSON elements\n        // containing the RxNorms for each ingredient.\n        for (const ing of json.contained) {\n          this.containedMedications.push(\n              new ContainedMedication(ing, ingredientReferences));\n        }\n      }\n    }\n\n    if (!(this.rxNormCode && this.label)) {\n      // If a MedicationAdministration has \"Contained\" portions of different\n      // ingredients, then there might not be one single RxNorm corresponding to\n      // this administration.\n\n      // We throw an error if all contained medications do not\n      // have an RxNormCode, or if there are no contained medications.\n      if (this.containedMedications.length === 0 ||\n          (this.containedMedications.length > 0 &&\n           this.containedMedications.every(med => (med.code === undefined)))) {\n        throw Error(\n            'JSON must include RxNormCode and a label' +\n            ' to be included as a MedicationAdministration. JSON: ' +\n            JSON.stringify(json));\n      }\n    }\n    // TODO(b/b/119673528): Replace checks for LOINC and RxNorm labels.\n    // if (this.rxNormCode) {\n    //   // Check this MedicationOrder label against the RxNorm label.\n    //   // Check the observation label against the LOINC code label.\n    //   if (this.label.toLowerCase() !== this.rxNormCode.label.toLowerCase()) {\n    //     throw Error(\n    //         'The label for this MedicationAdministration\\'s RxNorm code' +\n    //         ' doesn\\'t match the label in the data. MedicationOrder label: '\n    //         + this.label + ' RxNorm label: ' + this.rxNormCode.label);\n    //   }\n    // }\n  }\n}\n\n/**\n * A set of MedicalAdministrations that belong together as part of the same\n * series.\n */\nexport class MedicationAdministrationSet extends\n    FhirResourceSet<AnnotatedAdministration> {\n  readonly maxDose: number;\n  readonly minDose: number;\n  readonly unit: string;\n  readonly rxNormCode: RxNormCode;\n\n  /**\n   * Constructor for MedicationAdministrationSet.\n   * @param medicationAdministrationList The list of MedicationAdministrations\n   *     belonging together.\n   * @throws Error if the administrations have different labels or RxNorms,\n   *      or if there is not a label, or if the administrations have different\n   *      units.\n   */\n  constructor(medicationAdministrationList: AnnotatedAdministration[]) {\n    super(medicationAdministrationList);\n\n    const rxNorms =\n        medicationAdministrationList.map(x => x.medAdministration.rxNormCode);\n    if (new Set(rxNorms).size > 1) {\n      throw Error('Different RxNorms for administrations: ' + rxNorms);\n    }\n    this.rxNormCode = rxNorms[0];\n\n    this.minDose = Math.min(...medicationAdministrationList.map(\n        x => x.medAdministration.dosage.quantity));\n    this.maxDose = Math.max(...medicationAdministrationList.map(\n        x => x.medAdministration.dosage.quantity));\n\n    const units = new Set(\n        medicationAdministrationList.map(x => x.medAdministration.dosage.unit));\n    if (units.size > 1) {\n      throw Error(\n          'Different units in the administration set: ' +\n          Array.from(units.values()));\n    }\n    this.unit = Array.from(units.values())[0];\n  }\n}\n\n/**\n * A MedicationAdministration with additional information relating it to\n * the other administrations in the same order.\n */\nexport class AnnotatedAdministration extends LabeledClass {\n  /** The medication administration to be annotated. */\n  readonly medAdministration: MedicationAdministration;\n\n  /**\n   * The dose number for this administration in this order. The first dose is\n   * numbered 1.\n   */\n  readonly doseInOrder: number;\n\n  /**\n   * The numbered day for this dose within this order. The first dose will\n   * be on day 1. Day 2 starts 24 hours after the first dose administration,\n   * day 3 24 hours after that, etc.\n   */\n  readonly doseDay: number;\n\n  /**\n   * The annotated dose for the dose prior to this one. Undefined if this is\n   * the first dose.\n   */\n  readonly previousDose: AnnotatedAdministration;\n\n  constructor(\n      medAdmin: MedicationAdministration, doseInOrder: number, doseDay: number,\n      prevDose?: AnnotatedAdministration) {\n    super(medAdmin.label);\n    this.medAdministration = medAdmin;\n    this.doseInOrder = doseInOrder;\n    this.doseDay = doseDay;\n    this.previousDose = prevDose;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Disable this check because it's for IE 11 compatibility and we're not worried\n// about that in our testing code.\n/* tslint:disable:object-literal-shorthand*/\n\nimport {MedicationConceptGroup, RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {FhirResourceSet, LabeledClass} from '../fhir-resource-set';\nimport {FhirService} from '../fhir.service';\n\nimport {AnnotatedAdministration, MedicationAdministration, MedicationAdministrationSet} from './medication-administration';\n\n/**\n * This object represents a FHIR MedicationOrder. It does not contain\n * all the information in a standard MedicationOrder (see\n * https://www.hl7.org/fhir/DSTU2/medicationorder.html) but instead\n * stores only the information we're interested in seeing.\n */\nexport class MedicationOrder extends LabeledClass {\n  readonly rxNormCode: RxNormCode;\n  firstAdministration: MedicationAdministration;\n  lastAdmininistration: MedicationAdministration;\n  administrationsForOrder: MedicationAdministrationSet;\n  readonly orderId: string;\n  /**\n   * Makes an MedicationOrder out of a list of MedicationAdministrations.\n   * https://www.hl7.org/fhir/DSTU2/medicationorder.html\n   * @param json The json representing this MedicationOrder.\n   */\n  constructor(private json: any) {\n    // A MedicationOrder's label is one of the following in order of preference:\n    // 1) the medication reference's display anme\n    // 2) the medication encoding's text\n    // 3) the order's ID\n    super(\n        json.medicationReference ? json.medicationReference.display :\n                                   json.medicationCodeableConcept ?\n                                   json.medicationCodeableConcept.text :\n                                   json.id);\n    this.orderId = json.id;\n    if (json.medicationCodeableConcept) {\n      if (json.medicationCodeableConcept.coding) {\n        this.rxNormCode =\n            (json.medicationCodeableConcept.coding\n                 .map(\n                     // Map the codes to a boolean that is true only if the\n                     // encoding is an RxNorm encoding, and the RxNorm code\n                     // appears in our RxNormCode list that we care about.\n                     (coding) => (!coding.system ||\n                                  coding.system.indexOf(\n                                      RxNormCode.CODING_STRING) !== -1) &&\n                         RxNormCode.fromCodeString(coding.code))\n                 // Filter out any codes that are not RxNorm codes.\n                 .filter((code) => !!code))[0];\n      }\n    }\n\n    if (!(this.rxNormCode && this.label)) {\n      throw Error(\n          'JSON must include RxNormCode and a label' +\n          ' to be included as a MedicationOrder. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    // Check this MedicationOrder label against the RxNorm label.\n    if (this.label.toLowerCase() !== this.rxNormCode.label.toLowerCase()) {\n      throw Error(\n          'The label for this MedicationOrder\\'s RxNorm code doesn\\'t match ' +\n          ' the label in the data. MedicationOrder label: ' + this.label +\n          ' RxNorm label: ' + this.rxNormCode.label);\n    }\n  }\n\n  /**\n   * Sets the MedicationAdministration info for this MedicationOrder.\n   * @param fhirService The FhirService used to find the\n   *     MedicationAdministrations corresponding to this MedicationOrder.\n   * @throws Error if the label for the list of administrations does not match\n   *     the label for this order.\n   * @returns This order, after all the promises are resolved.\n   */\n  setMedicationAdministrations(fhirService: FhirService):\n      Promise<MedicationOrder> {\n    return fhirService.getMedicationAdministrationsWithOrder(this.orderId)\n        .then(\n            medAdmins => {\n              medAdmins = medAdmins.sort((a, b) => {\n                return a.timestamp.toMillis() - b.timestamp.toMillis();\n              });\n              this.firstAdministration = medAdmins[0];\n              this.lastAdmininistration = medAdmins[medAdmins.length - 1];\n\n              const admins = [];\n              for (let i = 0; i < medAdmins.length; i++) {\n                const admin = medAdmins[i];\n                // We want the dose counts and day counts to start with 1 so we\n                // add 1 to the day count and the index for the dose.\n                const dayCount =\n                    admin.timestamp.diff(this.firstAdministration.timestamp)\n                        .as('day') + 1;\n                const annotated = new AnnotatedAdministration(\n                    admin, i + 1 /* dose in order starts at 1 */, dayCount,\n                    i > 0 ? admins[i - 1] : undefined);\n                admins.push(annotated);\n              }\n              this.administrationsForOrder =\n                  new MedicationAdministrationSet(admins);\n              return this;\n            },\n            rejection => {\n              // Throw an error if the construction of the\n              // MedicationAdministration results in an error.\n              throw rejection;\n            });\n  }\n}\n\n/**\n * A set of MedicationOrders that belong together as part of the same\n * series, representing all orders for the medicine in a given time period.\n */\nexport class MedicationOrderSet extends FhirResourceSet<MedicationOrder> {\n  /*\n   * The RxNormCode for this set of data. All data in this set\n   * must have the same RxNormCode.\n   */\n  readonly rxNormCode: RxNormCode;\n  readonly medicationConcept: MedicationConceptGroup;\n\n  readonly maxDose: number;\n  readonly minDose: number;\n  readonly unit: string;\n\n  /**\n   * Constructor for MedicationOrderSet.\n   * @param MedicationOrderList The list of MedicationOrders belonging\n   *     together. This list is sorted by first MedicationAdministration for\n   *     each order.\n   * @throws Error if the observations have different labels/RxNormCodes, or\n   *     if there is not a label/RxNormCode.\n   */\n  constructor(medicationOrderList: MedicationOrder[]) {\n    // Sort the list by first administration.\n    medicationOrderList = medicationOrderList.sort(function(a, b) {\n      return a.firstAdministration.timestamp.toMillis() -\n          b.firstAdministration.timestamp.toMillis();\n    });\n    super(medicationOrderList);\n    // Set the RxNormCode and MedicationConceptGroup for this\n    // MedicationOrderSet.\n    // TODO(b/117327111): Restructure FhirResourceSet to take in a list of\n    // attributes to check sameness for\n    if (medicationOrderList.length > 0) {\n      const firstRxNorm = medicationOrderList[0].rxNormCode;\n      if (!firstRxNorm) {\n        throw Error('The first resource does not have an RxNorm code.');\n      }\n\n      for (const rs of medicationOrderList) {\n        if (rs.rxNormCode !== firstRxNorm) {\n          throw Error('The resource list in this set has mixed RxNorm codes.');\n        }\n      }\n      this.rxNormCode = firstRxNorm;\n      this.medicationConcept = this.rxNormCode.displayGrouping;\n\n      this.minDose = Math.min(\n          ...medicationOrderList.map(x => x.administrationsForOrder.minDose));\n      this.maxDose = Math.max(\n          ...medicationOrderList.map(x => x.administrationsForOrder.maxDose));\n\n      const units =\n          new Set(medicationOrderList.map(x => x.administrationsForOrder.unit));\n      if (units.size > 1) {\n        throw Error(\n            'Different units in the order set: ' + Array.from(units.values()));\n      }\n      this.unit = Array.from(units.values())[0];\n    }\n  }\n}\n/* tslint:enable:object-literal-shorthand*/\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {LabeledClass} from '../fhir-resource-set';\nimport {Dosage} from './dosage';\n\n/**\n * This object represents relevant components of a medication contained as part\n * of a MedicationAdministration.\n * This is not a FHIR resource, and differs from the defined Medication\n * documentation at http://hl7.org/fhir/dstu2/medication.html.\n */\nexport class ContainedMedication extends LabeledClass {\n  readonly code: RxNormCode;\n  readonly dosage: Dosage;\n  readonly id: string;\n  constructor(json: any, ingredients: Map<string, any>) {\n    super(json.code ? json.code.text : null);\n    // We want to construct new Medications for jsons containing RxNorm codes.\n    if (json.resourceType !== 'Medication') {\n      throw Error('Resource must be of type Medication');\n    }\n    if (json.code) {\n      if (json.code.coding) {\n        this.code =\n            json.code.coding\n                .map(\n                    // Map the codes to a boolean that is true only if the\n                    // encoding is an RxNormCode encoding, and the RxNorm code\n                    // appeas in our RxNormCode list that we care about.\n                    (coding) => (!coding.system ||\n                                 coding.system.indexOf(\n                                     RxNormCode.CODING_STRING) !== -1) &&\n                        RxNormCode.fromCodeString(coding.code))\n                // Filter out any codes that are not RxNorm codes.\n                .filter((code) => !!code)[0];\n      }\n    }\n    if (!this.code) {\n      throw Error('Medication must have RxNorm code to be useful');\n    }\n    this.id = json.id;\n    const reference = ingredients.get(this.id);\n    if (!reference) {\n      throw Error(\n          'Medication info must have been contained in ingredient list.');\n    }\n    if (this.id) {\n      //  The dosage format is different for contained\n      // portions of Medications.\n      const dosage = {\n        dosage: {\n          quantity: {\n            value: reference.amount.numerator ?\n                reference.amount.numerator.value :\n                null,\n            unit: reference.amount.numerator ? reference.amount.numerator.unit :\n                                               null\n          },\n        }\n      };\n      this.dosage = new Dosage(dosage);\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/** This is the URL for the coding system for observation interpretations. */\nexport const OBSERVATION_INTERPRETATION_VALUESET_URL =\n    'http://hl7.org/fhir/ValueSet/observation-interpretation';\n\n/**\n * These are codes corresponding to ObservationInterpretations used in\n * MicrobioGraph.\n */\nexport const CHECK_RESULT_CODE = 'CHECKRESULT';\nexport const NEGFLORA_CODE = 'NEGORFLORA';\nexport const NEG_CODE = 'NEG';\n\n/**\n * Represents the possible interpretations for observations. Each interpretation\n * has a code (usually 1-3 characters) plus a text description for display.\n * This class also keeps track of a map of codes to display text.\n */\nexport class ObservationInterpretation {\n  static codeToObject = new Map<string, ObservationInterpretation>();\n\n  readonly code: string;\n  readonly display: string;\n\n  constructor(code: string, display: string) {\n    this.code = code;\n    this.display = display;\n    ObservationInterpretation.codeToObject.set(code, this);\n  }\n}\n\n/**\n * These are the FHIR standard value set values.\n * http://hl7.org/fhir/valueset-observation-interpretation.html\n */\nconst STANDARD_FHIR_INTERPRETATIONS = [\n  new ObservationInterpretation('<', 'Off scale low'),\n  new ObservationInterpretation('>', 'Off scale high'),\n  new ObservationInterpretation('A', 'Abnormal'),\n  new ObservationInterpretation('A', 'Critically abnormal'),\n  new ObservationInterpretation('AC', 'Anti-complementary substances present'),\n  new ObservationInterpretation('B', 'Better'),\n  new ObservationInterpretation('D', 'Significant change down'),\n  new ObservationInterpretation('DET', 'Detected'),\n  new ObservationInterpretation('H', 'High'),\n  new ObservationInterpretation('HH', 'Critically high'),\n  new ObservationInterpretation('HM', 'Hold for Medical Review'),\n  new ObservationInterpretation('HU', 'Very high'),\n  new ObservationInterpretation('I', 'Intermediate'),\n  new ObservationInterpretation('IE', 'Insufficient evidence'),\n  new ObservationInterpretation('IND', 'Indeterminate'),\n  new ObservationInterpretation('L', 'Low'),\n  new ObservationInterpretation('LL', 'Critically low'),\n  new ObservationInterpretation('LU', 'Very low'),\n  new ObservationInterpretation(\n      'MS',\n      'Moderately susceptible. Indicates for microbiology susceptibilities only.'),\n  new ObservationInterpretation('N', 'Normal'),\n  new ObservationInterpretation('ND', 'Not Detected'),\n  new ObservationInterpretation(NEG_CODE, 'Negative'),\n  new ObservationInterpretation('NR', 'Non-reactive'),\n  new ObservationInterpretation('NS', 'Non-susceptible'),\n  new ObservationInterpretation(\n      'null', 'No range defined, or normal ranges don\\'t apply'),\n  new ObservationInterpretation(\n      'OBX', 'Interpretation qualifiers in separate OBX segments'),\n  new ObservationInterpretation('POS', 'Positive'),\n  new ObservationInterpretation('QCF', 'Quality Control Failure'),\n  new ObservationInterpretation('R', 'Resistant'),\n  new ObservationInterpretation('RR', 'Reactive'),\n  new ObservationInterpretation('S', 'Susceptible'),\n  new ObservationInterpretation('SDD', 'Susceptible-dose dependent'),\n  new ObservationInterpretation('SYN-R', 'Synergy - resistant'),\n  new ObservationInterpretation('SYN-S', 'Synergy - susceptible'),\n  new ObservationInterpretation('TOX', 'Cytotoxic substance present'),\n  new ObservationInterpretation('U', 'Significant change up'),\n  new ObservationInterpretation(\n      'VS',\n      'Very susceptible. Indicates for microbiology susceptibilities only.'),\n  new ObservationInterpretation('W', 'Worse'),\n  new ObservationInterpretation('WR', 'Weakly reactive')\n];\n\n/**\n * This valueset is extensible, so here are some that BCH extends it with\n * for its microbiology results.\n */\nconst BCH_CUSTOM_INTERPRETATIONS = [\n  new ObservationInterpretation(CHECK_RESULT_CODE, 'Check result'),\n  new ObservationInterpretation(NEGFLORA_CODE, 'Negative or Flora')\n];\n\nconst ALL_INTERPRETATIONS =\n    [].concat(BCH_CUSTOM_INTERPRETATIONS, STANDARD_FHIR_INTERPRETATIONS);\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {FhirResourceSet} from '../fhir-resource-set';\n\nimport {AnnotatedObservation} from './annotated-observation';\n\n/**\n * A set of observations that belong together as part of the same series.\n */\nexport class ObservationSet extends FhirResourceSet<AnnotatedObservation> {\n  /**\n   * The normal range for this set of observations. Left unset if the normal\n   * range is different across the observations.\n   */\n  readonly normalRange: [number, number];\n\n  /**\n   * The units for this set of observations. Left unset if the normal\n   * range is different across the observations.\n   */\n  readonly unit: string;\n\n  /**\n   * Whether or not all Observations belonging to this ObservationSet contain\n   * all qualitative results rather than numerical values.\n   */\n  readonly allQualitative: boolean = false;\n\n  /**\n   * Constructor for ObservationSet.\n   * @param observationList The list of observations belonging together.\n   * @throws Error if the observations have different labels, as this indicates\n   *     that they are data points from different series, or if there is not\n   *     a label.\n   */\n  constructor(observationList: AnnotatedObservation[]) {\n    super(observationList);\n\n    let firstNormalRange;\n    let firstUnit;\n    if (observationList.length > 0) {\n      firstNormalRange = observationList[0].observation.normalRange;\n      firstUnit = observationList[0].observation.unit;\n    }\n    // Ensure that the labels of the data are all the same. Also ensure that\n    // we only set a normal range if all the observations have a matching\n    // normal range.\n    let differentNormalRanges = false;\n    let differentUnits = false;\n\n    for (const obs of observationList) {\n      // Some observations may not have a normal range.\n      if (obs.observation.normalRange &&\n          (obs.observation.normalRange[0] !== firstNormalRange[0] ||\n           obs.observation.normalRange[1] !== firstNormalRange[1])) {\n        differentNormalRanges = true;\n      }\n      // Some observations may not have a normal range.\n      if (obs.observation.unit && obs.observation.unit !== firstUnit) {\n        differentUnits = true;\n      }\n    }\n\n    if (!differentNormalRanges) {\n      this.normalRange = firstNormalRange;\n    }\n    if (!differentUnits) {\n      this.unit = firstUnit;\n    }\n\n    this.allQualitative = observationList.every(\n        obs => (obs.observation.result !== null && !obs.observation.value));\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\n\nimport {BCHMicrobioCode} from '../clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from '../clinicalconcepts/loinc-code';\nimport {ResourceCode} from '../clinicalconcepts/resource-code-group';\nimport {LabeledClass} from '../fhir-resource-set';\nimport {OBSERVATION_INTERPRETATION_VALUESET_URL, ObservationInterpretation} from './observation-interpretation-valueset';\n\n\n/**\n * These are the quantity attributes provided by FHIR. See\n * https://www.hl7.org/fhir/datatypes.html#quantity\n */\ninterface Quantity {\n  value: number;\n  comparator: string;\n  unit: string;\n  system: string;\n  code: string;\n}\n\n/**\n * FHIR element for ObservationStatus, from the DSTU2 version of the\n * standard.\n * http://hl7.org/fhir/DSTU2/valueset-observation-status.html\n */\nexport enum ObservationStatus {\n  Registered = 'Registered',\n  Preliminary = 'Preliminary',\n  Final = 'Final',\n  Amended = 'Amended',\n  Cancelled = 'Cancelled',\n  EnteredInError = 'Enteredinerror',\n  Unknown = 'Unknown'\n}\n\nconst statusToEnumMap = new Map<string, ObservationStatus>([\n  ['registered', ObservationStatus.Registered],\n  ['preliminary', ObservationStatus.Preliminary],\n  ['final', ObservationStatus.Final],\n  ['amended', ObservationStatus.Amended],\n  ['cancelled', ObservationStatus.Cancelled],\n  ['entered-in-error', ObservationStatus.EnteredInError],\n  ['unknown', ObservationStatus.Unknown],\n]);\n\n/**\n * This object represents a FHIR Observation. It does not contain all the\n * information in a standard Observation\n * (see https://www.hl7.org/fhir/observation.html#resource) but instead stores\n * only the information we're interested in seeing.\n *\n * In general, in terms of the MedTimeLine app, we represent an Observation\n * as a point on a line graph for a lab or a vital sign. Observations also hold\n * information about microbiology report results that show up in the\n * microbiology graph tooltips.\n * TODO(b/126222425): Add a descriptive readme to this folder.\n */\nexport class Observation extends LabeledClass {\n  readonly codes: ResourceCode[] = [];\n  timestamp: DateTime;\n  readonly value: Quantity;\n  // Populated if the Observation contains a qualitative result, such\n  // as \"Yellow\", rather than a numerical value.\n  readonly result: string;\n  readonly normalRange: [number, number];\n  readonly unit: string;\n  readonly innerComponents: Observation[] = [];\n  // The display string associated with the code for this Observation.\n  readonly display: string;\n  readonly interpretation: ObservationInterpretation;\n  readonly status: ObservationStatus;\n\n  // The number of decimal places stored in the value.\n  readonly precision: number;\n\n\n  /**\n   * Makes an Observation out of a JSON object that represents a\n   * a FHIR observation.\n   * @param json A JSON object that represents a FHIR observation.\n   */\n  constructor(private json: any) {\n    super(Observation.getLabel(json));\n    // TODO(b/111990521): If there are hours and minutes then we can\n    // guarantee timezone is specified, but if not, then the timezone might\n    // not be specified! I'm not sure how to best handle that.\n    // https://www.hl7.org/fhir/DSTU2/datatypes.html#dateTime\n    this.timestamp = json.effectiveDateTime ?\n        DateTime.fromISO(json.effectiveDateTime).toUTC() :\n        json.issued ? DateTime.fromISO(json.issued).toUTC() : null;\n    if (json.code) {\n      if (json.code.coding) {\n        // TODO(b/121318193): Implement better parsing of Observations with BCH\n        // Codes (associated with Microbiology data).\n        if (json.code.coding[0].system === BCHMicrobioCode.CODING_STRING) {\n          this.codes = json.code.coding.map(\n              (coding) => BCHMicrobioCode.fromCodeString(coding.code));\n          this.display = json.code.coding[0].display;\n        } else {\n          this.codes =\n              json.code.coding\n                  .map(\n                      // Map the codes to a boolean that is true only if the\n                      // encoding is a LOINC encoding, and the LOINC code appeas\n                      // in our LOINCCode list that we care about.\n                      (coding) => (!coding.system ||\n                                   coding.system.indexOf(\n                                       LOINCCode.CODING_STRING) !== -1) &&\n                          LOINCCode.fromCodeString(coding.code))\n                  // Filter out any codes that are not LOINC codes.\n                  .filter((code) => !!code);\n        }\n      }\n    }\n\n    if (json.interpretation && json.interpretation.coding) {\n      const coding = json.interpretation.coding[0];\n      if (coding.system === OBSERVATION_INTERPRETATION_VALUESET_URL) {\n        if (ObservationInterpretation.codeToObject.has(coding.code)) {\n          this.interpretation =\n              ObservationInterpretation.codeToObject.get(coding.code);\n        } else {\n          throw Error(\n              'Unsupported interpretation code: ' + JSON.stringify(coding));\n        }\n      }\n      // Silently ignore encodings coming from other systems.\n    }\n\n    if (json.component) {\n      json.component.forEach(element => {\n        const innerObs = new Observation(element);\n        if (!innerObs.timestamp) {\n          innerObs.timestamp = this.timestamp;\n        }\n        this.innerComponents.push(innerObs);\n      });\n    }\n\n    if (!this.codes || this.codes.length === 0) {\n      throw Error(\n          'Observations have to have a LOINC code to be useful.' +\n          ' Label: ' + this.label + '\\nJSON: ' + JSON.stringify(json));\n    }\n\n    if (!this.label) {\n      throw Error(\n          'Observations have to have a label to be useful. ' +\n          'JSON: ' + JSON.stringify(json));\n    }\n\n    /*\n    TODO(b/119673528): Work out which labels we're going to use for BCH, then\n    re-enable.\n    // Check the observation label against the LOINC code label.\n    if (this.label !== this.loincCodes[0].label) {\n      throw Error(\n          'The label for this observation\\'s LOINC code doesn\\'t match ' +\n          ' the label in the data. Observation label: ' + this.label +\n          ' LOINC label: ' + this.loincCodes[0].label);\n    }\n    */\n\n    this.value = json.valueQuantity ? json.valueQuantity : null;\n    if (this.value) {\n      this.unit = this.value.unit;\n    }\n\n    // We must calculate precision before the value is stored as a number, where\n    // precision is lost.\n    if (json.valueQuantity && json.valueQuantity.value) {\n      const values = json.valueQuantity.value.toString().split('.');\n      this.precision = values.length > 1 ? values[1].length : 0;\n    }\n\n    this.result =\n        json.valueCodeableConcept ? json.valueCodeableConcept.text : null;\n\n    // TODO(b/121318193): Impement better parsing of Observations with BCH Codes\n    // (associated with Microbiology data). These Observations might not have\n    // values or results.\n    if (this.value === null && this.result === null &&\n        this.interpretation === null && this.innerComponents.length === 0) {\n      throw Error(\n          'An Observation must have a value, result, inner components, ' +\n          'or an interpretation to be useful. JSON: ' + JSON.stringify(json));\n    }\n\n    // The FHIR standard says that if there's only one range then it should be\n    // what is \"normal\" for that measure. Otherwise they should be labeled.\n    // We are going to err on the side of safety and not include a normal range\n    // unless there's just the one, and it includes a high and low field.\n    // https://www.hl7.org/fhir/DSTU2/observation.html#4.20.4.4\n    // TODO(b/113575661): handle multiple ranges\n    if (json.referenceRange && json.referenceRange.length === 1) {\n      if (json.referenceRange[0].low && json.referenceRange[0].high) {\n        this.normalRange = [\n          json.referenceRange[0].low.value, json.referenceRange[0].high.value\n        ];\n      }\n    }\n\n    this.status = statusToEnumMap.get(json.status);\n  }\n\n  private static getLabel(json: any) {\n    let label;\n    if (json.code) {\n      label = json.code.text;\n      if (json.code.coding) {\n        if (json.code.coding[0].system === BCHMicrobioCode.CODING_STRING) {\n          label = json.code.coding[0].display;\n        }\n      }\n    }\n    return label;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n/**\n * FHIR resource for a Specimen, from the DSTU2 standard.\n * https://www.hl7.org/fhir/DSTU2/specimen.html\n */\nexport class Specimen {\n  /** If this is a contained resource, then it will have an ID string. */\n  readonly id: string;\n\n  /** Kind of material that forms the specimen */\n  readonly type: string;\n\n  /** Where the specimen was collected */\n  readonly bodySite: string;\n\n  /**\n   * When the specimen was collected. The specimen will have one or the other\n   * of these defined, but not both.\n   */\n  readonly collectedDateTime: DateTime;\n  readonly collectedPeriod: Interval;\n\n  constructor(json: any) {\n    if (json.id) {\n      this.id = json.id;\n    }\n\n    if (!json.type) {\n      throw Error(\n          'A specimen must have a type to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    this.type = json.type.text;\n\n    if (!json.collection) {\n      throw Error(\n          'A specimen must have collection information to be useful. JSON: ' +\n          JSON.stringify(json));\n    }\n    if (json.collection.collectedPeriod && json.collection.collectedDateTime) {\n      throw Error(\n          'Only collectedPeriod or collectionDateTime should be defined. JSON: ' +\n          JSON.stringify(json));\n    }\n\n    if (json.collection.collectedPeriod) {\n      const collectedPeriod = json.collection.collectedPeriod;\n      // If only the start time is present, put it into collectedDateTime.\n      if (collectedPeriod.start && !collectedPeriod.end) {\n        this.collectedDateTime = DateTime.fromISO(collectedPeriod.start);\n      } else {\n        this.collectedPeriod = Interval.fromDateTimes(\n            DateTime.fromISO(collectedPeriod.start),\n            DateTime.fromISO(collectedPeriod.end));\n      }\n    }\n\n    if (json.collection.collectedDateTime) {\n      this.collectedDateTime =\n          DateTime.fromISO(json.collection.collectedDateTime);\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Inject, Injectable, SecurityContext} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {FhirResourceType} from '../constants';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from './clinicalconcepts/loinc-code';\nimport {documentReferenceLoinc} from './clinicalconcepts/resource-code-manager';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation, ObservationStatus} from './fhir-data-classes/observation';\nimport {FhirService} from './fhir.service';\nimport {SMART_ON_FHIR_CLIENT} from './smart-on-fhir-client';\n\n\nconst GREATER_OR_EQUAL = 'ge';\nconst LESS_OR_EQUAL = 'le';\n\n// The Cerner implementation has a maximum result return of 100 for\n// observations.\nconst CERNER_MAX_OBS_RESULTS_RETURNED = 100;\n\n@Injectable()\nexport class FhirHttpService extends FhirService {\n  readonly smartApiPromise: Promise<any>;\n  errorMessage: string;\n\n  private createContentTypeString = 'application/xhtml+xml;charset=utf-8';\n\n  constructor(\n      @Inject(SMART_ON_FHIR_CLIENT) smartOnFhirClient: any,\n      private sanitizer: DomSanitizer) {\n    super();\n    // Create a promise which resolves to the smart API when the smart API is\n    // ready. This allows clients of this service to call service methods\n    // which depend on the API, regardless of whether the API is ready or not.\n    this.smartApiPromise = new Promise(\n        (resolve, reject) => smartOnFhirClient.oauth2.ready(\n            smart => resolve(smart), err => reject(err)));\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If set, the number of observations that should be\n   *     queried for\n   */\n  getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]> {\n    const queryParams = {\n      type: FhirResourceType.Observation,\n      query: {\n        code: LOINCCode.CODING_STRING + '|' + code.codeString,\n        date: {\n          $and: [\n            GREATER_OR_EQUAL + dateRange.start.toISO(),\n            LESS_OR_EQUAL + dateRange.end.toISO()\n          ]\n        },\n        _count: limitCount ? limitCount : CERNER_MAX_OBS_RESULTS_RETURNED\n      }\n    };\n\n    return this.smartApiPromise.then(\n        smartApi =>\n            smartApi.patient.api.fetchAll(queryParams)\n                .then(\n                    (results: any[]) =>\n                        results\n                            .map(result => {\n                              return new Observation(result);\n                            })\n                            // TODO(b/126775896): Determine which statuses to\n                            // filter out.\n                            .filter(\n                                result => result.status !==\n                                    ObservationStatus.EnteredInError),\n                    // Do not return any Observations for this code if one of\n                    // the Observation constructions throws an error.\n                    rejection => {\n                      throw rejection;\n                    }));\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * @param code The RxNormCode codes for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]> {\n    const queryParams = {\n      type: FhirResourceType.MedicationAdministration,\n      query: {\n        effectivetime: {\n          $and: [\n            GREATER_OR_EQUAL + dateRange.start.toISO(),\n            LESS_OR_EQUAL + dateRange.end.toISO()\n          ]\n        },\n        medication: {\n          code: RxNormCode.CODING_STRING + '|' + code.codeString,\n        }\n      }\n    };\n\n    if (limitCount) {\n      queryParams.query['_count'] = limitCount;\n    }\n\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then(\n                            (results: any[]) => results.map(result => {\n                              return new MedicationAdministration(result);\n                            }),\n                            // Do not return any MedicationAdministrations for\n                            // this code if one of the MedicationAdministration\n                            // constructions throws an error.\n                            rejection => {\n                              throw rejection;\n                            }));\n  }\n\n  /**\n   * Gets order for specified external id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationOrderWithId(id: string): Promise<MedicationOrder> {\n    return this.smartApiPromise.then(\n        smartApi =>\n            smartApi.patient.api\n                .read({type: FhirResourceType.MedicationOrder, 'id': id})\n                .then(\n                    (result: any) => {\n                      return new MedicationOrder(result.data);\n                    },\n                    // Do not return any MedicationOrders for\n                    // this code if one of the MedicationOrder\n                    // constructions throws an error.\n                    rejection => {\n                      throw rejection;\n                    }));\n  }\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]> {\n    const queryParams = {\n      type: FhirResourceType.MedicationAdministration,\n\n      query: {\n        prescription:\n            {reference: [FhirResourceType.MedicationOrder, id].join('/')}\n      }\n    };\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then(\n                            (results: any[]) => {\n                              results.map(result => {\n                                return new MedicationAdministration(result);\n                              });\n                            },\n                            // Do not return any MedicationOrders for\n                            // this code if one of the MedicationOrder\n                            // constructions throws an error.\n                            rejection => {\n                              throw rejection;\n                            }));\n  }\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  getEncountersForPatient(dateRange: Interval): Promise<Encounter[]> {\n    const queryParams = {\n      type: FhirResourceType.Encounter,\n    };\n\n    // The Cerner implementation of the Encounter search does not offer any\n    // filtering by date at this point, so we grab all the encounters\n    // then filter them.\n\n    return this.smartApiPromise.then(\n        smartApi => smartApi.patient.api.fetchAll(queryParams)\n                        .then((results: any[]) => {\n                          results\n                              .map(result => {\n                                return new Encounter(result);\n                              })\n                              .filter(\n                                  encounter => dateRange.intersection(\n                                                   encounter.period) !== null);\n                        }));\n  }\n\n  /**\n   * Saves the current HTML of the graphs rendered as a DocumentReference\n   * (static save).\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written on.\n   */\n  saveStaticNote(html: string, date: string) {\n    html = this.sanitizer.sanitize(SecurityContext.HTML, html);\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    const xhtml = new XMLSerializer().serializeToString(doc);\n    const testData = {\n      resource: {\n        resourceType: FhirResourceType.DocumentReference,\n        type: {\n          coding: [{\n            system: LOINCCode.CODING_STRING,          // must be loinc\n            code: documentReferenceLoinc.codeString,  // Summary Note\n          }],\n        },\n        indexed: date,\n        status:\n            'current',  // Required; only supported option is 'current'\n                        // https://fhir.cerner.com/millennium/dstu2/infrastructure/document-reference/#body-fields\n        content: [{\n          attachment: {\n            contentType: this.createContentTypeString,\n            data: btoa(xhtml),\n          }\n        }],\n      }\n    };\n    // TODO(b/119119092): Currently we only have permissions to write for\n    // Timmy (patient id 4342012), not Wilma\n    this.smartApiPromise.then(smartApi => {\n      testData['resource']['subject'] = {\n        reference: [FhirResourceType.Patient, smartApi.patient.id].join('/')\n      };\n      testData['resource']['context'] = {\n        encounter: {\n          reference: [\n            FhirResourceType.Encounter, smartApi.tokenResponse.encounter\n          ].join('/')\n        }\n      };\n      smartApi.patient.api.create(testData);\n      return smartApi;\n    });\n  }\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in this\n   *   date range.\n   */\n  // TODO(b/119121684): Make API calls to get DiagnosticReports.\n  getDiagnosticReports(codeGroup: BCHMicrobioCodeGroup, dateRange: Interval):\n      Promise<DiagnosticReport[]> {\n    return Promise.resolve([]);\n  }\n}\n","module.exports = \"\"","module.exports = \"<span *ngIf=\\\"!error\\\">Launching...</span>\\n<span *ngIf=\\\"error\\\">Error: This app is not configured for this EHR.</span>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport 'fhirclient';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Router} from '@angular/router';\n\nimport {environment} from '../../environments/environment';\n\nimport * as FhirConfig from './../fhir_config.js';\n\n/* Type definition for SMART on FHIR client (from assets/fhir-client.min.js) */\ndeclare var FHIR: any;\n\n@Component({\n  selector: 'app-fhir-launch',\n  templateUrl: './fhir-launch.component.html',\n  styleUrls: ['./fhir-launch.component.css']\n})\n\nexport class FhirLaunchComponent implements OnInit {\n  error = false;\n\n  private scope: string = [\n    'launch', 'patient/Observation.read', 'patient/Patient.read',\n    'patient/MedicationOrder.read', 'patient/MedicationAdministration.read',\n    'patient/DocumentReference.read', 'patient/DocumentReference.write',\n    'patient/Encounter.read'\n  ].join(' ');\n\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    if (environment.useMockServer) {\n      this.router.navigate(['']);\n    } else {\n      const clientId = FhirConfig.credentials.client_id;\n      if (!clientId) {\n        this.error = true;\n      } else {\n        FHIR.oauth2.authorize({\n          'client_id': clientId,\n          'scope': this.scope,\n          'redirect_uri': FhirConfig.url.redirectURL\n        });\n      }\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/**\n * A class that has a label attribute.\n */\nexport class LabeledClass {\n  constructor(readonly label: string) {}\n}\n\n/**\n * A set of FHIR resources. All resources that are a part of this set must\n * have the same label.\n */\nexport class FhirResourceSet<T extends LabeledClass> {\n  /**\n   * The list of resources that belong together.\n   */\n  readonly resourceList: T[];\n\n  /*\n   * The label for this set of data. All data in this set\n   * must have the same label.\n   */\n  label: string;\n\n  /**\n   * Constructor for FhirResourceSet.\n   * @param resourceList The list of resources belonging together.\n   * @throws Error if the resources have different labels, or if there is not\n   *     a label.\n   */\n  constructor(resourceList: T[]) {\n    if (!resourceList) {\n      throw Error('Resource list is undefined.');\n    }\n\n    if (resourceList.length > 0) {\n      const firstLabel = resourceList[0].label;\n      if (!firstLabel) {\n        throw Error('The first resource does not have a label.');\n      }\n\n      const allLabels = new Set(resourceList.map(rs => rs.label.toLowerCase()));\n      if (allLabels.size !== 1) {\n        throw Error(\n            'The resource list in this set has mixed labels: ' +\n            Array.from(allLabels.values()));\n      }\n      this.label = firstLabel;\n    }\n\n    this.resourceList = resourceList;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Injectable} from '@angular/core';\nimport {Interval} from 'luxon';\nimport {of} from 'rxjs';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode, LOINCCodeGroup} from './clinicalconcepts/loinc-code';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {RxNormCodeGroup} from './clinicalconcepts/rx-norm-group';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation} from './fhir-data-classes/observation';\nimport {ChartType} from './graphtypes/graph/graph.component';\n\n@Injectable()\nexport abstract class FhirService {\n  errorMessage: string;\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  observationsPresentWithCode(code: LOINCCode, dateRange: Interval):\n      Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getObservationsWithCode(code, dateRange, 1)\n        .then(obs => obs.length > 0, rejection => {\n          // If any Observation for this code results in an error, do not show\n          // any Observations at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The BCHMicrobio code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  diagnosticReportsPresentWithCodes(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval): Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getDiagnosticReports(codeGroup, dateRange, 1)\n        .then(reports => reports.length > 0, rejection => {\n          // If any DiagnosticReports for this code results in an error, do not\n          // show any DiagnosticReports at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  abstract getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]>;\n\n  /**\n   * Gets observations from a specified date range with a specific code group.\n   * @param codeGroup The LOINCCodeGroup code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @returns The observations if there's a valid code group or date range.\n   */\n  getObservationsForCodeGroup(codeGroup: LOINCCodeGroup, dateRange: Interval):\n      Promise<Observation[][]> {\n    if (!codeGroup || !dateRange) {\n      return of([]).toPromise();\n    }\n    const observationPromises = new Array<Promise<Observation[]>>();\n    for (const c of codeGroup.resourceCodes) {\n      if (c instanceof LOINCCode) {\n        observationPromises.push(this.getObservationsWithCode(c, dateRange));\n      }\n    }\n    return Promise.all(observationPromises);\n  }\n\n  /**\n   * Returns whether there are any observations with this code in the given\n   * time range.\n   * @param code The RxNorm code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   */\n  medicationsPresentWithCode(code: RxNormCode, dateRange: Interval):\n      Promise<boolean> {\n    // Just ask for one result to reduce the call time.\n    return this.getMedicationAdministrationsWithCode(code, dateRange, 1)\n        .then(obs => obs.length > 0, rejection => {\n          // If any MedicationAdministration for this code results in an error,\n          // do not show any MedicationAdministrations at all.\n          throw rejection;\n        });\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * group.\n   * @param codeGroup The RxNormCode code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If provided, the maximum number of observations to\n   *     query for.\n   */\n  abstract getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]>;\n\n  /**\n   * Gets medication data from a specified date range with specific Rx codes,\n   * since multiple medications are displayed on a single chart.\n   * @param codes The RxNormCode codes for which to get observations.\n   * @param dateRanges The time interval observations should fall between.\n   */\n  getMedicationAdministrationsWithCodes(\n      codes: RxNormCodeGroup,\n      dateRange: Interval): Promise<MedicationAdministration[][]> {\n    if (!codes || !dateRange) {\n      return of([]).toPromise();\n    }\n    const medicationPromises = new Array<Promise<MedicationAdministration[]>>();\n    for (const code of codes.resourceCodes) {\n      medicationPromises.push(this.getMedicationAdministrationsWithCode(\n          code as RxNormCode, dateRange));\n    }\n    // This will be rejected if any Promise is rejected.\n    return Promise.all(medicationPromises);\n  }\n\n  /**\n   * Gets the order for specified order id.\n   * @param id The id to pull the order from.\n   */\n  abstract getMedicationOrderWithId(id: string): Promise<MedicationOrder>;\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  abstract getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]>;\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  abstract getEncountersForPatient(dateRange: Interval): Promise<Encounter[]>;\n\n  /**\n   * Saves the current HTML of the graphs rendered as a DocumentReference\n   * (static save).\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written on.\n   */\n  abstract saveStaticNote(html: string, date: string): void;\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in this\n   *   date range.\n   */\n  abstract getDiagnosticReports(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval,\n      limitCount?: number): Promise<DiagnosticReport[]>;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {FhirService} from '../fhir.service';\nimport {CustomizableGraphAnnotation} from '../graphtypes/customizable-graph/customizable-graph-annotation';\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * CustomizableData holds a time-based series to which a user can add more\n * points.\n */\nexport class CustomizableData extends GraphData {\n  /** The display bounds of the y-axis. */\n  readonly yAxisDisplayBounds: [number, number];\n\n  private constructor(\n      series: LabeledSeries,\n      /**\n       * The annotations for this customizable graph. If populated, holds a\n       * map from a number representation of a Date to\n       * CustomizableGraphAnnotation for the corresponding point.\n       */\n      readonly annotations: Map<number, CustomizableGraphAnnotation>,\n      regions?: any[]) {\n    super([series], new Map(), undefined, undefined, regions);\n    this.annotations = annotations;\n    this.yAxisDisplayBounds = [0, 10];\n  }\n\n  static defaultEmptySeries() {\n    // We need to initialize the data with a point so that the c3 chart can show\n    // the x-axis with the dates (otherwise, it turns up blank). This date is\n    // the earliest possible date: Tuesday, April 20th, 271,821 BCE.\n    return CustomizableData.fromInitialPoint(\n        0,\n        new CustomizableGraphAnnotation(\n            DateTime.fromJSDate(new Date(-8640000000000000)),\n            'initial_point_hidden'));\n  }\n\n  /**\n   * Converts an initial time and y value to a CustomizableData object.\n   * @param date The date for this initial point.\n   * @param yValue The y-value for this initial point.\n   * @param annotation The CustomizableGraphAnnotation for this point.\n   * @returns a new CustomizableData representing this initial point.\n   */\n  // TODO(b/123940928): Consider passing in encounters rather than FhirService.\n  static fromInitialPoint(\n      yValue: number, annotation: CustomizableGraphAnnotation) {\n    const annotations = new Map<number, CustomizableGraphAnnotation>().set(\n        annotation.timestamp.toMillis(), annotation);\n    return new CustomizableData(\n        LabeledSeries.fromInitialPoint(annotation.timestamp, yValue),\n        annotations);\n  }\n\n  /**\n   * Adds a point to the series in this CustomizableData object.\n   * @param date The date for this point.\n   * @param yValue The y-value for this point.\n   * @param annotation The CustomizableGraphAnnotation for this point.\n   * @returns a new CustomizableData with the addition of this point.\n   */\n  addPointToSeries(yValue: number, annotation: CustomizableGraphAnnotation) {\n    // This method assumes there is only 1 series.\n    this.series[0].xValues.push(annotation.timestamp);\n    this.series[0].yValues.push(yValue);\n    this.annotations.set(annotation.timestamp.toMillis(), annotation);\n    this.c3DisplayConfiguration = this.generateColumnMapping(new Map());\n  }\n\n  /**\n   * Removes a point from the series in this CustomizableData object, as well as\n   * the corresponding annotation.\n   * @param date The date for this point to remove.\n   */\n  removePointFromSeries(date: DateTime) {\n    const index =\n        this.series[0].xValues.findIndex(x => x.toMillis() === date.toMillis());\n    this.series[0].xValues.splice(index, 1);\n    this.series[0].yValues.splice(index, 1);\n    this.annotations.delete(date.toMillis());\n    this.c3DisplayConfiguration = this.generateColumnMapping(new Map());\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime} from 'luxon';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {LabeledSeries} from './labeled-series';\n\nexport class DisplayConfiguration {\n  constructor(\n      /**\n       * These columns feed in to c3 as data. Each item in allColumns is\n       * an array of data. The first entry is the series label and the following\n       * entries are the data for that series.\n       */\n\n      readonly allColumns: any[],\n      /**\n       * The keys of this map are the name of the y-series as stored in\n       * allColumns, and the values are their corresponding x-series names.\n       */\n      readonly columnMap: {},\n      /**\n       * Maps y-series names (keys) to DisplayGroupings.\n       */\n      readonly ySeriesLabelToDisplayGroup: Map<string, DisplayGrouping>) {}\n}\n\n/*\n * The base class for holding data pertaining to one graph.\n */\nexport class GraphData {\n  // The DisplayConfiguration, including data and column names, for this\n  // GraphData.\n  c3DisplayConfiguration: DisplayConfiguration;\n\n  // A list of x-regions to highlight on the graph.\n  xRegions: any[];\n\n  // The number of decimal places to show for any value associated with this\n  // GraphData. The default is 0, to minimize errors caused by unnecessary\n  // trailing zeros.\n  precision = 0;\n\n  constructor(\n      /** A list of the series to be displayed on the graph. */\n      readonly series: LabeledSeries[],\n      /**\n       * The DisplayGroups (for example, lab results, vital signs, medications)\n       * associated with particular series. We use this to make a custom legend\n       * for the graph.\n       */\n      seriesToDisplayGroup: Map<LabeledSeries, DisplayGrouping>,\n      /**\n       * A map to provide tooltips.\n       * This is a bit complicated. c3's API lets you specify a function call\n       * that will provide the HTML content for any given point's tooltip.\n       * As a parameter, it passes in one or more data points:\n       * https://c3js.org/reference.html#tooltip-contents\n       * so when the tooltip is rendered, all you have is the plotted\n       * information. As far as I can tell, that data structure is undocumented.\n       * Upon inspection, the data point includes which series it belongs to,\n       * the x value, and the y value, so if you want to render a custom\n       * tooltip, you have to be able to derive all the information you need\n       * from those values.\n       * tooltipMap, alongside tooltipKeyFn, helps with this process.\n       * If you call tooltipKeyFn on the data object passed into the c3 contents\n       * function, it should yield the key into tooltipMap that will let you\n       * look up the appropriate tooltip for that data point. If tooltipKeyFn\n       * is unset, then we fall back to the default lookup, which is by x-value.\n       */\n      readonly tooltipMap?: Map<string, string>,\n      /**\n       * See documentation on tooltipMap for more detail. tooltipKeyFn\n       * takes in a graph data point and returns the key into tooltipMap that\n       * provides the tooltip for that data point.\n       */\n      readonly tooltipKeyFn?: (graphData: any) => string,\n      /**\n       * A list of x-axis regions to display on the graph.\n       */\n      regions?: any[]) {\n    this.c3DisplayConfiguration =\n        this.generateColumnMapping(seriesToDisplayGroup);\n    this.xRegions = regions;\n  }\n\n  /*\n   * Sets up the column map and list of columns to use while generating the c3\n   * chart.\n   * @param data The GraphData to use while making the columns and column map.\n   */\n  generateColumnMapping(seriesToDisplayGroup:\n                            Map<LabeledSeries, DisplayGrouping>):\n      DisplayConfiguration {\n    // Give labels to each series and make a map of x-values to y-values.\n    const allColumns: any[][] = [];\n    const columnMap = {};\n    const ySeriesLabelToDisplayGroup = new Map<string, DisplayGrouping>();\n    for (const s of this.series) {\n      allColumns.push(\n          new Array<string|DateTime>('x_' + s.label).concat(s.xValues));\n      allColumns.push(new Array<string|number>(s.label).concat(s.yValues));\n      columnMap[s.label] = 'x_' + s.label;\n\n      ySeriesLabelToDisplayGroup.set(s.label, seriesToDisplayGroup.get(s));\n    }\n    // If there is no data, we add a \"dummy\" data point to still display the\n    // x-axis.\n    if (allColumns.length < 1) {\n      // Add a data point to still show the x-axis.\n      // This date is the earliest possible date: Tuesday, April 20th, 271,821\n      // BCE.\n      allColumns.push(\n          ['x_empty', DateTime.fromJSDate(new Date(-8640000000000000))],\n          ['empty', 0]);\n      columnMap['empty'] = 'x_empty';\n    }\n    return new DisplayConfiguration(\n        allColumns, columnMap, ySeriesLabelToDisplayGroup);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Interval} from 'luxon';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {DiagnosticReport} from '../fhir-data-classes/diagnostic-report';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationAdministration} from '../fhir-data-classes/medication-administration';\n\nimport {MedicationOrder, MedicationOrderSet} from './../fhir-data-classes/medication-order';\nimport {ObservationSet} from './../fhir-data-classes/observation-set';\n\n/**\n * Timeseries data, represented as a list of <DateTime, number> tuples,\n * with metadata including a human-readable label, a unit, and a typical range.\n * Used for most charts to display a changing value over time. Multiple\n * LabeledSeries may appear on the same graph.\n */\nexport class LabeledSeries {\n  /** The descriptive label of the data series. */\n  readonly label: string;\n\n  /** The descriptive units of the data series. */\n  unit: string;\n\n  /**\n   * The x-values for this data series. This array should be parallel to the\n   * yValues series, so that (xValues[n], yValues[n]) forms a coordinate.\n   */\n  readonly xValues: DateTime[];\n  /**\n   * The y-values for this data series. This array should be parallel to the\n   *  xValues series, so that (xValues[n], yValues[n]) forms a coordinate.\n   */\n  readonly yValues: number[];\n\n  /**\n   * This tuple represents the low and high bounds of what should be\n   * considered \"normal\" along the y-axis.\n   */\n  readonly yNormalBounds: [number, number];\n\n  /**\n   * This is the desired display range for the y-axis for this series. We\n   * calculate it as as:\n   * [minimum(yNormalBounds, yValues), maximum(yNormalBounds, yValues)]\n   */\n  readonly yDisplayBounds: [number, number];\n\n  /**\n   * This is the concept group representing the data of this series.\n   */\n  readonly concept: DisplayGrouping;\n\n  constructor(\n      lbl: string, coordinates: Array<[DateTime, number]>, unit?: string,\n      yNormalBounds?: [number, number], concept?: DisplayGrouping) {\n    this.label = lbl;\n    this.xValues = [];\n    this.yValues = [];\n    this.unit = unit;\n\n    /*\n     * Separate out the coordinates into x and y values because that's what\n     * the graphing library will expect.\n     */\n    for (const [x, y] of coordinates) {\n      this.xValues.push(x);\n      this.yValues.push(y);\n    }\n    this.yNormalBounds = yNormalBounds;\n    this.concept = concept;\n\n    /**\n     * Calculate the y axis display bounds by finding the outer boundaries of\n     * the data and the normal range.\n     */\n    this.yDisplayBounds = [\n      Math.min.apply(Math, this.yValues), Math.max.apply(Math, this.yValues)\n    ];\n\n    if (this.yNormalBounds) {\n      this.yDisplayBounds = [\n        Math.min(this.yDisplayBounds[0], this.yNormalBounds[0]),\n        Math.max(this.yDisplayBounds[1], this.yNormalBounds[1])\n      ];\n    }\n  }\n\n  /**\n   * Generates a LabeledSeries from the given ObservationSet.\n   * @param observationSet The ObservationSet to chart.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   */\n  static fromObservationSet(\n      observationSet: ObservationSet, encounters: Encounter[]): LabeledSeries {\n    let coordinates: Array<[DateTime, number]> = [];\n    const observations = observationSet.resourceList;\n    for (const obs of observations) {\n      coordinates.push(\n          [obs.observation.timestamp, obs.observation.value.value]);\n    }\n\n    coordinates = this.addEncounterEndpoints(coordinates, encounters);\n    return new LabeledSeries(\n        observationSet.label, coordinates, observationSet.unit,\n        observationSet.normalRange);\n  }\n\n  /**\n   * Generates a LabeledSeries from the given list of discrete resulted-\n   * ObservationSets.\n   * For Observations with discrete values, such as \"yellow\"\n   * for the color of urine, we group all ObservationSets into one\n   * LabeledSeries, at a specific yValue.\n   * @param observationSets The discrete ObservationSets to chart.\n   * @param yValue The numerical y-value to map to this ObservationSet with\n   *     discrete results.\n   * @param label The label for this LabeledSeries.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   */\n  static fromObservationSetsDiscrete(\n      observationSets: ObservationSet[], yValue: number, label,\n      encounters: Encounter[]): LabeledSeries {\n    let coordinates: Array<[DateTime, number]> = [];\n    for (const obsSet of observationSets) {\n      const observations = obsSet.resourceList;\n      for (const obs of observations) {\n        coordinates.push([obs.observation.timestamp, yValue]);\n      }\n    }\n    coordinates = this.addEncounterEndpoints(coordinates, encounters);\n    return new LabeledSeries(label, coordinates);\n  }\n\n  /**\n   * Generates a set of LabeledSeries from the given MedicationOrderSet. It will\n   * return one series for all the orders together since the order set\n   * represents all orders for the same medication.\n   * @param medOrderSet The MedicationOrderSet to chart.\n   * @param dateRange The date range displayed on the chart.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @param fixedYPosition If set, we use this y-position for all the\n   *    datapoints in both returned series. If unset, we use the dosage\n   *    quantity for each administration as the y-value.\n   */\n  static fromMedicationOrderSet(\n      medOrderSet: MedicationOrderSet, dateRange: Interval,\n      encounters: Encounter[], fixedYPosition?: number): LabeledSeries {\n    const data = [];\n    for (const medOrder of medOrderSet.resourceList) {\n      // The first series in fromMedicationOrder is all the administrations.\n      // The second series (unused in this function) is the end points only.\n      data.push(LabeledSeries.fromMedicationOrder(\n          medOrder, dateRange, fixedYPosition)[0]);\n    }\n\n    // Combine all the series into a single series so that it shows up with\n    // the same color.\n    let coords = [];\n    for (const series of data) {\n      for (let i = 0; i < series.xValues.length; i++) {\n        coords.push([series.xValues[i], series.yValues[i]]);\n      }\n    }\n\n    coords = this.addEncounterEndpoints(coords, encounters);\n    return new LabeledSeries(\n        medOrderSet.label, coords, medOrderSet.unit,\n        undefined,  // yNormalBounds\n        // TODO(b/122468555): Enforce that medOrderSets have to have a\n        // RxNormCode upon construction\n        medOrderSet.rxNormCode ? medOrderSet.rxNormCode.displayGrouping :\n                                 undefined);\n  }\n\n  /**\n   * Generates a set of LabeledSeries from the given MedicationOrder. For each\n   * order, there are two LabeledSeries -- one for the corresponding\n   * MedicationAdministrations, and one for the endpoints displayed for the\n   * order.\n   * @param order The MedicationOrder to chart.\n   * @param dateRange The date range displayed on the chart.\n   * @param fixedYPosition If set, we use this y-position for all the\n   *    datapoints in both returned series. If unset, we use the dosage\n   *    quantity for each administration as the y-value.\n   */\n  static fromMedicationOrder(\n      order: MedicationOrder, dateRange: Interval,\n      fixedYPosition?: number): LabeledSeries[] {\n    const coordinates = new Array<[DateTime, number]>();\n    const endpointCoordinates = new Array<[DateTime, number]>();\n    const medAdminsForOrder = order.administrationsForOrder;\n\n    const label = order.label + order.orderId;\n\n    if (medAdminsForOrder) {\n      for (const annotatedAdmin of medAdminsForOrder.resourceList) {\n        coordinates.push([\n          annotatedAdmin.medAdministration.timestamp,\n          this.getYPositionForMed(\n              annotatedAdmin.medAdministration, fixedYPosition)\n        ]);\n      }\n      // We add the beginning and end time stamp if the order is not fully\n      // displayed-- so that no dashes are displayed when an order is being\n      // carried over from before the time window displayed.\n      // We only display an endpoint for a MedicationOrder if the\n      // endpoint is visible -- that is, if the time of the first\n      // Administration of the order is during or after the beginning of the\n      // time range of the chart, and if the time of the last Administration\n      // of the order is before the end of the chart's time range.\n      const firstAdministrationIsAfterStartTime =\n          order.firstAdministration.timestamp.toMillis() >=\n          dateRange.start.toMillis();\n      const lastAdministrationIsBeforeEndTime =\n          order.lastAdmininistration.timestamp.toMillis() <=\n          dateRange.end.toMillis();\n\n      if (firstAdministrationIsAfterStartTime) {\n        endpointCoordinates.push([\n          order.firstAdministration.timestamp,\n          this.getYPositionForMed(order.firstAdministration, fixedYPosition)\n        ]);\n      } else if (\n          fixedYPosition &&\n          (order.lastAdmininistration.timestamp.toMillis() >\n           dateRange.start.toMillis())) {\n        // Only add a point for continuity if we have a fixed y position.\n        coordinates.push([dateRange.start, fixedYPosition]);\n      }\n      if (lastAdministrationIsBeforeEndTime) {\n        endpointCoordinates.push([\n          order.lastAdmininistration.timestamp,\n          this.getYPositionForMed(order.lastAdmininistration, fixedYPosition)\n        ]);\n      } else if (\n          fixedYPosition &&\n          order.firstAdministration.timestamp.toMillis() <\n              dateRange.end.toMillis()) {\n        // Only add a point for continuity if we have a fixed y position.\n        coordinates.push([dateRange.end, fixedYPosition]);\n      }\n    }\n\n    return [\n      new LabeledSeries(\n          label, coordinates, medAdminsForOrder.unit,\n          undefined,  // yNormalBounds\n          order.rxNormCode.displayGrouping),\n      new LabeledSeries(\n          'endpoint' + label, endpointCoordinates, medAdminsForOrder.unit)\n    ];\n  }\n\n  /**\n   * Generates a LabeledSeries from the given initial date and y-value.\n   * @param date The DateTime corresponding to the initial point to chart.\n   * @param yValue The y-value for the initial point to chart.\n   */\n  static fromInitialPoint(date: DateTime, yValue: number) {\n    return new LabeledSeries('', [[date, yValue]]);\n  }\n\n  /**\n   * Generates LabeledSeries from the given DiagnosticReport.\n   * @param report The DiagnosticReport to chart.\n   * @param date the DateTime corresponding to the Observations in the\n   *     DiagnosticReport.\n   */\n  static fromDiagnosticReport(\n      report: DiagnosticReport, date: DateTime,\n      yAxisMap: Map<number, string>): LabeledSeries[] {\n    const series = [];\n    const interpretationMap = new Map<string, Array<[DateTime, number]>>();\n    // Sort results by interpretation, and make a LabeledSeries for each.\n    for (const observation of report.results) {\n      const yValue =\n          Array.from(yAxisMap.keys())\n              .find(key => yAxisMap.get(key) === observation.display);\n      const interpretation = observation.interpretation.code;\n      if (interpretationMap.get(interpretation)) {\n        const existing = interpretationMap.get(interpretation);\n        existing.push([date, yValue]);\n        interpretationMap.set(interpretation, existing);\n      } else {\n        interpretationMap.set(interpretation, [[date, yValue]]);\n      }\n    }\n    // Make a LabeledSeries for each interpretation.\n    for (const interpretation of Array.from(interpretationMap.keys())) {\n      series.push(new LabeledSeries(\n          // Encode the status and interpretation into the series name so that\n          // we can use d3 later on to filter the data points and display them\n          // with the correct styling.\n          report.id + '-' + interpretation + '-' + report.status,\n          interpretationMap.get(interpretation)));\n    }\n    return series;\n  }\n\n  private static getYPositionForMed(\n      medAdmin: MedicationAdministration, fixedYPosition: number) {\n    return fixedYPosition !== undefined && fixedYPosition !== null ?\n        fixedYPosition :\n        medAdmin.dosage.quantity;\n  }\n\n  private static addEncounterEndpoints(\n      coordinates: any[], encounters: Encounter[]): any[] {\n    if (coordinates.length > 0) {\n      // If any encounters are set for this MedicationOrderSet, add null values\n      // to the endpoints of encounters to ensure line breakage between points\n      // of different encounters.\n      // We assume that encounter endpoints correspond to correct line breaks,\n      // and do not cross-check encounter id's of MedicationOrders or\n      // MedicationAdministrations.\n      for (const encounter of encounters) {\n        coordinates.push([encounter.period.start.toUTC(), null]);\n        coordinates.push([encounter.period.end.toUTC(), null]);\n      }\n    }\n    return coordinates;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'd3';\nimport {Interval} from 'luxon';\n\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {ObservationSet} from '../fhir-data-classes/observation-set';\nimport {MedicationAdministrationTooltip} from '../graphtypes/tooltips/medication-tooltips';\nimport {DiscreteObservationTooltip, GenericAnnotatedObservationTooltip} from '../graphtypes/tooltips/observation-tooltips';\nimport {getDataColors} from '../theme/bch_colors';\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * LineGraphData holds configurations for a line graph. A line graph may display\n * one or more LabeledSeries.\n */\nexport class LineGraphData extends GraphData {\n  private constructor(\n      /** The label for the graph. */\n      readonly label: string,\n      /** The LabeledSeries that are a part of this line graph. */\n      series: LabeledSeries[],\n      /** The display bounds of the y-axis. */\n      readonly yAxisDisplayBounds: [number, number],\n      /** The unit for the y-axis of the graph. */\n      readonly unit: string,\n      /**\n       * The LabeledSeries mapped to which DisplayGrouping they fall under for\n       * the purposes of color and legends\n       */\n      seriesToDisplayGroup: Map<LabeledSeries, DisplayGrouping>,\n      tooltipMap?: Map<string, string>, tooltipKeyFn?: (key: string) => string,\n      regions?: any[], precision?: number) {\n    super(series, seriesToDisplayGroup, tooltipMap, tooltipKeyFn, regions);\n    this.precision = precision ? precision : 0;\n  }\n\n  /**\n   * Converts a list of ObservationSets to a LineGraphData object.\n   * @param label The label for this set of observations.\n   * @param observationGroup A list of ObservationSets to display.\n   * @param resourceCodeGroup The ResourceCodeGroup these ObservationSets belong\n   *   to\n   * @param sanitizer A DOM sanitizer for use in tooltip construction\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different units.\n   */\n  static fromObservationSetList(\n      label: string, observationGroup: ObservationSet[],\n      resourceCodeGroup: ResourceCodeGroup, sanitizer: DomSanitizer,\n      encounters: Encounter[]): LineGraphData {\n    const seriesToDisplayGrouping = new Map<LabeledSeries, DisplayGrouping>();\n    let seriesIdx = 0;\n    const dataColors: Color[] = getDataColors();\n\n    let minY: number = Number.MAX_VALUE;\n    let maxY: number = Number.MIN_VALUE;\n\n    const series: LabeledSeries[] = [];\n    const obsLabelToColor = new Map<string, Color>();\n    for (const obsSet of observationGroup) {\n      const lblSeries = LabeledSeries.fromObservationSet(obsSet, encounters);\n      series.push(lblSeries);\n      const color = dataColors[seriesIdx];\n      seriesToDisplayGrouping.set(\n          lblSeries, new DisplayGrouping(lblSeries.label, color));\n      obsLabelToColor.set(obsSet.label, color);\n\n      seriesIdx = (seriesIdx + 1) % dataColors.length;\n\n      /* Find the minimum and maximum y values for all the series. */\n      minY = Math.min(minY, lblSeries.yDisplayBounds[0]);\n      maxY = Math.max(maxY, lblSeries.yDisplayBounds[1]);\n    }\n\n    const tooltipMap = LineGraphData.makeTooltipMap(\n        observationGroup, sanitizer, obsLabelToColor);\n\n    const allUnits =\n        new Set(observationGroup.map(x => x.unit).filter(x => x !== undefined));\n    if (allUnits.size > 1) {\n      throw Error('Observations have different units.');\n    }\n\n    const data = new LineGraphData(\n        label, series,\n        LineGraphData.getDisplayBounds(minY, maxY, resourceCodeGroup),\n        allUnits.values().next().value, seriesToDisplayGrouping,\n        tooltipMap.size > 0 ? tooltipMap : undefined,\n        undefined,  // tooltipMap\n        undefined,  // regions\n        resourceCodeGroup.precision);\n    return data;\n  }\n\n  private static makeTooltipMap(\n      obsGroup: ObservationSet[], sanitizer: DomSanitizer,\n      obsLabelToColor: Map<string, Color>): Map<string, string> {\n    const tooltipMap = new Map<string, string>();\n    // Only construct custom tooltips if there's annotation values for hte\n    // observations.\n    for (const obsSet of obsGroup) {\n      for (const obs of obsSet.resourceList) {\n        if (obs.annotationValues.length > 0) {\n          const timestamp = obs.observation.timestamp.toMillis().toString();\n          // The key for this tooltip is the administration's timestamp.\n          // There may be multiple data points associated with the timestamp\n          // so we stack the administrations on top of one another in that case.\n          if (tooltipMap.get(timestamp)) {\n            tooltipMap.set(\n                timestamp,\n                tooltipMap.get(timestamp) +\n                    new GenericAnnotatedObservationTooltip(\n                        false, obsLabelToColor.get(obs.label))\n                        .getTooltip(obs, sanitizer));\n          } else {\n            tooltipMap.set(\n                timestamp,\n                new GenericAnnotatedObservationTooltip(\n                    true, obsLabelToColor.get(obs.label))\n                    .getTooltip(obs, sanitizer));\n          }\n        }\n      }\n    }\n    return tooltipMap;\n  }\n\n  private static getDisplayBounds(\n      minInSeries: number, maxInSeries: number,\n      resourceCodeGroup: ResourceCodeGroup): [number, number] {\n    let yAxisDisplayMin;\n    let yAxisDisplayMax;\n    if (resourceCodeGroup.forceDisplayBounds &&\n        resourceCodeGroup.displayBounds) {\n      // We use the provided display bounds by default, regardless of the\n      // bounds of the data.\n      yAxisDisplayMin = resourceCodeGroup.displayBounds[0];\n      yAxisDisplayMax = resourceCodeGroup.displayBounds[1];\n    } else {\n      // We use the provided display bounds as the y-axis display min and max,\n      // unless the calculated minimum and maximum of the data span a smaller\n      // range.\n\n      // We choose the provided min bound if it is larger than the min of the\n      // data, to cut off abnormal values.\n      yAxisDisplayMin = resourceCodeGroup.displayBounds ?\n          ((resourceCodeGroup.displayBounds[0] >= minInSeries) ?\n               resourceCodeGroup.displayBounds[0] :\n               minInSeries) :\n          minInSeries;\n      // We choose the provided max bound if it is smaller than the max of the\n      // data, to cut off abnormal values.\n      yAxisDisplayMax = resourceCodeGroup.displayBounds ?\n          ((resourceCodeGroup.displayBounds[1] <= maxInSeries) ?\n               resourceCodeGroup.displayBounds[1] :\n               maxInSeries) :\n          maxInSeries;\n    }\n    return [yAxisDisplayMin, yAxisDisplayMax];\n  }\n\n  /**\n   * Converts a list of MedicationOrderSets to a LineGraphData object.\n   * @param medicationOrderListGroup A list of MedicationOrderSets to display.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the medication administrations in medicationOrderSet\n   *     have different units.\n   */\n  static fromMedicationOrderSet(\n      medicationOrderSet: MedicationOrderSet, dateRange: Interval,\n      sanitizer: DomSanitizer, encounters: Encounter[]): LineGraphData {\n    const tooltipMap = new Map<string, string>();\n    const regions = [];\n    for (const order of medicationOrderSet.resourceList) {\n      regions.push({\n        axis: 'x',\n        class: 'order-region',\n        start: order.firstAdministration.timestamp,\n        end: order.lastAdmininistration.timestamp\n      });\n      for (const admin of order.administrationsForOrder.resourceList) {\n        const timestamp =\n            admin.medAdministration.timestamp.toMillis().toString();\n        // The key for this tooltip is the administration's timestamp.\n        // There may be multiple data points associated with the timestamp\n        // so we stack the administrations on top of one another in that case.\n        const tooltipText = new MedicationAdministrationTooltip().getTooltip(\n            [admin], sanitizer);\n        if (tooltipMap.get(timestamp)) {\n          tooltipMap.set(timestamp, tooltipMap.get(timestamp) + tooltipText);\n        } else {\n          tooltipMap.set(timestamp, tooltipText);\n        }\n      }\n    }\n    const singleSeries = LabeledSeries.fromMedicationOrderSet(\n        medicationOrderSet, dateRange, encounters);\n    const seriesToDisplayGrouping = new Map<LabeledSeries, DisplayGrouping>();\n    seriesToDisplayGrouping.set(\n        singleSeries,\n        new DisplayGrouping(singleSeries.label, getDataColors()[0]));\n\n    return new LineGraphData(\n        medicationOrderSet.label, [singleSeries],\n        [medicationOrderSet.minDose, medicationOrderSet.maxDose],\n        medicationOrderSet.unit, seriesToDisplayGrouping, tooltipMap, undefined,\n        regions);\n  }\n\n  /**\n   * Converts a list of ObservationSets with discrete y-values (results) to a\n   * LineGraphData object.\n   * If we are graphing Observations with discrete values, such as \"yellow\"\n   * for the color of urine, we group all ObservationSets into one\n   * LabeledSeries, and display textual information in the tooltip.\n   * @param label The label for this set of observations.\n   * @param observationGroup A list of ObservationSets to display.\n   * @param encounters A list of Encounters to use while determining line breaks\n   *     in series.\n   * @returns a new LineGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different\n   *     units.\n   */\n  static fromObservationSetListDiscrete(\n      label: string, observationGroup: ObservationSet[],\n      sanitizer: DomSanitizer, encounters: Encounter[]): LineGraphData {\n    // For ObservationSets with discrete categories, we display a scatterplot\n    // with one series, with most information in the tooltip.\n    const yValue = 10;\n    const lblSeries = LabeledSeries.fromObservationSetsDiscrete(\n        observationGroup, yValue, label, encounters);\n    const seriesToDisplayGroup = new Map<LabeledSeries, DisplayGrouping>();\n    seriesToDisplayGroup.set(\n        lblSeries, new DisplayGrouping(lblSeries.label, getDataColors()[0]));\n\n    const tooltipMap = new Map<string, string>();\n    for (const observationSet of observationGroup) {\n      for (const obs of observationSet.resourceList) {\n        const tsString = obs.observation.timestamp.toMillis().toString();\n        const tooltipText = new DiscreteObservationTooltip().getTooltip(\n            [obs.observation], sanitizer);\n        // The key for this tooltip is the observation's timestamp.\n        // There may be multiple data points associated with the timestamp\n        // so we stack the tooltips on top of one another in that case.\n        if (tooltipMap.has(tsString)) {\n          tooltipMap.set(tsString, tooltipMap.get(tsString) + tooltipText);\n        } else {\n          tooltipMap.set(tsString, tooltipText);\n        }\n      }\n    }\n    return new LineGraphData(\n        label, [lblSeries], [0, yValue], undefined,  // Units\n        seriesToDisplayGroup, tooltipMap);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {DateTime} from 'luxon';\n\nimport {DisplayGrouping, negFinalMB, negPrelimMB, posFinalMB, posPrelimMB} from '../clinicalconcepts/display-grouping';\nimport {AnnotatedDiagnosticReport, DiagnosticReport, DiagnosticReportStatus} from '../fhir-data-classes/diagnostic-report';\nimport {CHECK_RESULT_CODE, NEG_CODE, NEGFLORA_CODE} from '../fhir-data-classes/observation-interpretation-valueset';\nimport {MicrobioTooltip} from '../graphtypes/tooltips/microbio-tooltips';\n\nimport {LabeledSeries} from './labeled-series';\nimport {StepGraphData} from './stepgraphdata';\n\n/**\n * MicrobioGraphData holds configurations for a microbiology graph. The format\n * of a microbiology graph is simliar to a step graph in that each y-axis\n * position represents a single microbiology test, and points plotted along\n * that position represent results for that test.\n */\n\nexport class MicrobioGraphData extends StepGraphData {\n  private constructor(\n      series: LabeledSeries[], endpointSeries: LabeledSeries[],\n      yAxisMap: Map<number, string>,\n      seriesToDisplayGroup: Map<LabeledSeries, DisplayGrouping>,\n      tooltipMap: Map<string, string>, keyFn: (data: string) => string,\n      /**\n       * Maps the report ID to the report status. This is used for custom\n       * styling of display points.\n       */\n      readonly reportIdToStatus: Map<string, DiagnosticReportStatus>) {\n    super(\n        series, endpointSeries, yAxisMap, seriesToDisplayGroup, tooltipMap,\n        keyFn);\n  }\n\n  /**\n   * Converts a list of DiagnosticReports to a StepGraphData object.\n   * All DiagnosticReports in the list should belong to the same culture type.\n   * @param diagnosticReports A list of DiagnosticReports to display.\n   * @returns a new StepGraphData for this set.\n   */\n  static fromDiagnosticReports(\n      diagnosticReports: DiagnosticReport[], cultureType: string,\n      sanitizer: DomSanitizer): MicrobioGraphData {\n    // TODO(b/121266814): Make constants or enum for cultureType.\n    const points: LabeledSeries[] = [];\n    // We keep the yAxisMap mapping y-axis positions to labels to be consistent\n    // with other forms of StepGraphData.\n    let currYPosition = StepGraphData.Y_AXIS_SPACING;\n    const yAxisMap = new Map<number, string>();\n    const tooltipMap = new Map<string, string>();\n    const timestampToId = new Map<string, string>();\n    const seriesToDisplayGroup = new Map<LabeledSeries, DisplayGrouping>();\n    // We create a master y-axis map mapping discrete labels (Observation\n    // displays) to y-values. This must be uniform across all DiagnosticReports.\n    for (const report of diagnosticReports) {\n      for (const observation of report.results) {\n        if (!Array.from(yAxisMap.values()).includes(observation.display)) {\n          yAxisMap.set(currYPosition, observation.display);\n          currYPosition += StepGraphData.Y_AXIS_SPACING;\n        }\n      }\n    }\n\n    const reportIdToStatus = new Map<string, DiagnosticReportStatus>();\n    for (const report of diagnosticReports) {\n      // Find the specimen in the report with the correct Culture type.\n      // We throw an error if there are mutiple specimens of the same type for\n      // a DiagnosticReport.\n      const seen = new Set();\n      const hasDuplicates = report.specimens.some((s) => {\n        return seen.size === seen.add(s.type).size;\n      });\n      if (hasDuplicates) {\n        throw Error('Report has multiple specimens with same type.');\n      }\n\n      reportIdToStatus.set(report.id, report.status);\n\n      const specimen = report.specimens.find(s => (s.type === cultureType));\n      if (specimen) {\n        const annotatedReport =\n            new AnnotatedDiagnosticReport(report, cultureType);\n        // For this tooltip, the keys are report IDs.\n        tooltipMap.set(\n            report.id,\n            new MicrobioTooltip().getTooltip(annotatedReport, sanitizer));\n        const ts = annotatedReport.timestamp.toMillis().toString();\n        timestampToId.set(ts, report.id);\n        for (const series of LabeledSeries.fromDiagnosticReport(\n                 report, annotatedReport.timestamp, yAxisMap)) {\n          seriesToDisplayGroup.set(\n              series,\n              MicrobioGraphData.getDisplayGroupFromResult(\n                  report.status, series.label.includes(CHECK_RESULT_CODE)));\n          points.push(series);\n        }\n      }\n    }\n\n    return new MicrobioGraphData(\n        [],  // No series representing \"lines\" on this chart\n        points, yAxisMap, seriesToDisplayGroup, tooltipMap,\n        // Because the keys here are report IDs we have to pass in a custom\n        // function to translate the graph's x-values to the appropriate\n        // tooltip.\n        (reportPoint: any) => {\n          return timestampToId.get(\n              DateTime.fromJSDate(reportPoint.x).toMillis().toString());\n        },\n        reportIdToStatus);\n  }\n\n  /**\n   * Returns the correct display grouping for a diagnostic report.\n   * @param status The DiagnosticReport's status.\n   * @param isPositive Whether the report appears to be positive.\n   * @returns The correct display grouping for the report.\n   */\n  private static getDisplayGroupFromResult(\n      status: DiagnosticReportStatus, isPositive: boolean): DisplayGrouping {\n    if (isPositive) {\n      if (status === DiagnosticReportStatus.Preliminary) {\n        return posPrelimMB;\n      } else if (status === DiagnosticReportStatus.Final) {\n        return posFinalMB;\n      }\n    } else if (status === DiagnosticReportStatus.Preliminary) {\n      return negPrelimMB;\n    } else if (status === DiagnosticReportStatus.Final) {\n      return negFinalMB;\n    }\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {DisplayGrouping, negFinalMB, negPrelimMB, posFinalMB, posPrelimMB} from '../clinicalconcepts/display-grouping';\nimport {DiagnosticReport, DiagnosticReportStatus} from '../fhir-data-classes/diagnostic-report';\nimport {MedicationOrder, MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {CHECK_RESULT_CODE, NEG_CODE, NEGFLORA_CODE} from '../fhir-data-classes/observation-interpretation-valueset';\nimport {MedicationTooltip} from '../graphtypes/tooltips/medication-tooltips';\n\n\nimport {GraphData} from './graphdata';\nimport {LabeledSeries} from './labeled-series';\n\n/**\n * StepGraphData holds configurations for a step graph. A step graph displays\n * one or more LabeledSeries.\n */\n\nexport class StepGraphData extends GraphData {\n  // The spacing between discrete values on the y-axis.\n  static readonly Y_AXIS_SPACING = 10;\n\n  constructor(\n      /** A list of the LabeledSeries data to plot. */\n      readonly dataSeries: LabeledSeries[],\n      /** A list of the LabeledSeries representing end points. */\n      readonly endpointSeries: LabeledSeries[],\n      /**\n       * The map of y values to discrete labels to display on the y axis of the\n       * stepgraph.\n       */\n      readonly yAxisMap: Map<number, string>,\n      seriesToDisplayGroup: Map<LabeledSeries, DisplayGrouping>,\n      tooltipMap: Map<string, string>, keyFn: (data: string) => string) {\n    super(\n        dataSeries.concat(endpointSeries), seriesToDisplayGroup, tooltipMap,\n        keyFn);\n  }\n\n  /**\n   * Converts a list of MedicationOrderSets to a StepGraphData object.\n   * @param medicationOrderListGroup A list of MedicationOrderSets to display.\n   * @returns a new StepGraphData for this observation set.\n   * @throws Error if the observations in observationGroup have different units.\n   */\n  static fromMedicationOrderSetList(\n      medicationOrderListGroup: MedicationOrderSet[], dateRange: Interval,\n      sanitizer: DomSanitizer): StepGraphData {\n    const data: LabeledSeries[] = [];\n    const endpoints: LabeledSeries[] = [];\n    // Give labels to each series and make a map of x-values to y-values.\n    const yAxisMap = new Map<number, string>();\n    let currYPosition = StepGraphData.Y_AXIS_SPACING;\n    const seriesToDisplayGroup = new Map<LabeledSeries, DisplayGrouping>();\n    medicationOrderListGroup = medicationOrderListGroup.sort((a, b) => {\n      return a.resourceList[a.resourceList.length - 1]\n                 .lastAdmininistration.timestamp.toMillis() -\n          b.resourceList[b.resourceList.length - 1]\n              .lastAdmininistration.timestamp.toMillis();\n    });\n\n    const tooltipMap = new Map<string, string>();\n    for (const medOrderSet of medicationOrderListGroup) {\n      // Each MedicationOrderSet represents multiple MedicationOrders\n      // for the same medicine.\n      for (const medOrder of medOrderSet.resourceList) {\n        const labeledSeries = LabeledSeries.fromMedicationOrder(\n            medOrder, dateRange, currYPosition);\n        const administrationSeries = labeledSeries[0];\n        const endpointSeries = labeledSeries[1];\n        data.push(administrationSeries);\n        endpoints.push(endpointSeries);\n        yAxisMap.set(currYPosition, medOrder.administrationsForOrder.label);\n\n        // Set up maps of the series to the concepts for the custom legend.\n        seriesToDisplayGroup.set(\n            endpointSeries, medOrder.rxNormCode.displayGrouping);\n        seriesToDisplayGroup.set(\n            administrationSeries, medOrder.rxNormCode.displayGrouping);\n\n        // For this custom tooltip, the key is the series ID, and the value is\n        // the medication tooltip that shows the first and last doses for the\n        // medication.\n        tooltipMap.set(\n            administrationSeries.label,\n            new MedicationTooltip().getTooltip(medOrder, sanitizer));\n      }\n      currYPosition += StepGraphData.Y_AXIS_SPACING;\n    }\n    // Do not display the units for Medication administration values on the card\n    // for MedicationSummary.\n    for (const series of data) {\n      series.unit = undefined;\n    }\n    for (const series of endpoints) {\n      series.unit = undefined;\n    }\n    return new StepGraphData(\n        data, endpoints, yAxisMap, seriesToDisplayGroup, tooltipMap,\n        // Our tooltip key here is the series ID, so we pass in a\n        // custom key function.\n        (seriesObj: any) => {\n          return seriesObj.id;\n        });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Interval} from 'luxon';\n\nimport {BCHMicrobioCode, BCHMicrobioCodeGroup} from '../clinicalconcepts/bch-microbio-code';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {LOINCCode, LOINCCodeGroup} from '../clinicalconcepts/loinc-code';\nimport {ResourceCodeGroup} from '../clinicalconcepts/resource-code-group';\nimport {RxNormCode} from '../clinicalconcepts/rx-norm';\nimport {RxNormCodeGroup} from '../clinicalconcepts/rx-norm-group';\nimport {Encounter} from '../fhir-data-classes/encounter';\nimport {MedicationOrder, MedicationOrderSet} from '../fhir-data-classes/medication-order';\nimport {FhirService} from '../fhir.service';\nimport {GraphData} from '../graphdatatypes/graphdata';\nimport {LineGraphData} from '../graphdatatypes/linegraphdata';\nimport {MicrobioGraphData} from '../graphdatatypes/microbiographdata';\nimport {StepGraphData} from '../graphdatatypes/stepgraphdata';\n\nimport {ChartType} from './graph/graph.component';\n\n/**\n * An axis represents one graph to be rendered. It\n * holds values for the type of graph (step, scatter, line, etc) as well as the\n * actual graph data.\n *\n * One axis might have multiple ResourceCodes associated with it, but all of\n * the same type.\n *\n * This class makes the FHIR calls to grab the associated data for the chart.\n */\nexport class Axis {\n  /**\n   * The ResourceCodeGroup for this axis.\n   */\n  readonly resourceGroup: ResourceCodeGroup;\n\n  /**\n   * The chart type for this graph.\n   */\n  readonly chartType: ChartType;\n\n  /**\n   * The data to display on this graph.\n   */\n  data: GraphData;\n\n  /**\n   * The associated DisplayGrouping for this graph.\n   */\n  displayConcept: DisplayGrouping;\n\n  /*\n   * The date range the graph should display data for.\n   */\n  readonly dateRange: Interval;\n\n  /*\n   * Whether or not the data fetch promise has resolved.\n   */\n  isResolved = false;\n\n\n  /*\n   * The label for this axis.\n   */\n  label: string;\n\n  // An error message if there's an error in data retrieval.\n  errorMessage: string;\n\n  // The encounters for the date range.\n  encounters: Encounter[] = [];\n\n  /**\n   * The constructor for this axis.\n   * @param fhirService The FhirService used to make the FHIR calls.\n   * @param resourceGroup The ResourceGroup to request data for.\n   * @param dateRange: The date range to display on the axis.\n   * @param label?: The optional y-axis label for this axis.\n   */\n  constructor(\n      private fhirService: FhirService, resourceGroup: ResourceCodeGroup,\n      dateRange: Interval, private sanitizer: DomSanitizer, label?: string) {\n    this.dateRange = dateRange;\n    this.chartType = resourceGroup.chartType;\n    this.displayConcept = resourceGroup.displayGrouping;\n    this.resourceGroup = resourceGroup;\n    this.label = label;\n    this.getDataFromFhir().then(\n        res => {\n          this.data = res;\n          this.isResolved = true;\n        },\n        // TODO(b/126186009): Add testing for this code.\n        rejection => {\n          this.isResolved = true;\n          // TODO(b/126227729): Revise this language.\n          this.errorMessage =\n              'Invalid data received. Please check the medical record.';\n        });\n  }\n\n  /**\n   * Gets the appropriate GraphData by classifying the resource codes and\n   * making the appropriate FHIR calls for data and transformations. If\n   * the data is already set in this class, it just returns that data.\n   *\n   * @returns A GraphData promise that will resolve to the GraphData for\n   *    this axis's resourceGroup.\n   */\n  getDataFromFhir(): Promise<GraphData> {\n    if (this.data) {\n      return Promise.resolve(this.data);\n    }\n\n    // Set the encounters for this date range. If the promise fails, the list of\n    // encounters is empty.\n    this.fhirService.getEncountersForPatient(this.dateRange).then(e => {\n      e = e.sort(\n          (a, b) => a.period.start.toMillis() - b.period.start.toMillis());\n      this.encounters = e;\n    }, reject => this.encounters = []);\n\n    const resourceCodeList = this.resourceGroup.resourceCodes;\n    // Check that all elements of the resourceCodeList are of the same type.\n    const allLoinc = resourceCodeList.every(code => code instanceof LOINCCode);\n    const allRx = resourceCodeList.every(code => code instanceof RxNormCode);\n    const allBCHMicrobio =\n        resourceCodeList.every(code => code instanceof BCHMicrobioCode);\n    if (!allLoinc && !allRx && !allBCHMicrobio) {\n      throw Error('All resource codes must be of the same type.');\n    }\n\n    if (allRx) {\n      // Prescriptions can be plotted as a step chart or as a line chart.\n      if (this.chartType === ChartType.STEP) {\n        return this.getStepGraphDataForMedicationSummary(\n            this.resourceGroup as RxNormCodeGroup);\n      } else {\n        return this.getLineGraphDataForMedicationDetail(\n            this.resourceGroup as RxNormCodeGroup);\n      }\n    }\n\n    if (allBCHMicrobio) {\n      // Microbiology always shows up as a step chart.\n      return this.getStepGraphDataForMB(\n          this.resourceGroup as BCHMicrobioCodeGroup);\n    } else {\n      // In this case it is all LOINC codes.\n      // We use LineGraphData for both ChartType.Scatter and\n      // ChartType.Line, for plotting LOINC Codes.\n      return (this.resourceGroup as LOINCCodeGroup)\n          .getResourceSet(this.dateRange)\n          .then(\n              obsSetList => {\n                if (obsSetList) {\n                  // We only draw the Line charts if all ObservationSets are of\n                  // the same type of y-value: continuous or discrete.\n                  if (obsSetList.every(obsSet => obsSet.allQualitative)) {\n                    return LineGraphData.fromObservationSetListDiscrete(\n                        this.displayConcept.label, obsSetList, this.sanitizer,\n                        this.encounters);\n                  }\n\n                  if (obsSetList.every(obsSet => !obsSet.allQualitative)) {\n                    return LineGraphData.fromObservationSetList(\n                        this.displayConcept.label, obsSetList,\n                        this.resourceGroup, this.sanitizer, this.encounters);\n                  }\n\n                  throw Error(\n                      'ObservationSets must all be continuous ' +\n                      'or discrete-valued.');\n                }\n              },\n              rejection => {\n                // Something wrong happened when constructing a LabeledClass\n                // object for a code in this resourceGroup.\n                throw rejection;\n              });\n    }\n  }\n\n  /**\n   * Get the data needed for the medication summary.\n   * We first get the MedicationAdministrations corresponding to the RxNorms to\n   * display on the page, and group them by order id (representing a\n   * prescription). We then get the MedicationOrder for each order id, and group\n   * those into MedicationOrderSets, where each MedicationOrderSet represents a\n   * set of MedicationOrders for a particular medication.\n   * @param rxNorms The RxNorms to be displayed in the StepGraphCard.\n   */\n  getStepGraphDataForMedicationSummary(rxNorms: RxNormCodeGroup):\n      Promise<StepGraphData> {\n    return rxNorms.getResourceFromFhir(this.dateRange).then(medOrderSets => {\n      return StepGraphData.fromMedicationOrderSetList(\n          medOrderSets.map(x => x.orders), this.dateRange, this.sanitizer);\n    });\n  }\n\n  getStepGraphDataForMB(bchCodes: BCHMicrobioCodeGroup):\n      Promise<StepGraphData> {\n    return bchCodes.getResourceFromFhir(this.dateRange).then(diagReports => {\n      return MicrobioGraphData.fromDiagnosticReports(\n          diagReports, bchCodes.label, this.sanitizer);\n    });\n  }\n\n  /**\n   * Issues a FHIR request to get all the meds data for a list of\n   * RxNorm codes (medications).\n   */\n  getLineGraphDataForMedicationDetail(rxNorms: RxNormCodeGroup):\n      Promise<LineGraphData> {\n    return rxNorms.getResourceFromFhir(this.dateRange)\n        .then(rxNs => {\n          const medOrders: MedicationOrder[] =\n              [].concat(...rxNs.map(rx => rx.orders.resourceList));\n          return medOrders.map(\n              order => order.setMedicationAdministrations(this.fhirService));\n        })\n        .then(orders => {\n          return Promise.all(orders);\n        })\n        .then(orders => {\n          return LineGraphData.fromMedicationOrderSet(\n              new MedicationOrderSet(orders), this.dateRange, this.sanitizer,\n              this.encounters);\n        });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\nimport * as d3 from 'd3';\nimport {DateTime} from 'luxon';\n\n/*\n * This class makes an annotation for a particular timestamp with custom notes.\n */\nexport class CustomizableGraphAnnotation {\n  // Whether or not the full annotation is shown. If false, only the title of\n  // the annotation will show.\n  private showDetails: boolean;\n  // The default y-coordinate for the annotation.\n  readonly defaultYCoordinate = 45;\n  // The maximum horizontal overlap for any two annotations.\n  readonly horizontalOverlap = 20;\n  // The maximum vertical overlap for any two annotations.\n  readonly verticalOverlap = 10;\n  // The width of the annotation.\n  readonly annotationWidth = 100;\n  // The default height of the annotation.\n  readonly annotationHeight = 25;\n  // The default padding for the annotation.\n  readonly defaultPadding = 30;\n\n  timestamp: DateTime;\n\n  private readonly yAxisXCoord = 90;\n\n  constructor(\n      timestamp: DateTime,\n      /** The title that will show up in the annotation. */\n      readonly title = '',\n      /** The description that will show up in the annotation. */\n      readonly description = '',\n      /** The color for this annotation and associated point. */\n      readonly color: Color = Color.rgb('black'),\n      /** The timestamp for the annotation */\n  ) {\n    this.timestamp = timestamp;\n  }\n\n  addAnnotation(chart: any) {\n    const self = this;\n    this.showDetails = false;\n\n    const millis = this.timestamp.toMillis();\n    const xCoordinate = chart.internal.x(millis) + '';\n\n    // Find the points for where to draw the new annotation & connector,\n    // which are on different scales.\n    const yCoordinate = this.findBestYCoordinates(xCoordinate);\n    const tooltip = chart.internal.selectChart.style('position', 'relative')\n                        .append('div')\n                        .attr('class', 'tooltip-whole-' + millis);\n    const tooltipContainer =\n        tooltip.append('div').attr('class', 'tooltip-custom-' + millis);\n    const tooltipTitleContainer = tooltipContainer.append('div');\n    const expandIcon = tooltipTitleContainer.append('i')\n                           .attr('class', 'material-icons')\n                           .attr('id', 'expand-' + millis)\n                           .style('font-size', '18px')\n                           .html('expand_more');\n    const tooltipTitle = tooltipTitleContainer.append('h6')\n                             .attr('class', 'tooltip-title-custom-' + millis)\n                             .text(this.title);\n    const deleteIcon = tooltipTitleContainer.append('i')\n                           .attr('class', 'material-icons')\n                           .attr('id', 'delete-' + millis)\n                           .style('font-size', '18px')\n                           .html('clear');\n    const tooltipDetails = tooltipContainer.append('div').attr(\n        'class', 'tooltip-details-custom-' + millis);\n    const tooltipDetailsText =\n        tooltipDetails.append('div')\n            .text(this.description)\n            .attr('class', 'tooltip-details-text-' + millis);\n    const editIcon = tooltipDetails.append('i')\n                         .attr('class', 'material-icons')\n                         .attr('id', 'edit-' + millis)\n                         .style('font-size', '18px')\n                         .html('edit');\n    tooltip.style('left', (Number(xCoordinate) + this.yAxisXCoord) + 'px')\n        .style('top', yCoordinate + 'px')\n        .style('border-left-color', this.color)\n        .style(\n            'padding-bottom',\n            (this.defaultPadding + (this.defaultYCoordinate - yCoordinate)) +\n                'px');\n    tooltipContainer.style('left', '0px')\n        .style(\n            'bottom',\n            (this.defaultPadding + (this.defaultYCoordinate - yCoordinate)) +\n                'px')\n        .style('background-color', this.color);\n\n    /**\n     * Add action handlers.\n     */\n    tooltipTitle.on('click', () => {\n      // Toggle whether or not the details are shown.\n      self.showDetails = !self.showDetails;\n      self.showDetailsToggle(millis, self.showDetails, tooltipContainer.node());\n    });\n    expandIcon.style('cursor', 'pointer');\n    expandIcon.on('click', () => {\n      // Toggle whether or not the details are shown.\n      self.showDetails = !self.showDetails;\n      self.showDetailsToggle(millis, self.showDetails, tooltipContainer.node());\n    });\n    tooltip\n        .on('mouseover',\n            () => {\n              // Only show icons when hovering over the tooltip, and while\n              // the custom timeline is in edit mode. Show the expander icon\n              // regardless of edit mode.\n              expandIcon.style('visibility', 'visible');\n              deleteIcon.classed('showIcon', true);\n              editIcon.classed('showIcon', true);\n            })\n        .on('click',\n            function() {\n              // Ensure that the annotation comes to the front when clicking\n              // on it.\n              // TODO(b/122365189): Bring annotation to front while hovering\n              // without disturbing scroll.\n              const parent = this.parentNode;\n              // TODO(b/123935165): Find a better way to handle the errors.\n              try {\n                parent.appendChild(this);\n              } catch (e) {\n                console.log(e);\n              }\n            })\n        .on('mouseout', () => {\n          deleteIcon.classed('showIcon', false);\n          editIcon.classed('showIcon', false);\n          expandIcon.style('visibility', 'hidden');\n        });\n  }\n\n  // Toggles whether or not the full annotation is shown.\n  private showDetailsToggle(millis: number, toggle: boolean, element: any) {\n    const detailsElement =\n        d3.select(element).select('.tooltip-details-custom-' + millis);\n    const expandElement = d3.select(element).select('#expand-' + millis);\n    if (toggle) {\n      detailsElement.style('display', 'inline-block').raise();\n      expandElement.html('expand_less');\n    } else {\n      detailsElement.style('display', 'none');\n      expandElement.html('expand_more');\n    }\n  }\n  private findBestYCoordinates(xCoordinate: string) {\n    const newXCoord = Number(xCoordinate.replace('px', ''));\n    const nodes: any = d3.selectAll('[class*=\"tooltip-whole\"]').nodes();\n    const positions = nodes.map(function(element) {\n      return {\n        top: Number(element.style.top.replace('px', '')),\n        left: Number(element.style.left.replace('px', '')),\n      };\n    });\n    const overlappingYs = [];\n    // Check if there are any annotations with horizontal overlap.\n    for (const position of positions) {\n      const rightPosition = position.left + this.annotationWidth;\n      if (newXCoord <= rightPosition &&\n          (newXCoord + this.annotationWidth) >= position.left) {\n        overlappingYs.push(position.top);\n      }\n    }\n    // Figure out the new y-coordinate for the annotation.\n    let defaultTop = this.defaultYCoordinate;\n    overlappingYs.sort(function(a, b) {\n      return a - b;\n    });\n    // By default, try putting the new box above all other annotations with\n    // horizontal overlap.\n    if (overlappingYs.length > 0) {\n      const topPosition = overlappingYs[overlappingYs.length - 1];\n      defaultTop = topPosition - this.verticalOverlap;\n    }\n    // Check if there is any position with space available between existing\n    // annotations.\n    for (let i = 0; i < overlappingYs.length - 1; i++) {\n      // Check if there is enough space.\n      if (overlappingYs[i + 1] - (overlappingYs[i] + this.annotationWidth) >=\n          this.horizontalOverlap) {\n        defaultTop = overlappingYs[i];\n      }\n    }\n    return defaultTop;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\nimport {Component, EventEmitter, forwardRef, Input, OnDestroy, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as c3 from 'c3';\nimport * as d3 from 'd3';\nimport {DateTime} from 'luxon';\n// tslint:disable-next-line:max-line-length\nimport {CustomizableTimelineDialogComponent} from 'src/app/cardtypes/customizable-timeline/customizable-timeline-dialog/customizable-timeline-dialog.component';\nimport {CustomizableData} from 'src/app/graphdatatypes/customizabledata';\n\nimport {GraphComponent} from '../graph/graph.component';\nimport {CustomizableGraphAnnotation} from './customizable-graph-annotation';\n\n@Component({\n  selector: 'app-customizable-graph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: [\n    '../../cardtypes/customizable-timeline/customizable-timeline.component.css'\n  ],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => CustomizableGraphComponent)\n  }]\n})\nexport class CustomizableGraphComponent extends\n    GraphComponent<CustomizableData> implements OnDestroy {\n  // An event indicating that the points on the CustomizableGraph have changed.\n  @Output() pointsChanged = new EventEmitter<CustomizableData>();\n  @Input() inEditMode: boolean;\n  // Whether or not the user is hovering over any point on the chart.\n  private hoveringOverPoint = false;\n  // The width and height of the dialog box that appears when the user clicks on\n  // the chart.\n  readonly dialogWidth = '450px';\n  readonly dialogHeight = '350px';\n\n  // The reference for the Dialog opened.\n  private dialogRef: any;\n\n  constructor(readonly sanitizer: DomSanitizer, public dialog: MatDialog) {\n    super(sanitizer);\n  }\n\n  ngOnDestroy() {\n    if (this.dialogRef && this.dialogRef.unsubscribe) {\n      // Destroy the dialog ref to prevent memory leaks.\n      this.dialogRef.unsubscribe();\n    }\n  }\n\n  regenerateChart() {\n    super.regenerateChart();\n    const self = this;\n    const chart: any =\n        this.chart;  // We need the \"any\" declaration in order to access the\n    // internals of the chart without throwing an error.\n\n    if (!chart) {\n      return;\n    }\n    chart.resize({height: 150});\n\n    // Show a focus line corresponding to the correct x-value when hovering\n    // anywhere on the chart.\n    chart.internal.main.on('mousemove', function() {\n      if (self.inEditMode) {\n        const coordinates = d3.mouse(this);\n        // Remove all other timestamps\n        d3.select(chart.element)\n            .select('.c3-xgrid-focus')\n            .selectAll('text')\n            .remove();\n        self.showFocusLine(chart, coordinates);\n      }\n    });\n    // Clear gridlines when not hovering over the chart.\n    chart.internal.main.on('mouseout', function() {\n      // clear all x-axis gridlines.\n      chart.xgrids([]);\n      // Remove all other timestamps\n      d3.select(chart.element)\n          .select('.c3-xgrid-focus')\n          .selectAll('text')\n          .remove();\n    });\n    // Logic to add a point when clicking on the chart.\n    chart.internal.main.on('click', function() {\n      if (self.inEditMode && !self.hoveringOverPoint) {\n        const coordinates = d3.mouse(this);\n        const parentCoordinates = d3.mouse(document.body);\n        self.allowAddingPoints(coordinates, parentCoordinates);\n      }\n    });\n    // Send the chart to the back, allowing points to be displayed on top of the\n    // axis.\n    const chartLayer = d3.select(chart.element).select('.c3-chart');\n    const chartLayerNode: any = chartLayer.node();\n    const chartLayerParentNode = chartLayerNode.parentNode;\n    const removedNode = chartLayer.remove();\n    chartLayerParentNode.appendChild(removedNode.node());\n    chartLayer.attr('clip-path', null);\n\n    // Don't show the y-axis, but still set values so that the width is adjusted\n    // & aligned with other charts.\n    d3.select(chart.element).select('.c3-axis-y').style('visibility', 'hidden');\n\n    // Update the annotations displayed for this chart.\n    this.updateAnnotations();\n  }\n\n  // This function loads the data into the chart without needing the chart to be\n  // re-rendered completely.\n  private loadNewData() {\n    this.chart.load({columns: this.data.c3DisplayConfiguration.allColumns});\n  }\n\n  // If the selected date already has an annotation, modify the time\n  // by + 1 millisecond.\n  private updateTime(millis: number) {\n    if (this.data.annotations.has(millis)) {\n      return this.updateTime(millis + 1);\n    }\n    return millis;\n  }\n\n  // Show a focus line with the timestamps when moving the mouse around the\n  // chart.\n  private showFocusLine(chart: any, coordinates: number[]) {\n    const focusEl = d3.select(chart.element).select('line.c3-xgrid-focus');\n    focusEl.attr('x1', coordinates[0]);\n    focusEl.attr('x2', coordinates[0]);\n    const timestamp =\n        DateTime.fromJSDate(chart.internal.x.invert(coordinates[0]));\n    // See time on hover\n    d3.select(chart.element)\n        .select('g.c3-xgrid-focus')\n        .append('text')\n        .attr('text-anchor', 'end')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y', coordinates[0])\n        .attr('dx', -4)\n        .attr('dy', -5)\n        .style('opacity', 1)\n        .text(\n            timestamp.toLocal().toLocaleString() + ' ' +\n            timestamp.toLocal().toLocaleString(DateTime.TIME_24_SIMPLE));\n  }\n\n  // Allow for the addition of a point to the CustomizableGraph, via a\n  // CustomizableTimelineDialog\n  private allowAddingPoints(\n      clickCoordinates: [number, number], parentCoordinates: [number, number]) {\n    const dialogCoordinates = this.findDialogCoordinates(\n        parentCoordinates[0] + 10, parentCoordinates[1] + 10);\n    this.dialogRef = this.openDialog(clickCoordinates, dialogCoordinates);\n  }\n\n  private openDialog(\n      clickCoordinates: [number, number], dialogCoordinates: [number, number],\n      editedAnnotation?: CustomizableGraphAnnotation) {\n    const chart = this.chart as any;\n    const xCoordinate = chart.internal.x.invert(clickCoordinates[0]);\n    // Make the dialog show up near where the user clicked.\n    const data = editedAnnotation ? {\n      title: editedAnnotation.title,\n      date: new Date(editedAnnotation.timestamp.toMillis()),\n      description: editedAnnotation.description,\n      color: editedAnnotation.color\n    } :\n                                    {date: xCoordinate};\n    this.dialogRef = this.dialog.open(CustomizableTimelineDialogComponent, {\n      width: this.dialogWidth,\n      height: this.dialogHeight,\n      position:\n          {top: dialogCoordinates[1] + 'px', left: dialogCoordinates[0] + 'px'},\n      data: data\n    });\n    this.dialogRef.afterClosed().subscribe(r => {\n      if (r) {\n        if (editedAnnotation) {\n          this.data.removePointFromSeries(\n              DateTime.fromMillis(editedAnnotation.timestamp.toMillis()));\n          this.removeAnnotation(editedAnnotation.timestamp.toMillis());\n          this.regenerateChart();\n        }\n\n        const result: CustomizableGraphAnnotation =\n            r as CustomizableGraphAnnotation;\n        // By default, the user selected date is the original date\n        // corresponding to where the user chose to add the point.\n        let userSelectedDate = result.timestamp;\n        // TODO(b/122371627):  Use UUIDs instead of timestamps to track\n        // annotations.\n        userSelectedDate =\n            DateTime.fromMillis(this.updateTime(userSelectedDate.toMillis()));\n        result.timestamp = userSelectedDate;\n        this.data.addPointToSeries(0, result);\n        this.data.annotations.get(userSelectedDate.toMillis())\n            .addAnnotation(chart);\n        this.loadNewData();\n        // Add listeners for click events on the new annotation.\n        this.addDeleteEvent(userSelectedDate.toMillis());\n        this.addEditEvent(userSelectedDate.toMillis());\n        this.pointsChanged.emit(this.data);\n      }\n    });\n  }\n\n\n  // Updates the annotations displayed on the chart after a new point is added\n  // or the date range is changed.\n  private updateAnnotations() {\n    // We sort the points by timestamp.\n    const timestamps = Array.from(this.data.annotations.keys()).sort();\n    // Charted points are always sorted by timestamp.\n    const chartedPoints = d3.select('#' + this.chartDivId)\n                              .select('.c3-circles')\n                              .selectAll('circle')\n                              .nodes();\n    if (chartedPoints.length > 0) {\n      for (let i = 0; i < timestamps.length; i++) {\n        const timestamp = timestamps[i];\n        const xPosition = d3.select(chartedPoints[i]).attr('cx');\n        // Only add the annotation if the chart point is displayed given the\n        // date range selected, and its x-position is greater than 0 (where the\n        // y-axis is).\n        if (Number(xPosition) >= 0) {\n          this.data.annotations.get(timestamp).addAnnotation(this.chart);\n          // Add listeners for click events on the new annotation.\n          this.addDeleteEvent(timestamp);\n          this.addEditEvent(timestamp);\n        }\n      }\n    }\n  }\n\n  /**\n   * Removes an annotation at the given time from the DOM.\n   * @param millis The millis for this point to remove.\n   */\n  private removeAnnotation(millis: number) {\n    d3.select('#' + this.chartDivId)\n        .select('tooltip-custom-' + millis)\n        .remove();\n    d3.select('#' + this.chartDivId)\n        .select('tooltip-connector-' + millis)\n        .remove();\n    this.updateAnnotations();\n  }\n\n  /**\n   * Add a listener for a click event on the delete button of the annotation at\n   * the given time.\n   * @param millis The millis for this point to remove.\n   */\n  private addDeleteEvent(millis: number) {\n    const self = this;\n    const deleteIcon =\n        d3.select('#' + this.chartDivId).select('#delete-' + millis);\n    deleteIcon.on('click', function() {\n      const time = DateTime.fromMillis(millis);\n      self.data.removePointFromSeries(time);\n      self.regenerateChart();\n      self.pointsChanged.emit(self.data);\n    });\n  }\n\n  /**\n   * Add a listener for a click event on the edit button of the annotation at\n   * the given time.\n   * @param millis The millis for this point to remove.\n   * @param xCoord The x-coordinate of where to show the dialog box.\n   * @param yCoord The y-coordinate of where to show the dialog box.\n   */\n  private addEditEvent(millis: number) {\n    const self = this;\n    const editIcon = d3.select('#' + this.chartDivId).select('#edit-' + millis);\n    const currAnnotation = this.data.annotations.get(millis);\n\n    editIcon.on('click', function() {\n      const parentCoordinates = d3.mouse(document.body);\n      const dialogCoordinates = self.findDialogCoordinates(\n          parentCoordinates[0] + 10, parentCoordinates[1] + 0);\n\n      self.dialogRef =\n          self.openDialog(parentCoordinates, dialogCoordinates, currAnnotation);\n    });\n  }\n\n  /**\n   * Change the coordinates of the dialog's position if the dialog will go past\n   * the edges of the screen.\n   * @param xCoordinate The x coordinate to change, if necessary.\n   * @param yCoordinate The y coordinate to change, if necessary.\n   */\n  findDialogCoordinates(xCoordinate: number, yCoordinate: number):\n      [number, number] {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const dialogWidth = Number(this.dialogWidth.replace('px', ''));\n    const dialogHeight = Number(this.dialogHeight.replace('px', ''));\n    if ((xCoordinate + dialogWidth) > windowWidth) {\n      xCoordinate -= ((xCoordinate + dialogWidth) - windowWidth);\n    }\n    if ((yCoordinate + dialogHeight) > windowHeight) {\n      yCoordinate -= ((yCoordinate + dialogHeight) - windowHeight);\n    }\n    return [xCoordinate, yCoordinate];\n  }\n\n  /**\n   * @returns the c3.ChartConfiguration object to generate the c3 chart.\n   * @override\n   */\n  generateChart(): c3.ChartConfiguration {\n    // Give labels to each series and make a map of x-values to y-values.\n    const yAxisConfig: c3.YAxisConfiguration = {\n      min: 0,\n      max: 5,\n      padding: {top: 0, bottom: 0},\n      tick: {\n        count: 5,\n        format: d => {\n          // We add padding to our y-axis tick labels so that all y-axes of the\n          // charts rendered on the page can be aligned.\n          return (d)\n              .toLocaleString(\n                  'en-us', {minimumFractionDigits: 2, maximumFractionDigits: 2})\n              .trim()\n              .padStart(12, '\\xa0');\n        }\n      }\n    };\n\n    const graph = this.generateBasicChart(yAxisConfig);\n\n    graph.axis.x.height = 50;\n    graph.data.type = 'scatter';\n    graph.zoom = {enabled: false};\n    const self = this;\n    graph.data.onmouseover = function(d) {\n      self.hoveringOverPoint = true;\n    };\n    graph.tooltip = {show: false};\n    graph.transition = {duration: 0};\n    graph.data.onmouseout = function(d) {\n      // Add a timeout to ensure that the user can't add a point immediately\n      // after moving away from an existing point.\n      setTimeout(() => {\n        self.hoveringOverPoint = false;\n      }, 500);\n    };\n    graph.data.onclick = function(d, element) {\n      self.hoveringOverPoint = true;\n    };\n\n    graph.data.color = function(color, d) {\n      return self.data.annotations.get(DateTime.fromJSDate(d.x).toMillis())\n          .color;\n    };\n    graph.point = {show: true, r: 5, focus: {expand: {enabled: false}}};\n    return graph;\n  }\n}\n","module.exports = \"/* All the below styles apply to elements within the graphs. Because these\\nare nested inside the components and within C3 divs, we have to prefix the\\nstyle names with ::ng-deep.  */\\n\\n::ng-deep .c3-region {\\n  fill: hsl(150, 50%, 50%);\\n  stroke: hsl(150, 50%, 70%);;\\n  stroke-dasharray: 1px;\\n}\\n\\n::ng-deep .c3 {\\n  cursor: default !important;\\n}\\n\\n.c3-tooltip > tbody > tr > th {\\n  background-color: rgb(197, 185, 172); /* Boston Warm Gray */\\n}\\n\\n/* This ensures that the step graph lines do not show circles for individual data points, except for the end points of each line segment. */\\n\\n::ng-deep .stepgraph .c3-circles:not([class *=\\\"endpoint\\\"]) {\\n  display: none;\\n}\\n\\n/* This is styling for a stepgraphcard's circles on the end points of line segments. */\\n\\n::ng-deep .stepgraph [class *= \\\"endpoint\\\"] {\\n  stroke: black;\\n  opacity: 1;\\n  stroke-width: 3;\\n}\\n\\n::ng-deep .stepgraph .c3-line {\\n  stroke-width: 2px;\\n}\\n\\n::ng-deep .stepgraph [class*=\\\"tooltip\\\"] {\\n  width: 210px;\\n}\\n\\n::ng-deep .c3-axis-y text :not(.c3-axis-y-label) {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  font-size: 13px;\\n}\\n\\n::ng-deep .c3-axis-x text {\\n  font-family: \\\"Roboto\\\", sans-serif !important;\\n  font-size: 13px;\\n}\\n\\n::ng-deep .noData {\\n  opacity: 1 !important;\\n}\\n\\n::ng-deep .c3-ygrid-line text {\\n  font-size: 13px !important;\\n  fill: black;\\n}\\n\\n/* These colors need to stay consistent with the color options in the dialog for the custom timeline. */\\n\\n/* Yellow grid line */\\n\\n::ng-deep .c3-xgrid-line.colorF2A900 line {\\n  stroke: #F2A900;\\n}\\n\\n/* Blue grid line */\\n\\n::ng-deep .c3-xgrid-line.color007396 line {\\n  stroke: #007396;\\n}\\n\\n/* Green grid line */\\n\\n::ng-deep .c3-xgrid-line.color739600 line {\\n  stroke: #739600;\\n}\\n\\n/* Pink grid line */\\n\\n::ng-deep .c3-xgrid-line.colorC6579A line {\\n  stroke: #C6579A;\\n}\\n\\n/* Purple grid line */\\n\\n::ng-deep .c3-xgrid-line.color8C4799 line {\\n  stroke: #8C4799;\\n}\\n\\n/* Red grid line */\\n\\n::ng-deep .c3-xgrid-line.color80225F line {\\n  stroke: #80225F;\\n}\\n\\n::ng-deep .encounter-region {\\n  fill: rgb(0, 35, 86); /* Primary color */\\n  stroke: rgb(0, 35, 86); /* Primary color */\\n}\\n\\n::ng-deep .order-region {\\n  fill: rgb(179, 157, 219); /* Secondary color */\\n  stroke:  rgb(179, 157, 219); /* Secondary color */\\n}\"","module.exports = \"<div id=\\\"{{chartDivId}}\\\"></div>\\n<table id=\\\"c3-tooltip\\\" class=\\\"c3-tooltip\\\"></table>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {AfterViewInit, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as c3 from 'c3';\nimport * as d3 from 'd3';\nimport {Color} from 'd3';\nimport {DateTime, Interval} from 'luxon';\nimport {GraphData} from 'src/app/graphdatatypes/graphdata';\nimport {LabeledSeries} from 'src/app/graphdatatypes/labeled-series';\nimport {LineGraphData} from 'src/app/graphdatatypes/linegraphdata';\nimport {v4 as uuid} from 'uuid';\n\nimport {DisplayGrouping} from '../../clinicalconcepts/display-grouping';\nimport {getTickMarksForXAxis} from '../../date_utils';\nimport {StandardTooltip} from '../tooltips/tooltip';\n\nexport enum ChartType {\n  SCATTER,\n  LINE,\n  STEP,\n  MICROBIO\n}\n\nconst BASE_CHART_HEIGHT_PX = 150;\n\n// The maximum characters for a y-axis tick label.\nexport const Y_AXIS_TICK_MAX = 12;\n\n/**\n * Displays a graph. T is the data type the graph is equipped to display.\n */\nexport abstract class GraphComponent<T extends GraphData> implements\n    OnChanges, AfterViewInit {\n  // The x-axis eventlines to display on the chart.\n  @Input() eventlines: Array<{[key: string]: number | string}>;\n  // Over which time interval the card should display data, stored in UTC time.\n  @Input() dateRange: Interval;\n  @Input() data: T;\n  // The y-axis label to display.\n  @Input() axisLabel: string;\n\n  // A unique identifier for the element to bind the graph to.\n  chartDivId: string;\n\n  // What type of chart this is. Line chart by default.\n  chartType: ChartType = ChartType.LINE;\n\n  // Maps for making a custom legend. We assume that the custom legend does not\n  // change over the lifetime of this rendered graph.\n  private customLegendSet = false;\n\n  // These two variables are different views on the data held in\n  // seriesTodisplayGroup. We need to hold them in separate maps for more\n  // efficient access during legend interaction.\n  readonly displayGroupToSeries = new Map<DisplayGrouping, string[]>();\n\n  // Indicating whether are not there are any data points for the current time\n  // interval.\n  noDataPointsInDateRange: boolean;\n\n  // The rendered chart so that you can apply functions to it.\n  chart: c3.ChartAPI;\n\n  // We hold the values of yAxis tick labels and set the values as empty strings\n  // during setup, so that the y axis does not get shifted while getting\n  // displayed.\n  yAxisTickDisplayValues: string[];\n\n  labels: string[] = [];\n\n  constructor(readonly sanitizer: DomSanitizer) {\n    // Generate a unique ID for this chart.\n    const chartId = uuid();\n    // Replace the dashes in the UUID to meet HTML requirements.\n    const re = /\\-/gi;\n    this.chartDivId = 'chart' + chartId.replace(re, '');\n  }\n\n  /*\n   * Returns whether or not there are any data points in the series that fall\n   * inside the date range provided.\n   * @param series The LabeledSeries to find data points in the date range.\n   * @param dateRange The date range in which to see if there are any data\n   *     points.\n   */\n  static dataPointsInRange(series: LabeledSeries[], dateRange: Interval):\n      boolean {\n    for (const s of series) {\n      for (const x of s.xValues) {\n        if (dateRange.contains(x)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // The chart can't find the element to bind to until after the view is\n  // initialized so we need to regenerate the chart here.\n  ngAfterViewInit() {\n    this.regenerateChart();\n  }\n\n  // Any time the bound data changes, we need to regenerate the chart.\n  ngOnChanges(changes: SimpleChanges) {\n    this.regenerateChart();\n  }\n\n  regenerateChart() {\n    if (this.data && this.dateRange) {\n      this.chart = c3.generate(this.generateChart());\n      // Add an overlay indicating that there are no data points in the date\n      // range.\n      if (this.noDataPointsInDateRange) {\n        const emptyContainer =\n            d3.select('#' + this.chartDivId).select('.c3-text.c3-empty');\n        emptyContainer.text(\n            'No data for ' + this.dateRange.start.toLocaleString() + '-' +\n            this.dateRange.end.toLocaleString());\n        emptyContainer.attr('class', 'c3-text c3-empty noData');\n        // We set the opacity of the y-axis ticks of empty charts to 0 after\n        // setting the tick values. We do this instead of not displaying the\n        // y-axis altogether to ensure that the left padding of the chart is\n        // aligned with all other charts.\n        const yAxisTicks = d3.select('#' + this.chartDivId)\n                               .selectAll('.c3-axis-y')\n                               .selectAll('.tick')\n                               .style('opacity', 0);\n      }\n      this.wrapYAxisLabels();\n    }\n  }\n\n  /**\n   * @param configuration Holds configuration information for the data that\n   *     belongs in this chart.\n   * @param yAxisConfig Custom y-axis configurations.\n   * @param maxXTicks: The maximum number of tick-marks to include on the x-axis\n   * @returns A generalized c3.ChartConfig for the data passed in. See the\n   * type definition at:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/c3/index.d.ts\n   */\n  generateBasicChart(yAxisConfig = {}, maxXTicks = 10): c3.ChartConfiguration {\n    const daysInRange = getTickMarksForXAxis(this.dateRange, true);\n    // The ticks with labels displayed.\n    const ticksLabels = new Array<DateTime>();\n    // All ticks displayed.\n    let ticks = new Array<DateTime>();\n    if (Math.floor(daysInRange.length / 2) <= maxXTicks) {\n      // Ticks are separated by 1 day intervals, in which case we show ticks\n      // with no labels at the 12-hour mark.\n      ticks = daysInRange;\n      for (let i = 0; i < daysInRange.length; i += 2) {\n        ticksLabels.push(daysInRange[i]);\n      }\n    } else {\n      // Ticks are separated by intervals > 1 day, in which case we show ticks\n      // with no labels at the day mark.\n      const iteration = Math.ceil(daysInRange.length / maxXTicks);\n      ticksLabels.push(daysInRange[0]);\n      let date = daysInRange[0];\n      while (date <= this.dateRange.end) {\n        date = date.plus({days: iteration});\n        ticksLabels.push(date);\n      }\n      date = daysInRange[0];\n      ticks.push(date);\n      while (date <= this.dateRange.end) {\n        date = date.plus({days: 1});\n        ticks.push(date);\n      }\n    }\n\n    this.labels = ticksLabels.map(function(x) {\n      const date = x.toJSDate();\n      const formatTime = d3.timeFormat('%m/%d %H:%M');\n      return formatTime(date);\n    });\n    const colorsMap = {};\n    for (const key of Object.keys(this.data.c3DisplayConfiguration.columnMap)) {\n      if (this.data.c3DisplayConfiguration.ySeriesLabelToDisplayGroup.get(\n              key)) {\n        const lookupColor: Color =\n            this.data.c3DisplayConfiguration.ySeriesLabelToDisplayGroup.get(key)\n                .fill;\n        colorsMap[key] = lookupColor.toString();\n      }\n    }\n\n    const xAxisConfig: c3.XAxisConfiguration = {\n      type: 'timeseries',\n      min: this.dateRange.start.toLocal().startOf('day').toJSDate(),\n      max: this.dateRange.end.toLocal().endOf('day').toJSDate(),\n      localtime: true,\n      tick: {\n        // To reduce ambiguity we include the hour as well.\n        format: '%m/%d %H:%M',\n        multiline: true,\n        fit: true,\n        values: ticks.map(x => Number(x))\n      }\n    };\n    // If there's more than one series we'll need a legend so make the\n    // graph a bit taller.\n    let chartTypeString = 'line';\n    if (this.chartType === ChartType.SCATTER) {\n      chartTypeString = 'scatter';\n    } else if (this.chartType !== ChartType.LINE) {\n      throw Error('Unsupported chart type: ' + this.chartType);\n    }\n\n    // Show the y-axis label on the chart.\n    yAxisConfig['label'] = {\n      text: (this.axisLabel ? this.axisLabel : ''),\n      position: 'outer-middle'\n    };\n\n    const self = this;\n    const gridValues: any = this.eventlines ? this.eventlines : [];\n    const graph = {\n      bindto: '#' + this.chartDivId,\n      size: {height: BASE_CHART_HEIGHT_PX},\n      data: {\n        columns: this.data.c3DisplayConfiguration.allColumns,\n        xs: this.data.c3DisplayConfiguration.columnMap,\n        type: chartTypeString,\n        colors: colorsMap,\n      },\n      regions: this.data.xRegions,\n      axis: {x: xAxisConfig, y: yAxisConfig},\n      legend: {show: false},  // There's always a custom legend\n      line: {connectNull: false},\n      onrendered: function() {\n        self.boldDates();\n        self.wrapYAxisLabels();\n        self.fixOpacity();\n        self.onRendered(this);\n      },\n      grid: {x: {lines: gridValues}}\n    };\n\n    graph['tooltip'] = this.setTooltip();\n\n    this.setCustomLegend(\n        this.data.c3DisplayConfiguration.ySeriesLabelToDisplayGroup);\n    return graph;\n  }\n\n  /**\n   * Sets the tooltip for the graph.\n   * If the class has a tooltipMap set, then we look up the tooltip from that\n   * map. If there's no tooltipMap, then we return a simple formatted tooltip\n   * of just the string representing the data plus the appropriate units for\n   * a linegraph, or just the unedited value if it's a different kind of graph.\n   */\n  setTooltip(): {} {\n    const self = this;\n    if (this.data && this.data.tooltipMap) {\n      return {\n        contents: (\n            pointData: any[], defaultTitleFormat, defaultValueFormat,\n            color) => {\n          // pointData will hold every point for the x-value you're hovering\n          // on. We squish together all those data points preemptively in\n          // our tooltip creation so that we just find the index of the\n          // tooltip based on the first point's x-value.\n          const value = pointData[0];\n          const timestampKey =\n              DateTime.fromJSDate(value.x).toMillis().toString();\n          // Our data class may provide a tooltip key function that will\n          // get the correct identifier from the data point. If it does,\n          // we'll use that, but by default, the key is the timestamp\n          // of the data point.\n          const keyToUse = this.data.tooltipKeyFn ?\n              this.data.tooltipKeyFn(value) :\n              timestampKey;\n          // If something bad happens and we don't have a tooltip for the\n          // key, return an empty string so that there will just be no\n          // tooltip.\n          if (!this.data.tooltipMap.has(keyToUse)) {\n            return new StandardTooltip(\n                       pointData, color,\n                       self.data instanceof LineGraphData ? self.data.unit : '')\n                .getTooltip(undefined, this.sanitizer);\n          }\n          return this.data.tooltipMap.get(keyToUse);\n        }\n      };\n    } else {\n      return {\n        format: {\n          value: (value, ratio, id, index) => {\n            if (self.data instanceof LineGraphData) {\n              return (\n                  d3.format(',.' + self.data.precision + 'f')(value) + ' ' +\n                  self.data.unit);\n            }\n            return value;\n          }\n        }\n      };\n    }\n  }\n\n  /**\n   * Adds a shaded region on the chart across all x values, between the two\n   * y values specified by yBounds.\n   * @param basicChart The chart to add the region to\n   * @param yBounds The y-bounds of the region to display\n   */\n  addYRegionOnChart(basicChart: c3.ChartConfiguration, yBounds: [\n    number, number\n  ]): c3.ChartConfiguration {\n    if (!basicChart.axis.y.tick) {\n      basicChart.axis.y['tick'] = {};\n    }\n\n    basicChart.axis.y.tick['values'] = yBounds;\n    if (!basicChart['regions']) {\n      basicChart['regions'] = [];\n    }\n    basicChart['regions'].push({axis: 'y', start: yBounds[0], end: yBounds[1]});\n    return basicChart;\n  }\n\n  /**\n   * Sets a custom legend.\n   * To simplify rendering logic, we assume that we only set up a custom legend\n   * once over the lifetime of this graph.\n   *\n   * @param customLegendMap If you want a custom legend grouping multiple series\n   *   together, pass a map with keys of\n   *   series names and values of the ClinicalConcepts they should correspond\n   *   to in a legend.\n   */\n  setCustomLegend(seriesToDisplayGroup: Map<string, DisplayGrouping>) {\n    if (!this.customLegendSet) {\n      for (const [seriesLbl, displayGroup] of Array.from(\n               seriesToDisplayGroup.entries())) {\n        if (!this.displayGroupToSeries.has(displayGroup)) {\n          this.displayGroupToSeries.set(displayGroup, new Array(seriesLbl));\n        } else {\n          const appendedArray =\n              this.displayGroupToSeries.get(displayGroup).concat(seriesLbl);\n          this.displayGroupToSeries.set(displayGroup, appendedArray);\n        }\n      }\n      this.customLegendSet = true;\n    }\n  }\n\n  focusOnDisplayGroup(displayGroup: DisplayGrouping) {\n    this.chart.focus(this.displayGroupToSeries.get(displayGroup));\n  }\n\n  resetChart(displayGroup: DisplayGrouping) {\n    this.chart.revert();\n  }\n\n  /**\n   * Inserts wrapped y-axis tick labels.\n   * TODO(b/123229731): Include this method in chart.onRendered\n   */\n  wrapYAxisLabels() {\n    if (this.yAxisTickDisplayValues) {\n      let currIndex = 0;\n      const self = this;\n      d3.select('#' + this.chartDivId)\n          .selectAll('.c3-axis-y')\n          .selectAll('.tick text')\n          .each(function() {\n            // Get the text element.\n            const text = d3.select(this);\n            // Break up the label by spaces.\n            const words =\n                self.yAxisTickDisplayValues[currIndex].split(/\\s+/).reverse();\n            let word;\n            let line = [];\n            const lineHeight = 10;\n            // startDy is an attribute indicating how much to shift the first\n            // line of the label by in the y direction. The standard dy for a\n            // tick text is 3. Figure out the optimal starting dy such that half\n            // of the words are displayed above the tick, and half below.\n            const dyInterval = 6;\n            const startDy = 3 - (Math.floor(words.length / 2) * dyInterval);\n            // Insert the initial tspan.\n            let tspan = text.text(null).append('tspan').attr('x', -9).attr(\n                'dy', startDy);\n            while (word = words.pop()) {\n              line.push(word);\n              tspan.text(line.join(' '));\n              // Add another tspan (another line) if the label is too long.\n              // We don't break up single words that are too long.\n              if (tspan.text().length > Y_AXIS_TICK_MAX &&\n                  tspan.text().includes(' ')) {\n                // Add another line.\n                line.pop();\n                tspan.text(line.join(' '));\n                line = [word];\n                tspan =\n                    text.append('tspan').attr('x', -9).attr('dy', lineHeight);\n              }\n            }\n            // Add the remaining parts of the label to the tspan's text.\n            if (line.length > 0) {\n              tspan.text(line.join(' '));\n            }\n            currIndex++;\n          });\n    }\n  }\n\n  /**\n   * Called every time the graph is rendered. If subclass graphs want to do\n   * something special upon rendering, they can override this function.\n   */\n  onRendered(graphObject): void {}\n\n  /**\n   * Bolds the date portion of each x-axis tick label, and removes unnecessary\n   * labels.\n   */\n  boldDates() {\n    if (this.chart) {\n      const self = this;\n      d3.select('#' + this.chartDivId)\n          .selectAll('.c3-axis-x')\n          .selectAll('.tick text')\n          .each(function() {\n            // We get x (the x position), dy (how much to shift vertically), and\n            // dx (how much to shift horiztontally) of the tspan inside text\n            const dy = d3.select(this).select('tspan').attr('dy');\n            const dx = d3.select(this).select('tspan').attr('dx');\n            const x = d3.select(this).select('tspan').attr('x');\n            const textSplit = d3.select(this).text().split(' ');\n            const text = d3.select(this).text();\n            const tspan = d3.select(this)\n                              .text(null)\n                              .append('tspan')\n                              .attr('x', x)\n                              .attr('dx', dx)\n                              .attr('dy', dy)\n                              .style('font-weight', 'bolder');\n            // Only add the tick label text if it was meant to be\n            // displayed.\n            if (self.labels.length > 0 && self.labels.includes(text)) {\n              tspan.text(\n                  textSplit[0]);  // Set the 'bold' tspan's content as the date.\n              d3.select(this).append('tspan').text(\n                  ' ' + textSplit[1]);  // Add an additional tspan for the time.\n            }\n          });\n    }\n  }\n\n  fixOpacity() {\n    d3.select('#' + this.chartDivId).selectAll('.c3-circle').each(function(d) {\n      if (d3.select(this).style('opacity') === '0.5') {\n        d3.select(this).style('opacity', 1);\n      }\n    });\n  }\n\n  /**\n   * Generates the chart specified by the extending class.\n   * @param containedGraph The graph component to be rendered.\n   * @param chartHeight The height of the chart in pixels.\n   * @returns a ChartConfiguration. See typing definition here:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/c3/index.d.ts\n   */\n  abstract generateChart(chartHeight?: number): c3.ChartConfiguration;\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as c3 from 'c3';\nimport {LineGraphData} from 'src/app/graphdatatypes/linegraphdata';\n\nimport {GraphComponent, Y_AXIS_TICK_MAX} from '../graph/graph.component';\n\n@Component({\n  selector: 'app-linegraph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [\n    {provide: GraphComponent, useExisting: forwardRef(() => LineGraphComponent)}\n  ]\n})\nexport class LineGraphComponent extends GraphComponent<LineGraphData> {\n  constructor(readonly sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n  /**\n   * @returns the c3.ChartConfiguration object to generate the c3 chart.\n   * @override\n   */\n  generateChart(): c3.ChartConfiguration {\n    // Give labels to each series and make a map of x-values to y-values.\n    let min;\n    let max;\n    if (this.data.yAxisDisplayBounds[0] > this.data.yAxisDisplayBounds[1]) {\n      // No min or max set due to no data.\n      min = 0;\n      max = 10;\n    } else {\n      min = this.data.yAxisDisplayBounds[0];\n      max = this.data.yAxisDisplayBounds[1];\n    }\n\n    const yAxisConfig: c3.YAxisConfiguration = {\n      min: min,\n      max: max,\n      padding: {top: 20, bottom: 20},\n      tick: {\n        count: 5,\n        format: d => {\n          // We add padding to our y-axis tick labels so that all y-axes of the\n          // charts rendered on the page can be aligned.\n          return (d)\n              .toLocaleString('en-us', {\n                minimumFractionDigits: this.data.precision,\n                maximumFractionDigits: this.data.precision\n              })\n              .trim()\n              .padStart(Y_AXIS_TICK_MAX, '\\xa0');\n        }\n      },\n    };\n\n    let graph = this.generateBasicChart(yAxisConfig);\n\n    // Some things are only valid if there are y-axis normal bounds. We\n    // also only show normal bounds if there's one data series on the\n    // axis.\n    // These customizations are based on this.data, which is a type specific for\n    // LineGraphData, and could not be generalized in the abstract GraphCard\n    // class.\n    if (this.data.series.length > 0) {\n      const yBounds = this.data.series[0].yNormalBounds;\n      if (this.data.series.length === 1 && yBounds) {\n        graph = this.addYRegionOnChart(graph, yBounds);\n      }\n    }\n\n    // Check if there are any data points in the time range.\n    this.noDataPointsInDateRange =\n        !GraphComponent.dataPointsInRange(this.data.series, this.dateRange);\n\n    const self = this;\n    // If tick values aren't set, calculate the values.\n    if (!graph.axis.y.tick.values) {\n      graph.axis.y.tick.values = this.findYAxisValues(\n          this.data.yAxisDisplayBounds[0], this.data.yAxisDisplayBounds[1]);\n    }\n\n    if (graph.axis.y.tick.values.length === 0) {\n      // The dataset is empty. We show padded tick marks to align the y axis\n      // with the rest of the charts' axes.\n      for (let i = 0; i < 5; i++) {\n        graph.axis.y.tick.values.push(i);\n      }\n    }\n    const yValues = graph.axis.y.tick.values;\n    const needToWrap =\n        yValues.some(value => value.toString().length > Y_AXIS_TICK_MAX);\n    // Replace the tick label's initially displayed values to padded strings so\n    // that the axis is aligned.\n    if (needToWrap) {\n      graph.axis.y.tick.format = function(d) {\n        return ''.trim().padStart(Y_AXIS_TICK_MAX, '\\xa0');\n      };\n      this.yAxisTickDisplayValues =\n          yValues.map(value => value.toLocaleString('en-us', {\n            minimumFractionDigits: this.data.precision,\n            maximumFractionDigits: this.data.precision\n          }));\n    }\n\n    // Ensure that a line is not drawn through points with \"null\" values.\n    graph.line = {connectNull: false};\n    return graph;\n  }\n\n  // Manually find y axis tick values based on the min and max display bounds.\n  private findYAxisValues(min: number, max: number): number[] {\n    // Evenly space out 5 numbers between the min and max (display bounds).\n    const difference = max - min;\n    const spacing = difference / 4;\n    const values = [];\n    for (let curr = min; curr <= max; curr += spacing) {\n      values.push(curr);\n    }\n    return values;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as d3 from 'd3';\nimport {DisplayGrouping, negFinalMB, negPrelimMB, posFinalMB, posPrelimMB} from 'src/app/clinicalconcepts/display-grouping';\nimport {DiagnosticReportStatus} from 'src/app/fhir-data-classes/diagnostic-report';\nimport {CHECK_RESULT_CODE} from 'src/app/fhir-data-classes/observation-interpretation-valueset';\n\nimport {GraphComponent} from '../graph/graph.component';\nimport {StepGraphComponent} from '../stepgraph/stepgraph.component';\n\n@Component({\n  selector: 'app-microbio-graph',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => MicrobioGraphComponent)\n  }]\n})\nexport class MicrobioGraphComponent extends StepGraphComponent {\n  constructor(sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n\n  /**\n   * @returns the c3.ChartConfiguration object to generate the c3 chart.\n   * @override\n   */\n  generateChart(): c3.ChartConfiguration {\n    const graph = super.generateChart();\n    graph.data.type = 'scatter';\n    graph.point = {r: 5};\n    return graph;\n  }\n\n  /**\n   * Every time the graph is rendered, go back and find all the preliminary\n   * points and make sure their fill is transparent and there is a border\n   * around it.\n   */\n  onRendered(graphObject) {\n    // Apply colors. This will be handled better when we work on the legends.\n    const posCircles: d3.Selection<any, any, any, any> =\n        graphObject.getCircles()\n            .filter((d) => {\n              return d.id.includes(CHECK_RESULT_CODE);\n            })\n            .style('fill', posFinalMB.fill.toString());\n    const negCircles: d3.Selection<any, any, any, any> =\n        graphObject.getCircles()\n            .filter((d) => {\n              return !d.id.includes(CHECK_RESULT_CODE);\n            })\n            .style('fill', negFinalMB.fill.toString());\n\n    // Make prelim circles transparent-filled.\n    const prelimCircles: d3.Selection<any, any, any, any> =\n        graphObject.getCircles()\n            .filter((d) => {\n              return d.id.includes(\n                  DiagnosticReportStatus.Preliminary.toString());\n            })\n            .style('fill', 'transparent')\n            .style('stroke-width', '2px');\n    prelimCircles\n        .filter((d) => {\n          return d.id.includes(CHECK_RESULT_CODE);\n        })\n        .style('stroke', posPrelimMB.outline.toString());\n    prelimCircles\n        .filter((d) => {\n          return !d.id.includes(CHECK_RESULT_CODE);\n        })\n        .style('stroke', negPrelimMB.outline.toString());\n  }\n\n  // Toggle the display of various points on the chart, and style various points\n  // based on report status. This method is called after the user clicks on a\n  // particular displayGroup in the legend.\n  toggleDisplayGroup(displayGroup: DisplayGrouping) {\n    this.chart.toggle(this.displayGroupToSeries.get(displayGroup));\n    this.wrapYAxisLabels();\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef, Input} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {ChartType} from '../graph/graph.component';\nimport {GraphComponent} from '../graph/graph.component';\nimport {LineGraphComponent} from '../linegraph/linegraph.component';\n\n@Component({\n  selector: 'app-scatterplot',\n  templateUrl: '../graph/graph.component.html',\n  styleUrls: ['../graph.css'],\n  providers: [{\n    provide: GraphComponent,\n    useExisting: forwardRef(() => ScatterplotComponent)\n  }]\n})\nexport class ScatterplotComponent extends LineGraphComponent {\n  constructor(sanitizer: DomSanitizer) {\n    super(sanitizer);\n    this.chartType = ChartType.SCATTER;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, forwardRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as c3 from 'c3';\nimport * as Color from 'color';\nimport {DateTime} from 'luxon';\nimport {MicrobioGraphData} from 'src/app/graphdatatypes/microbiographdata';\nimport {getDataColors} from 'src/app/theme/bch_colors';\n\nimport {StepGraphData} from '../../graphdatatypes/stepgraphdata';\nimport {GraphComponent} from '../graph/graph.component';\n\n@Component({\n  selector: 'app-stepgraph',\n  templateUrl: '../graph/graph.component.html',\n  // TODO(b/117575935): These styles need to be extracted and generalized\n  styleUrls: ['../graph.css'],\n  providers: [\n    {provide: GraphComponent, useExisting: forwardRef(() => StepGraphComponent)}\n  ]\n})\n\nexport class StepGraphComponent extends\n    GraphComponent<StepGraphData|MicrobioGraphData> {\n  constructor(readonly sanitizer: DomSanitizer) {\n    super(sanitizer);\n  }\n\n  /**\n   * @returns the c3.ChartConfiguration object to generate the c3 chart.\n   * @override\n   */\n  generateChart(): c3.ChartConfiguration {\n    // Give labels to each series and make a map of x-values to y-values.\n    const chartColors = {};\n    const types: {[key: string]: string} = {};\n\n    // Populate the stepgraphcard with data according to c3 format.\n    for (const series of this.data.series) {\n      const label = series.label;\n      if (series.concept) {\n        chartColors[label] = series.concept.fill;\n      } else {\n        chartColors[label] = getDataColors()[0];\n      }\n    }\n    for (const endpointSeries of this.data.endpointSeries) {\n      const endpointSeriesId = endpointSeries.label;\n      this.data.c3DisplayConfiguration.allColumns.push(\n          new Array<string|DateTime>('x_' + endpointSeriesId)\n              .concat(endpointSeries.xValues));\n      this.data.c3DisplayConfiguration.allColumns.push(\n          new Array<string|number>(endpointSeriesId)\n              .concat(endpointSeries.yValues));\n      this.data.c3DisplayConfiguration.columnMap[endpointSeriesId] =\n          'x_' + endpointSeriesId;\n      types[endpointSeriesId] = 'scatter';\n      chartColors[endpointSeriesId] = Color.rgb(0, 0, 0);\n    }\n\n    // The y-axis configuration for this chart maps each tick on the y-axis,\n    // initially numbers, to discrete labels representing each Medication's\n    // label, and sets the tick values to be those labels.\n    const yValues = Array.from(this.data.yAxisMap.keys());\n    // We need a slightly larger padding for step charts to be aligned with all\n    // other charts.\n    const stepGraphYAxisTickMax = 15;\n    this.yAxisTickDisplayValues =\n        yValues.map(value => this.data.yAxisMap.get(value));\n\n    const yAxisConfig: c3.YAxisConfiguration = {\n      // We add the min and max so that when series are hidden by being clicked\n      // on, the y axis does not change and the hidden medications' tick marks\n      // still appear\n      min: 10,\n      max: yValues.sort()[yValues.length - 1],\n      padding: {top: 20, bottom: 20},\n      tick: {\n        // We add padding to our y-axis tick labels so that all y-axes of the\n        // charts rendered on the page can be aligned.\n        // We use an empty string placeholder for each label, so that the axis\n        // does not get shifted over.\n        format: d => {\n          return ''.trim().padStart(stepGraphYAxisTickMax, '\\xa0');\n        },\n        values: Array.from(this.data.yAxisMap.keys()),\n      },\n    };\n\n    const graph = this.generateBasicChart(yAxisConfig);\n\n    // Check if there are any data points in the time range.\n    this.noDataPointsInDateRange =\n        !GraphComponent.dataPointsInRange(this.data.series, this.dateRange) &&\n        !GraphComponent.dataPointsInRange(\n            this.data.endpointSeries, this.dateRange);\n\n    graph.data.colors = chartColors;\n    // Don't draw lines between endpoints.\n    graph.data.types = types;\n    graph.grid.y = {show: true};\n    return graph;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as d3 from 'd3';\nimport {Duration} from 'luxon';\nimport {AnnotatedAdministration, MedicationAdministration} from 'src/app/fhir-data-classes/medication-administration';\n\nimport {MedicationOrder} from '../../fhir-data-classes/medication-order';\nimport {Tooltip} from '../tooltips/tooltip';\n\n/**\n * Makes a tooltip for a medication order that lists the order's first and last\n * doses in a table.\n */\nexport class MedicationTooltip extends Tooltip<MedicationOrder> {\n  getTooltip(order: MedicationOrder, sanitizer: DomSanitizer): string {\n    const medication = order.label;\n    const firstDose =\n        Tooltip.formatTimestamp(order.firstAdministration.timestamp);\n    const lastDose =\n        Tooltip.formatTimestamp(order.lastAdmininistration.timestamp);\n    const table = Tooltip.createNewTable();\n    Tooltip.addHeader(medication, table, sanitizer);\n    Tooltip.addRow(table, ['First Dose', firstDose], sanitizer);\n    Tooltip.addRow(table, ['Last Dose', lastDose], sanitizer);\n    return table.outerHTML;\n  }\n}\n\n/**\n * Makes a tooltip for a medication administration that shows its dose\n * as well as the time since the last dose.\n */\nexport class MedicationAdministrationTooltip extends\n    Tooltip<AnnotatedAdministration[]> {\n  getTooltip(\n      administrations: AnnotatedAdministration[],\n      sanitizer: DomSanitizer): string {\n    const timestamp = administrations[0].medAdministration.timestamp;\n    const table = Tooltip.createNewTable();\n    for (const administration of administrations) {\n      Tooltip.addHeader(\n          Tooltip.formatTimestamp(timestamp) + ': Dose ' +\n              administration.doseInOrder + ' of ' +\n              administration.medAdministration.rxNormCode.label,\n          table, sanitizer, 3);\n      Tooltip.addRow(table, ['', 'Time', 'Dose'], sanitizer);\n      Tooltip.addRow(\n          table,\n          [\n            'This dose',\n            Tooltip.formatTimestamp(administration.medAdministration.timestamp),\n            this.formatDosage(administration.medAdministration)\n          ],\n          sanitizer);\n\n      if (administration.previousDose) {\n        const timestampDifference: Duration =\n            administration.medAdministration.timestamp.diff(\n                administration.previousDose.medAdministration.timestamp);\n\n        const doseDiffText =\n            Tooltip.formatTimestamp(\n                administration.previousDose.medAdministration.timestamp) +\n            '<br>(' + timestampDifference.toFormat('h:m') + ' after dose ' +\n            administration.previousDose.doseInOrder + ')';\n\n        Tooltip.addRow(\n            table,\n            [\n              'Previous dose', doseDiffText,\n              this.formatDosage(administration.previousDose.medAdministration)\n            ],\n            sanitizer);\n      }\n    }\n    return table.outerHTML;\n  }\n\n  private formatDosage(administration: MedicationAdministration) {\n    return d3.format(',')(administration.dosage.quantity) + ' ' +\n        administration.dosage.unit;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {AnnotatedDiagnosticReport, DiagnosticReportStatus} from 'src/app/fhir-data-classes/diagnostic-report';\n\nimport {Tooltip} from '../tooltips/tooltip';\n\n/*\n * This class makes a tooltip for a DiagnosticReport that applies to all points\n * charted from the same report. It lists the time of the report, the report\n * status, as well as all results contained in the report.\n */\nexport class MicrobioTooltip extends Tooltip<AnnotatedDiagnosticReport> {\n  getTooltip(\n      annotatedReport: AnnotatedDiagnosticReport,\n      sanitizer: DomSanitizer): string {\n    const status = DiagnosticReportStatus[annotatedReport.report.status];\n    const results = annotatedReport.report.results;\n    const timestamp = annotatedReport.timestamp;\n\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(timestamp, table, sanitizer);\n    Tooltip.addRow(table, ['Status', status], sanitizer);\n    const spacerRow = table.insertRow();\n    spacerRow.insertCell();\n    Tooltip.addHeader('Results Contained', table, sanitizer);\n    for (const result of results) {\n      Tooltip.addRow(\n          table, [result.display, result.interpretation.display], sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'd3';\nimport {AnnotatedObservation} from 'src/app/fhir-data-classes/annotated-observation';\n\nimport {Observation} from '../../fhir-data-classes/observation';\n\nimport {Tooltip} from './tooltip';\n\n/*\n * This class makes a tooltip for a list of Observations containing discrete, or\n * qualitative, values rather than quantitative results. The list of\n * Observations should all have the same timestamp.\n */\nexport class DiscreteObservationTooltip extends Tooltip<Observation[]> {\n  getTooltip(observations: Observation[], sanitizer: DomSanitizer): string {\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(observations[0].timestamp, table, sanitizer);\n    for (const obs of observations) {\n      Tooltip.addRow(table, [obs.label, obs.result], sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n\n/**\n * Makes a generic tooltip for an AnnotatedObservation with rows for each of\n * its annotation values.\n */\nexport class GenericAnnotatedObservationTooltip extends\n    Tooltip<AnnotatedObservation> {\n  constructor(private addTimestampRow: boolean, private color: Color) {\n    super();\n  }\n\n  /**\n   * Returns the HTML for a generic tooltip.\n   * @param observation The AnnotatedObservation used to generate the tooltip\n   * @param sanitizer A DOM sanitizer\n   * @returns If the observation has annotations, a HTML table with the\n   *     annotation values. If there are no annotations, will return undefined.\n   */\n  getTooltip(observation: AnnotatedObservation, sanitizer: DomSanitizer): string\n      |undefined {\n    if (observation.annotationValues.length === 0) {\n      return undefined;\n    }\n    const table = Tooltip.createNewTable();\n    if (this.addTimestampRow) {\n      Tooltip.addTimeHeader(\n          observation.observation.timestamp, table, sanitizer);\n    }\n\n    Tooltip.addRow(\n        table,\n        [\n          observation.label,\n          observation.observation.value.value + ' ' +\n              observation.observation.unit\n        ],\n        sanitizer, this.color);\n    for (const annotation of observation.annotationValues) {\n      Tooltip.addRow(table, annotation, sanitizer);\n    }\n    return table.outerHTML;\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {SecurityContext} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Color} from 'd3';\nimport {DateTime} from 'luxon';\n\n/*\n * This base class contains useful helper methods used while making a custom\n * tooltip for a c3 chart, including adding a row to the table, resetting the\n * table, and adding a header.\n *\n * This is functionally a static class, but Typescript doesn't allow for\n * abstract static functions. We make all tooltip classes inherit from Tooltip\n * so that they must implement the getTooltip function.\n *\n * @param T The type of data that the tooltip is derived from.\n */\nexport abstract class Tooltip<T> {\n  static createNewTable(): HTMLTableElement {\n    const table: HTMLTableElement = document.createElement('table');\n    table.setAttribute('class', 'c3-tooltip');\n    return table;\n  }\n\n  static addTimeHeader(\n      timestamp: DateTime, table: HTMLTableElement, sanitizer: DomSanitizer,\n      colSpan = 2) {\n    Tooltip.addHeader(\n        Tooltip.formatTimestamp(timestamp), table, sanitizer, colSpan);\n  }\n\n  static formatTimestamp(timestamp: DateTime) {\n    return timestamp.toLocaleString() + ' ' +\n        timestamp.toLocal().toLocaleString(DateTime.TIME_24_SIMPLE);\n  }\n\n  static addHeader(\n      content: string, table: HTMLTableElement, sanitizer: DomSanitizer,\n      colSpan = 2) {\n    // Header row\n    const row = table.insertRow();\n    const headerCell = document.createElement('th');\n    row.appendChild(headerCell);\n    headerCell.colSpan = colSpan;\n    headerCell.innerHTML = sanitizer.sanitize(SecurityContext.HTML, content);\n  }\n\n  static addRow(\n      table: HTMLTableElement, cellText: string[], sanitizer: DomSanitizer,\n      color?: Color) {\n    const row = table.insertRow();\n    for (let i = 0; i < cellText.length; i++) {\n      const cell1 = row.insertCell();\n      if (i === 0) {\n        cell1.className = 'name';\n        if (color) {\n          cell1.appendChild(Tooltip.makeColorSwatch(color));\n          const div = document.createElement('div');\n          div.setAttribute('style', 'display: inline-block;');\n          div.innerHTML = sanitizer.sanitize(SecurityContext.HTML, cellText[i]);\n          cell1.appendChild(div);\n          continue;\n        }\n      } else {\n        cell1.className = 'value';\n      }\n      cell1.innerHTML = sanitizer.sanitize(SecurityContext.HTML, cellText[i]);\n    }\n  }\n\n  static makeColorSwatch(color: Color): HTMLSpanElement {\n    const colorSpan: HTMLSpanElement = document.createElement('span');\n    colorSpan.setAttribute(\n        'style',\n        'background-color: ' + color.toString() +\n            '; display: inline-block; height: 10px; width: 10px;');\n    return colorSpan;\n  }\n\n  abstract getTooltip(inputValue: T, sanitizer: DomSanitizer): string;\n}\n\n/**\n * This is a generic tooltip for a data point on the graph. It just takes in\n * the data points C3 provides to the tooltip function, then returns a table\n * with a header of the timestamp and a row for each included point.\n * The left hand side of each row is the series label. The right hand side of\n * each row is the y-value.\n */\nexport class StandardTooltip extends Tooltip<any> {\n  constructor(\n      private dataPoints: any[], private color: Function, private unit = '') {\n    super();\n  }\n\n  getTooltip(unused: any, sanitizer: DomSanitizer): string {\n    const table = Tooltip.createNewTable();\n    Tooltip.addTimeHeader(\n        DateTime.fromJSDate(new Date(this.dataPoints[0].x)), table, sanitizer);\n\n    for (const pt of this.dataPoints) {\n      Tooltip.addRow(\n          table, [pt.name, pt.value + ' ' + this.unit], sanitizer,\n          this.color(pt));\n    }\n    return table.outerHTML;\n  }\n}\n","module.exports = \".stepContent {\\n  margin-bottom: 30px;\\n  margin-top: 10px;\\n  font-size: 20px;\\n}\\n\\n::ng-deep .mat-horizontal-content-container {\\n  padding-bottom: 0px !important;\\n}\\n\\n.stepperButtons {\\n  float: right;\\n}\\n\\n.stepperButtons button {\\n  margin-right: 5px;\\n}\\n\\n::ng-deep .mat-dialog-container {\\n  max-height: -webkit-fill-available !important;\\n}\\n\\nimg {\\n  width: 100%;\\n}\\n\\n.divider {\\n  margin-bottom: 20px;\\n  margin-top: 10px;\\n  border-top-width: 5px !important;\\n}\"","module.exports = \"<div style=\\\"float: right;\\\" mat-dialog-actions>\\n  <button mat-icon-button (click)=\\\"onExit()\\\">\\n    <mat-icon color=\\\"primary\\\">close</mat-icon>\\n  </button>\\n</div>\\n<mat-horizontal-stepper [linear]=\\\"false\\\" #stepper>\\n  <!-- keep icons as numbers during edit-->\\n  <ng-template matStepperIcon=\\\"edit\\\" let-index=\\\"index\\\">\\n    {{index +1}}\\n  </ng-template>\\n  <mat-step label=\\\"Intro\\\">\\n    <div class=\\\"stepContent\\\">\\n      MedTimeLine intro screen\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Changing the dates\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          Change the dates of the data displayed on the chart using datepickers.\\n        </div>\\n        <img src=\\\"assets/images/datepicker1.png\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the datepicker icon to open a calendar.\\n        </div>\\n        <img src=\\\"assets/images/datepicker2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Custom TimeLine\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        The Timeline feature allows you to enter custom events.\\n      </div>\\n      <div>\\n        <div>\\n          Click anywhere on the timeline to add an event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          By default, descriptions for events are hidden. Click on the expander to reveal the description.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the pencil icon to edit the event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline3.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the trashcan icon to delete the event.\\n        </div>\\n        <img src=\\\"assets/images/customTimeline4.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Charts\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          For charts with legends, hover over a series to highlight that series on the chart. Click on a series to hide\\n          it from the chart.\\n        </div>\\n        <img src=\\\"assets/images/chartUpClose1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          The green highlighted area on some charts represents a \\\"normal range\\\" indicated in the standard.\\n        </div>\\n        <img src=\\\"assets/images/chartUpClose2.png\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Card Container\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        The card container displays all charts selected.\\n      </div>\\n      <div>\\n        <div>\\n          Click and drag a chart to rearrange on the page.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer1.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          Click on the trashcan icon to remove a card from the page. Press \\\"Undo\\\" at the bottom of the page to restore.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer2.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n      <div>\\n        <div>\\n          You can add cards to the top of the page using the toolbar.\\n        </div>\\n        <img src=\\\"assets/images/cardContainer3.gif\\\">\\n      </div>\\n      <mat-divider class=\\\"divider\\\"></mat-divider>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step label=\\\"Save Snapshot\\\">\\n    <div class=\\\"stepContent\\\">\\n      <div>\\n        <div>\\n          The \\\"Save Snapshot\\\" button allows you to save a static image of the current page to the patient record.\\n        </div>\\n        <img src=\\\"assets/images/saveSnapshot.gif\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"stepperButtons\\\">\\n      <button mat-stroked-button matStepperPrevious>Back</button>\\n      <button mat-stroked-button (click)=\\\"onExit()\\\">Close</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\"","import {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-help-dialog',\n  templateUrl: './help-dialog.component.html',\n  styleUrls: ['./help-dialog.component.css']\n})\n\n/**\n * This class holds the logic and template for a tutorial stepper dialog.\n * TODO(b/122670756): Change wording and pictures in the tutorial.\n */\nexport class HelpDialogComponent {\n  constructor(public dialogRef: MatDialogRef<HelpDialogComponent>) {}\n\n  onExit() {\n    this.dialogRef.close();\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Interval} from 'luxon';\nimport {FhirResourceType} from 'src/constants';\n\nimport {environment} from '../environments/environment';\n\nimport {BCHMicrobioCodeGroup} from './clinicalconcepts/bch-microbio-code';\nimport {LOINCCode} from './clinicalconcepts/loinc-code';\nimport {ResourceCode} from './clinicalconcepts/resource-code-group';\nimport {RxNormCode} from './clinicalconcepts/rx-norm';\nimport {DiagnosticReport} from './fhir-data-classes/diagnostic-report';\nimport {Encounter} from './fhir-data-classes/encounter';\nimport {MedicationAdministration} from './fhir-data-classes/medication-administration';\nimport {MedicationOrder} from './fhir-data-classes/medication-order';\nimport {Observation, ObservationStatus} from './fhir-data-classes/observation';\nimport {FhirService} from './fhir.service';\n\n@Injectable()\nexport class MockFhirService extends FhirService {\n  errorMessage: string;\n\n  private readonly assetPath = './assets/' + environment.mockDataFolder + '/';\n  private readonly allFilePaths =\n      environment.mockDataFiles.map(x => this.assetPath + x + '.json');\n\n  private readonly loincMap = new Map<LOINCCode, Observation[]>();\n  private readonly medicationAdministrationMapByCode =\n      new Map<RxNormCode, MedicationAdministration[]>();\n  private readonly medicationAdministrationMapByOrderId =\n      new Map<string, MedicationAdministration[]>();\n  private readonly medicationOrderMap = new Map<string, MedicationOrder[]>();\n  private readonly diagnosticReportMap =\n      new Map<ResourceCode, DiagnosticReport[]>();\n  private readonly encounters = new Array<Encounter>();\n  private readonly allDataPromise: Promise<void[]>;\n\n  private constructResourceMap<K, V>(\n      json: any, mapToUpdate: Map<K, V[]>, constructorFn: (any) => V,\n      getCodesFn: (value: V) => K[]) {\n    try {\n      const obj = constructorFn(json.resource);\n      for (const code of getCodesFn(obj)) {\n        let existing = mapToUpdate.get(code);\n        if (!existing) {\n          existing = [];\n        }\n        existing.push(obj);\n        mapToUpdate.set(code, existing);\n      }\n    } catch (err) {\n      // tslint:disable-next-line:no-console\n      console.debug(err);\n    }\n  }\n\n  private mapAllData(): Promise<void[]> {\n    return Promise.all(this.allFilePaths.map(filePath => {\n      return this.http.get(filePath).toPromise<any>().then(data => {\n        for (const json of data.entry) {\n          const resourceType = json.resource.resourceType;\n\n          if (resourceType === FhirResourceType.Observation) {\n            this.constructResourceMap(\n                json, this.loincMap, (x: any) => new Observation(x),\n                (obs) => obs.codes);\n          }\n\n          if (resourceType === FhirResourceType.MedicationAdministration) {\n            this.constructResourceMap(\n                json, this.medicationAdministrationMapByCode,\n                (d) => new MedicationAdministration(d),\n                (admin) => [admin.rxNormCode]);\n\n            this.constructResourceMap(\n                json, this.medicationAdministrationMapByOrderId,\n                (d) => new MedicationAdministration(d),\n                (admin) => [admin.medicationOrderId]);\n          }\n\n          if (resourceType === FhirResourceType.MedicationOrder) {\n            this.constructResourceMap(\n                json, this.medicationOrderMap, (d) => new MedicationOrder(d),\n                (order) => [order.orderId]);\n          }\n\n          if (resourceType === FhirResourceType.Encounter) {\n            const encounter = new Encounter(json.resource);\n            this.encounters.push(encounter);\n          }\n\n          if (resourceType === FhirResourceType.DiagnosticReport) {\n            this.constructResourceMap(\n                json, this.diagnosticReportMap, (d) => new DiagnosticReport(d),\n                (report) =>\n                    report.results.map(x => x.codes)\n                        .reduce(\n                            (prev: ResourceCode[], curr: ResourceCode[]) => {\n                              return prev.concat(curr);\n                            },\n                            []));\n          }\n        }\n      });\n    }));\n  }\n\n  constructor(private http: HttpClient) {\n    super();\n    this.allDataPromise = this.mapAllData();\n  }\n\n  /**\n   * Gets observations from a specified date range with a specific LOINC code.\n   * @param code The LOINC code for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount If set, the number of observations that should be\n   *     queried for\n   */\n  getObservationsWithCode(\n      code: LOINCCode, dateRange: Interval,\n      limitCount?: number): Promise<Observation[]> {\n    return this.allDataPromise.then(\n        map =>\n            this.getObservations(this.loincMap, code, dateRange, limitCount));\n  }\n\n  private getObservations(\n      map: Map<LOINCCode, Observation[]>, code: LOINCCode, dateRange: Interval,\n      limitCount = 0) {\n    return map.has(code) ?\n        map.get(code)\n            .filter(obs => dateRange.contains(obs.timestamp))\n            .filter(obs => obs.status !== ObservationStatus.EnteredInError)\n            .slice(0, limitCount ? limitCount : undefined) :\n        [];\n  }\n\n  /**\n   * Gets medication data from a specified date range with a specific Rx code\n   * @param code The RxNormCode codes for which to get observations.\n   * @param dateRange The time interval observations should fall between.\n   * @param limitCount Unused in this implementation, as this is just a\n   *     time-saving feature for HTTP calls.\n   */\n  getMedicationAdministrationsWithCode(\n      code: RxNormCode, dateRange: Interval,\n      limitCount?: number): Promise<MedicationAdministration[]> {\n    return this.allDataPromise.then(\n        x => this.medicationAdministrationMapByCode.has(code) ?\n            this.medicationAdministrationMapByCode.get(code)\n                .filter(obs => dateRange.contains(obs.timestamp))\n                .slice(0, limitCount ? limitCount : undefined) :\n            []);\n  }\n\n  /**\n   * Returns arbitrary orders for current mock medications.\n   * @param id The id to pull the order from.\n   * TODO(b/117438708): Add more mock medication orders to JSON files for\n   * different medications requested.\n   */\n  getMedicationOrderWithId(id: string): Promise<MedicationOrder> {\n    return this.allDataPromise.then(\n        x => this.medicationOrderMap.has(id) ?\n            this.medicationOrderMap.get(id)[0] :\n            undefined);\n  }\n\n  /**\n   * Gets administrations for specified order id.\n   * @param id The id to pull the order from.\n   */\n  getMedicationAdministrationsWithOrder(id: string):\n      Promise<MedicationAdministration[]> {\n    return this.allDataPromise.then(\n        x => this.medicationAdministrationMapByOrderId.get(id));\n  }\n\n  /**\n   * Gets the encounters for the patient for any encounter that falls in the\n   * given date range.\n   * @param dateRange Return all encounters that covered any time in this\n   *   date range.\n   */\n  getEncountersForPatient(dateRange: Interval): Promise<Encounter[]> {\n    return this.allDataPromise.then(\n        x => this.encounters.filter(\n            encounter => dateRange.intersection(encounter.period) !== null));\n  }\n\n  /**\n   * Prints the current HTML of the graphs rendered to the console.\n   * @param html The inner HTML to keep in the Document.\n   * @param date The date the note was written for.\n   */\n  saveStaticNote(html: string, date: string) {\n    console.log('Save to note button clicked for mock data for date: ' + date);\n    console.log(html);\n  }\n\n  /**\n   * Gets the DiagnosticReports for the patient for any report that falls in\n   * the given date range, whose contained Observations are in the codeGroup\n   * provided.\n   * @param codeGroup The CodeGroup to retrieve DiagnosticReports for.\n   * @param dateRange Return all DiagnosticReports that covered any time in\n   *     this date range.\n   */\n  getDiagnosticReports(\n      codeGroup: BCHMicrobioCodeGroup, dateRange: Interval,\n      limitCount?: number): Promise<DiagnosticReport[]> {\n    return this.allDataPromise.then(x => {\n      let reports = new Array<DiagnosticReport>();\n      for (const code of codeGroup.resourceCodes) {\n        if (this.diagnosticReportMap.has(code)) {\n          reports = reports.concat(this.diagnosticReportMap.get(code));\n        }\n      }\n      reports\n          .filter(\n              report => report.specimens.map(s => s.type)\n                            .find(specimen => specimen === codeGroup.label) !==\n                  undefined)\n          .slice(0, limitCount ? limitCount : undefined);\n      return reports;\n    });\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {InjectionToken} from '@angular/core';\nexport let SMART_ON_FHIR_CLIENT = new InjectionToken('SmartOnFhirClient');\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport * as Color from 'color';\n/**\n * Encodings of the colors for BCH branding.\n * http://www.childrenshospital.org/legal/brand-style-guidelines\n */\n\n\n// Material Colors\nexport const PRIMARY_COLOR = Color.rgb(0, 35, 86);\nexport const SECONDARY_COLOR = Color.rgb(179, 157, 219);\n\nexport const MATERIAL_GREEN = Color.rgb(102, 187, 106);\nexport const MATERIAL_YELLOW = Color.rgb(253, 216, 53);\nexport const MATERIAL_TEAL = Color.rgb(38, 166, 154);\nexport const MATERIAL_ORANGE = Color.rgb(255, 112, 67);\n\n// Core brand colors\nexport const BOSTON_BLUE = Color.rgb(0, 48, 135);\nexport const BOSTON_SKY = Color.rgb(65, 182, 230);\n\n// Brand colors\nexport const BOSTON_YELLOW = Color.rgb(242, 169, 0);\nexport const BOSTON_GREEN = Color.rgb(115, 150, 0);\nexport const BOSTON_INDIGO = Color.rgb(0, 115, 150);\nexport const BOSTON_BAY = Color.rgb(110, 124, 160);\nexport const BOSTON_PINK = Color.rgb(198, 87, 154);\nexport const BOSTON_LAVENDER = Color.rgb(140, 71, 153);\nexport const BOSTON_PURPLE = Color.rgb(128, 34, 95);\n\n\n// Complimentary brand colors\nexport const BOSTON_MORNING = Color.rgb(251, 219, 101);\nexport const BOSTON_MEADOW = Color.rgb(164, 214, 94);\nexport const BOSTON_WARM_GRAY = Color.rgb(197, 185, 172);\n\n// Auxiliary color (only used for emergency, blood, or stop)\nexport const BOSTON_RED = Color.rgb(246, 50, 62);\n\n// Color to indicate a selected item.\n// Material-light version of secondary color.\nexport const SELECTED = Color('#d9ceed');\n\n// Rules for which text colors can be used for which backgrounds\nconst DO_NOT_USE_WHITE_TYPE = [BOSTON_YELLOW, BOSTON_MORNING, Color.WHITE];\nconst DO_NOT_USE_BLACK_TYPE = [BOSTON_BLUE, BOSTON_PURPLE];\nconst CAN_USE_BOSTON_BLUE_TYPE =\n    [BOSTON_SKY, Color.WHITE, BOSTON_MORNING, BOSTON_MEADOW, BOSTON_WARM_GRAY];\nconst CAN_USE_BOSTON_SKY_TYPE = [BOSTON_BLUE];\n\n/**\n * Returns all the colors that are acceptable for data points to be plotted in.\n */\nexport function getDataColors(): Color[] {\n  return [\n    BOSTON_BLUE, BOSTON_YELLOW, BOSTON_GREEN, BOSTON_PINK, BOSTON_PURPLE,\n    BOSTON_INDIGO\n  ];\n}\n","module.exports = \".datePicker {\\n  background-color: white;\\n  padding-top: 20px;\\n}\\n\\n.mat-form-field {\\n  width: 40%;\\n  margin-right: 5%;\\n  margin-left: 5%;\\n}\\n\\n::ng-deep .mat-h2 {\\n  margin-bottom: 0px !important;\\n}\\n\\n/* Remove extra padding below the button. */\\n\\n::ng-deep .mat-mini-fab .mat-button-wrapper {\\n  padding: 0px !important;\\n}\\n\\n::ng-deep .mat-h2 {\\n  margin-bottom: 0px !important;\\n}\\n\\n::ng-deep td.available{\\n  color: black;\\n}\\n\\n::ng-deep td.notInEncounter {\\n  color: grey !important;\\n  opacity: .5;\\n  text-decoration: line-through;\\n}\\n\\n::ng-deep td.inEncounter {\\n  color: rgb(0, 35, 86) !important;\\n  background-color: #e5f3ec;\\n}\\n\\n::ng-deep td.active.available.inEncounter {\\n  color: white !important;\\n}\\n\\ninput {\\n  font-family: 'Quicksand', sans-serif;\\n}\\n\\n/* Change colors of ngx-datepicker to match custom material theme */\\n\\n::ng-deep .ranges button.active {\\n  background-color: rgb(0, 35, 86) !important; /* Primary color */\\n}\\n\\n::ng-deep .md-drppicker .btn {\\n  background-color: rgb(0, 35, 86) !important; /* Primary color */\\n}\\n\\n::ng-deep td.active.available {\\n  background-color: rgb(0, 35, 86) !important; /* Primary color */\\n}\\n\\n.errorIcon {\\n  width: 40px;\\n  height: 40px;\\n  line-height: 40px;\\n  cursor: default;\\n}\"","module.exports = \"<div class=\\\"datePicker\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"mat-h2\\\">\\n  <input type=\\\"button\\\" class=\\\"mat-raised-button\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selected\\\"\\n    [minDate]=\\\"earliestAvailableDate\\\" [maxDate]=\\\"latestAvailableDate\\\" [linkedCalendars]=\\\"true\\\"\\n    [isCustomDate]=\\\"addCustomClass\\\" (datesUpdated)=\\\"datesUpdated($event)\\\" [ranges]=\\\"ranges\\\" [alwaysShowCalendars]=\\\"true\\\"\\n    [keepCalendarOpeningWithRange]=\\\"true\\\" matTooltip=\\\"Change date range\\\" />\\n  <mat-icon *ngIf=\\\"encounterError\\\" class=\\\"errorIcon\\\"\\n    matTooltip=\\\"Unable to retrieve hospital visit dates for this patient. You can select any time period in the past six months.\\\">\\n    warning</mat-icon>\\n</div>\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\nimport {DateTime, Duration, Interval} from 'luxon';\nimport * as moment from 'moment';\nimport {DaterangepickerDirective} from 'ngx-daterangepicker-material';\nimport {APP_TIMESPAN} from 'src/constants';\n\nimport {getDaysForIntervalSet} from '../date_utils';\nimport {FhirService} from '../fhir.service';\n\n/**\n * Date range picker for selecting the time span to show in all the charts.\n *\n * There is a lot of messy date conversion in this class. The problem is that\n * we use luxon DateTime for our date handling across this application, but the\n * date range picker only works with Moment.js datetimes. The only format both\n * classes have converters for is JSDate, so we pass dates through that\n * several places.\n */\n@Component({\n  selector: 'app-timeline-controller',\n  templateUrl: './timeline-controller.component.html',\n  styleUrls: ['./timeline-controller.component.css']\n})\nexport class TimelineControllerComponent implements OnInit {\n  @Output() changeDateRange = new EventEmitter<Interval>();\n  @ViewChild(DaterangepickerDirective)\n  pickerDirective: DaterangepickerDirective;\n\n  selected: {startDate: moment.Moment, endDate: moment.Moment};\n\n  /**\n   * Holds all the ISO strings for days covered by all the patient encounters\n   * above. Used to gray out datepicker options that are not part of\n   * a patient's encounter.\n   */\n  daysCoveredByAnEncounter = new Set<string>();\n\n  /** Bounds the dates that may be selected. */\n  earliestAvailableDate = moment.utc(APP_TIMESPAN.start.toJSDate());\n  readonly latestAvailableDate = moment.utc(APP_TIMESPAN.end.toJSDate());\n\n  /** Selected timespan is past seven days by default. */\n  readonly defaultDateRange = {\n    startDate: moment.utc(\n        DateTime.utc().minus(Duration.fromObject({days: 7})).toJSDate()),\n    endDate: moment.utc(DateTime.utc())\n  };\n\n  /** The list of encounters to display as available ranges to select. */\n  ranges = {};\n\n  /**\n   * Whether there was any error in retrieving the encounters for this patient.\n   */\n  encounterError = false;\n\n  constructor(private renderer: Renderer2, private fhirService: FhirService) {}\n\n  ngOnInit() {\n    this.fhirService.getEncountersForPatient(APP_TIMESPAN)\n        .then(\n            encounters => {\n              this.encounterError = false;\n              if (encounters.length > 0) {\n                // Encounters come in local time.\n                encounters = encounters.sort(\n                    (a, b) =>\n                        a.period.start.toMillis() - b.period.start.toMillis());\n\n                const latestEncounter =\n                    encounters[encounters.length - 1].period;\n                // Make the default selection the latest encounter. It's safe to\n                // not pin this to a date boundary since there should be no data\n                // points that fall outside the time range of the encounter.\n                // We set the time of the dates of the encounter to be 00:00.\n                this.datesUpdated({\n                  startDate: moment(\n                      latestEncounter.start.startOf('day').toUTC().toJSDate()),\n                  endDate: moment.utc(\n                      latestEncounter.end.startOf('day').toUTC().toJSDate())\n                });\n\n                // Set the minimum date to select to be the beginning of the\n                // earliest encounter that had days that fell inside the app\n                // timespan, in UTC.\n                this.earliestAvailableDate =\n                    moment(encounters[0]\n                               .period.start.startOf('day')\n                               .toUTC()\n                               .toJSDate());\n\n                // We have to store everything as an ISO string because if we\n                // store as objects the set membership check doesn't work.\n                this.daysCoveredByAnEncounter = new Set<string>(\n                    getDaysForIntervalSet(encounters.map(x => x.period))\n                        .map(x => x.toISO().slice(0, 10)));\n\n                // We manually update the ranges stored in the daterangepicker\n                // so that the list of encounters is displayed.\n                // We store these in local time to prevent errors with\n                // displaying a date different than the dates of the encounter.\n                // While being communicated with charts, the interval will be\n                // converted to UTC.\n                for (const encounter of encounters) {\n                  const start =\n                      moment(encounter.period.start.startOf('day').toJSDate());\n                  const end =\n                      moment(encounter.period.end.startOf('day').toJSDate());\n                  const label = start.format('MM/DD/YYYY') + '-' +\n                      end.format('MM/DD/YYYY');\n\n                  this.pickerDirective.ranges[label] = [start, end];\n                  this.pickerDirective.picker.ranges[label] = [start, end];\n                  this.ranges[label] = [start, end];\n                  this.pickerDirective.picker.rangesArray.push(label);\n                }\n              } else {\n                this.datesUpdated(this.defaultDateRange);\n              }\n            },\n            reject => {\n              // points that fall outside the time range of the encounter.\n              this.datesUpdated(this.defaultDateRange);\n              this.encounterError = true;\n            });\n  }\n\n  // Clearly differentiate between dates inside and outside of encounters.\n  addCustomClass =\n      (m: moment.Moment) => {\n        return this.daysCoveredByAnEncounter.has(m.toISOString().slice(0, 10)) ?\n            'inEncounter' :\n            'notInEncounter';\n      }\n\n  /**\n   * Emits the date range picked in the date picker as an event.\n   * @param range The date range selected in the picker.\n   */\n  datesUpdated(rangeIn: {startDate: moment.Moment, endDate: moment.Moment}) {\n    if (!rangeIn.startDate || !rangeIn.endDate || !this.selected) {\n      return;\n    }\n    if (rangeIn.startDate.isBefore(rangeIn.endDate)) {\n      this.selected = rangeIn;\n      // Convert to UTC time.\n      const interval = Interval.fromDateTimes(\n          DateTime.fromJSDate(rangeIn.startDate.toDate())\n              .startOf('day')\n              .toUTC(),\n          DateTime.fromJSDate(rangeIn.endDate.toDate()).startOf('day').toUTC());\n      this.changeDateRange.emit(interval);\n    }\n  }\n}\n","module.exports = \"<div style=\\\"float: right; margin-right: 15px\\\" fxLayout=\\\"row\\\">\\n  <div *ngIf=\\\"showMockDataMessage\\\">This is synthesized data used for demo purposes only.</div>\\n  <button mat-icon-button matTooltip=\\\"Launch Tutorial\\\">\\n    <mat-icon class=\\\"toolbarButton\\\" (click)=\\\"openHelpDialog()\\\">help_outline</mat-icon>\\n  </button>\\n  <button mat-icon-button matTooltip=\\\"Save a static image of this page to a PowerChart clinical note\\\">\\n    <mat-icon class=\\\"toolbarButton\\\" (click)=\\\"snapshot()\\\">\\n      save\\n    </mat-icon>\\n  </button>\\n</div>\\n\"","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {Component, EventEmitter, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n\nimport {environment} from '../../environments/environment';\nimport {DisplayGrouping} from '../clinicalconcepts/display-grouping';\nimport {ResourceCodeManager, ResourceCodesForCard} from '../clinicalconcepts/resource-code-manager';\nimport {HelpDialogComponent} from '../help-dialog/help-dialog.component';\n\n@Component({\n  selector: 'app-timeline-toolbar',\n  templateUrl: './timeline-toolbar.component.html',\n})\nexport class TimelineToolbarComponent {\n  readonly displayGroupings: Array<[DisplayGrouping, ResourceCodesForCard[]]>;\n  readonly showMockDataMessage = environment.useMockServer;\n\n  @Output() saveSnapshot = new EventEmitter<null>();\n  @Output() addTextbox = new EventEmitter<null>();\n\n  constructor(\n      resourceCodeManager: ResourceCodeManager, private dialog: MatDialog) {\n    const displayGroups = resourceCodeManager.getDisplayGroupMapping();\n    this.displayGroupings = Array.from(displayGroups.entries());\n  }\n\n  // Emits an event indicating to CardContainer to save a snapshot of the page.\n  snapshot() {\n    this.saveSnapshot.emit();\n  }\n\n  // Emits an event indicating to CardContainer to add a blank textbox at the\n  // top of the page.\n  textbox() {\n    this.addTextbox.emit();\n  }\n\n  openHelpDialog() {\n    const dialogRef = this.dialog.open(HelpDialogComponent);\n  }\n}\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {DateTime, Duration, Interval} from 'luxon';\n/** The period of time this app will search for patient encounters in.  */\nexport const APP_TIMESPAN = Interval.fromDateTimes(\n    DateTime.utc().minus(Duration.fromObject({months: 6})), DateTime.utc());\n\n/** Constants used for FHIR resource types. */\nexport enum FhirResourceType {\n  Encounter = 'Encounter',\n  Observation = 'Observation',\n  MedicationAdministration = 'MedicationAdministration',\n  MedicationOrder = 'MedicationOrder',\n  DocumentReference = 'DocumentReference',\n  Patient = 'Patient',\n  Specimen = 'Specimen',\n  Medication = 'Medication',\n  DiagnosticReport = 'DiagnosticReport'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  useMockServer: true,\n  mockDataFolder: 'demo_data/test_bmedtimeA',\n  mockDataFiles: [\n    'test_bmedtimeA_encounters', 'test_bmedtimeA_med_order',\n    'test_bmedtimeA_med_st', 'test_bmedtimeA_obs_labs',\n    'test_bmedtimeA_obs_vitals'\n  ]\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\nimport 'zone.js/dist/zone-error'; // Included with Angular CLI.\n","// Copyright 2018 Verily Life Sciences Inc.\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(\n    err => console.log(err));\n"],"sourceRoot":""}